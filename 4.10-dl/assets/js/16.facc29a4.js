(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{295:function(t,e,s){t.exports=s.p+"assets/img/f25.32fc445e.png"},322:function(t,e,s){"use strict";s.r(e);var a=s(13),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("strong",[t._v("Generating Kubernetes manifests and ignition files")])]),t._v(" "),e("p",[t._v("The manifests and ignition files define the master node and worker node configuration and are key components of the RH OCP 4 installation.")]),t._v(" "),e("p",[t._v("Prerequisites:")]),t._v(" "),e("p",[t._v("Before creating the manifest files and ignition files, it is necessary to download the RH OCP 4 packages.")]),t._v(" "),e("ul",[e("li",[t._v("Download the required packages on the installer VM with the following playbook:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ansible-playbook -i hosts playbooks/download_ocp_package.yml ")]),t._v("\n")])])]),e("p",[t._v("To generate Kubernetes manifests and ignition files:")]),t._v(" "),e("ol",[e("li",[t._v("Generate Kubernetes manifest file with the following playbook.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ansible-playbook -i hosts playbooks/generate_manifest.yml ")]),t._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("Find the ignition files in the following path:")])]),t._v(" "),e("p",[t._v("/opt/ hpe-solutions-openshift/DL-LTI-Openshift/playbooks/roles/generate_ignition_files/ignitions/")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("When the ignition files are generated, export the kubeconfig file with the following command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# export KUBECONFIG= /opt/ hpe-solutions-openshift/DL-LTI-Openshift/playbooks/roles/generate_ignition_files/ignitions/auth/kubeconfig ")]),t._v("\n")])])]),e("p",[e("strong",[t._v("Installing and configuring iPXE server")])]),t._v(" "),e("p",[t._v("To install and configure an iPXE server:")]),t._v(" "),e("ol",[e("li",[t._v("Browse to the following directory on the Ansible engine.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd /opt/ hpe-solutions-openshift/DL-LTI-Openshift/ ")]),t._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("Enter the values as per your setup in input.yaml file.")]),t._v(" "),e("li",[t._v("Execute the following playbook:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ansible-playbook -i hosts playbooks/deploy_ipxe_ocp.yml ")]),t._v("\n")])])]),e("p",[e("strong",[t._v("Creating bootstrap and master VM on KVM nodes")])]),t._v(" "),e("p",[t._v("To create bootstrap and RH OCP master VMs on your RHEL 8 Kernel-based Virtual Machine (KVM) host:")]),t._v(" "),e("ul",[e("li",[t._v("Run the following virt-install command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# virt-install -n boot --description "boot" --ram=16384 --vcpu=10 --os-type=Linux --os-variant=rhel8.0 --noreboot --disk pool=home,bus=virtio,size=100 --serial pty --console pty --pxe --network bridge=bridge0,mac=<mac address> ')]),t._v("\n")])])]),e("p",[t._v("Waiting for the bootstrap process to complete")]),t._v(" "),e("p",[t._v("The bootstrap process for RH OCP begins after the cluster nodes first boot into the persistent RHCOS environment that has been installed to disk. The configuration information provided through the ignition config files is used to initialize the bootstrap process and install RH OCP on the machines. You must wait for the bootstrap process to complete.")]),t._v(" "),e("ol",[e("li",[t._v("Login to the installer VM as root user.")]),t._v(" "),e("li",[t._v("Execute the following command to bootstrap the nodes:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# openshift-install wait-for bootstrap-complete --log-level=debug ")]),t._v("\n")])])]),e("p",[t._v("The following output is displayed:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("DEBUG OpenShift Installer v4.10 \n\nDEBUG Built from commit 425e4ff0037487e32571258640b39f56d5ee5572 \n\nINFO Waiting up to 30m0s "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the Kubernetes API at https://api.ocp.pxelocal.local:6443"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". \n\nINFO API v1.23.3+e419edf up \n\nINFO Waiting up to 30m0s "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" bootstrapping to complete"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". \n\nDEBUG Bootstrap status: complete \n\nINFO It is now safe to remove the bootstrap resources \n")])])]),e("p",[e("strong",[t._v("NOTE")])]),t._v(" "),e("p",[t._v("Shut down or remove the bootstrap node after step 1 and step 2 are complete.")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("Provide the PV storage for the registry. Set the image registry storage to an empty directory with the following command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# oc patch configs.imageregistry.operator.openshift.io cluster --type merge --patch \'{"spec":{"storage":{"emptyDir":{}}}}\'  ')]),t._v("\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Complete the RH OCP 4 cluster installation with the following command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# openshift-install wait-for install-complete --log-level=debug ")]),t._v("\n")])])]),e("p",[t._v("The following output is displayed:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("DEBUG OpenShift Installer v4.10 \n\nDEBUG Built from commit 6ed04f65b0f6a1e11f10afe658465ba8195ac459  \n\nINFO Waiting up to 30m0s "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the cluster at https://api.rrocp.pxelocal.local:6443 to initialize"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".  \n\nDEBUG Still waiting "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the cluster to initialize: Working towards "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.10")]),t._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("% complete  \n\nDEBUG Still waiting "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the cluster to initialize: Working towards "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.10")]),t._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("% complete, waiting on authentication, console,image-registry  \n\nDEBUG Still waiting "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the cluster to initialize: Working towards "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.10")]),t._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("% complete  \n\nDEBUG Still waiting "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the cluster to initialize: Working towards "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.10")]),t._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("% complete, waiting on image-registry  \n\nDEBUG Still waiting "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the cluster to initialize: Cluster operator image-registry is still updating  \n\nDEBUG Still waiting "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the cluster to initialize: Cluster operator image-registry is still updating  \n\nDEBUG Cluster is initialized  \n\nINFO Waiting up to 10m0s "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the openshift-console route to be created"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". \n\nDEBUG Route found "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" openshift-console namespace: console  \n\nDEBUG Route found "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" openshift-console namespace: downloads  \n\nDEBUG OpenShift console route is created  \n\nINFO Install complete"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("  \n\nINFO Access the OpenShift web-console here: https://console-openshift-console.apps.ocp.isv.local \n\nINFO Login to the console with user: kubeadmin, password: a6hKv-okLUA-Q9p3q-UXLc3 \n")])])]),e("p",[t._v("The RH OCP cluster is successfully installed.")]),t._v(" "),e("p",[e("strong",[t._v("Running Red Hat OpenShift Container Platform Console")]),t._v(" \nPrerequisites:")]),t._v(" "),e("ul",[e("li",[t._v("The RH OCP cluster installation must be complete.")])]),t._v(" "),e("p",[e("strong",[t._v("NOTE")])]),t._v(" "),e("p",[t._v("The installer machine provides the Red Hat OpenShift Container Platform Console link and login details when the RH OCP cluster installation is complete.")]),t._v(" "),e("p",[t._v("To access the Red Hat OpenShift Container Platform Console:")]),t._v(" "),e("ol",[e("li",[t._v("Open a web browser and enter the following link:")])]),t._v(" "),e("p",[t._v("https://console-openshift-console.apps.ocp.isv.local")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("Log in to the Red Hat OpenShift Container Platform Console with the following credentials:")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Username")]),t._v(": kubeadmin")]),t._v(" "),e("li",[e("strong",[t._v("Password:")]),t._v(" a6hKv-okLUA-Q9p3q-UXLc3")])]),t._v(" "),e("p",[e("strong",[t._v("NOTE")])]),t._v(" "),e("p",[t._v("If the password is lost or forgotten, search for the kubeadmin-password file located in the /opt/ hpe-solutions-openshift/DL-LTI-Openshift/playbooks/roles/generate_ignition_files/ignitions/auth/kubeadmin-password directory on the installer machine.")]),t._v(" "),e("p",[t._v("The following figure shows the Red Hat OpenShift Container Platform Console after successful deployment:")]),t._v(" "),e("p",[e("img",{attrs:{src:s(295),alt:""}})]),t._v(" "),e("p",[e("strong",[t._v("FIGURE 25")]),t._v(". Red Hat OpenShift Container Platform Console login screen")]),t._v(" "),e("p",[e("strong",[t._v("Adding RHEL 8.5 compute machines to RH OCP cluster")])]),t._v(" "),e("p",[e("strong",[t._v("Creating RHEL 7.9 installer machine on head nodes")])]),t._v(" "),e("p",[t._v("To create a RHEL7.9 VM for adding RHEL 8.5 workers to the RH OCP cluster:")]),t._v(" "),e("ul",[e("li",[t._v("Run the following command on your RHEL 8 KVM host using the virt-install utility:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# virt-install --name Installer --memory 2048 --vcpus 2 --disk size=80 --os-variant rhel7.0 --cdrom /home/username/Downloads/RHEL7.iso ")]),t._v("\n")])])]),e("p",[e("strong",[t._v("Setting up RHEL 7.9 installer machine")])]),t._v(" "),e("p",[t._v("To set up the installer machine running RHEL 7.9 and run the playbook:")]),t._v(" "),e("ol",[e("li",[t._v("Log in to the RHEL7.9 Installer Machine and then register and attach the host pool with Red Hat using the following command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# subscription-manager register ")]),t._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("Generate a list of available subscriptions using the following command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# subscription-manager list --available --matches '*OpenShift*' ")]),t._v("\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("Find the pool ID for RH OCP subscription from the output generated in step 2 and add it in the following command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# subscription-manager attach --pool=<pool_id> ")]),t._v("\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Enable the repositories required by RH OCP 4.10 with the following commands:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# subscription-manager repos \\ ")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--enable")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rhel-7-server-rpms"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--enable")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rhel-7-server-extras-rpms"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--enable")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rhel-7-server-ansible-2.9-rpms"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--enable")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rhel-7-server-ose-4.10-rpms"')]),t._v(" \n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[t._v("Install the required packages including openshift-ansible.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yum install openshift-ansible openshift-clients jq ")]),t._v("\n")])])]),e("p",[e("strong",[t._v("Setting up RHEL compute node")])]),t._v(" "),e("p",[t._v("Prerequisites:")]),t._v(" "),e("ul",[e("li",[t._v("The RHEL 8.5 OS must be deployed on the compute nodes.")])]),t._v(" "),e("p",[t._v("To set up a RHEL compute node for each worker node:")]),t._v(" "),e("ol",[e("li",[t._v("Log in to the RHEL host and then register and attach the host pool with Red Hat using the following command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# subscription-manager register ")]),t._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("Generate a list of available subscriptions using the following command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# subscription-manager list --available --matches '*OpenShift*' ")]),t._v("\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("Find the pool ID for RH OCP subscription from the output generated in step 2 and add it in the following command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# subscription-manager attach --pool=<pool_id> ")]),t._v("\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Enable the repositories required by RH OCP 4.10 with the following commands:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# subscription-manager repos \\ ")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--enable")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rhel-8-for-x86_64-baseos-rpms"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--enable")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rhel-8-for-x86_64-appstream-rpms"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--enable")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rhocp-4.10-for-rhel-8-x86_64-rpms"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--enable")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fast-datapath-for-rhel-8-x86_64-rpms"')]),t._v(" \n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[t._v("Stop and disable firewalld on the host.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl disable --now firewalld.service ")]),t._v("\n")])])]),e("p",[e("strong",[t._v("Adding RHEL compute node to RH OCP cluster using RHEL 7.9 installer machine")])]),t._v(" "),e("p",[t._v("This section covers the steps to add compute machines that use Red Hat Enterprise Linux 8 as the operating system to an RH OCP 4.10 cluster.")]),t._v(" "),e("p",[t._v("Prerequisites:")]),t._v(" "),e("ul",[e("li",[t._v("The required packages must be installed, and the necessary configuration must be performed on the RHEL 7.9 installer machine.")]),t._v(" "),e("li",[t._v("RHEL hosts must be prepared for installation.")])]),t._v(" "),e("p",[t._v("To add RHEL 8 worker nodes manually to an existing cluster using RHEL 7.9 installer VM machine:")]),t._v(" "),e("ol",[e("li",[t._v("Create an Ansible inventory file in the path/inventory/hosts directory. This inventory file defines your compute machine hosts and the required variables:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("all:vars"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Specify the username that runs the Ansible tasks on the remote compute machines. ")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ansible_user=root ")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you do not specify root for the ansible_user, you must set ansible_become to True and assign the user sudo permissions. ")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ansible_become")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("True \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Specify the path and file name of the kubeconfig file for your cluster. ")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("openshift_kubeconfig_path")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~/.kube/config"')]),t._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List each RHEL machine to add to your cluster. You must provide the fully-qualified domain name for each host. This name is the hostname that the cluster uses to access the machine, so set the correct public or private name to access the machine.  ")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("new_workers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n\nworker1.ocp.isv.local \n\nworker2.ocp.isv.local \n\nworker3.ocp.isv.local \n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("Navigate to the Ansible playbook directory:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd /usr/share/ansible/openshift-ansible ")]),t._v("\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("Run the following playbook to add RHEL 8 worker nodes to the existing cluster:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ansible-playbook -i /<path>/inventory/hosts playbooks/scaleup.yml ")]),t._v("\n")])])]),e("p",[t._v("For path, specify the path to the Ansible inventory file that you created.")]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Verify that the worker nodes are added to the cluster using the following command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# oc get nodes ")]),t._v("\n")])])]),e("p",[t._v("The following output is displayed:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("NAME\t\t\tSTATUS\tROLES\t\tAGE\tVERSION \n\nmaster0.ocp.isv.local\tReady\tmaster,worker\t13d\tv1.23.3+e419edf \n\nmaster1.ocp.isv.local\tReady\tmaster,worker\t13d\tv1.23.3+e419edf \n\nmaster2.ocp.isv.local\tReady\tmaster,worker\t13d\tv1.23.3+e419edf \n\nworker1.ocp.isv.local\tReady\tworker\t\t23h\tv1.23.5+3afdacb \n\nworker2.ocp.isv.local\tReady\tworker\t\t23h\tv1.23.5+3afdacb \n\nworker3.ocp.isv.local\tReady\tworker\t\t23h\tv1.23.5+3afdacb \n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[t._v("Once the worker nodes are added to the cluster, set the mastersSchedulable parameter as false to ensure that the master nodes are not used to schedule pods.")]),t._v(" "),e("li",[t._v("Edit the schedulers.config.openshift.io resource.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# oc edit schedulers.config.openshift.io cluster ")]),t._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("Configure the mastersSchedulable parameter.")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" config.openshift.io/v1  \n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Scheduler  \n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("creationTimestamp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" “2019"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("09"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("10T03"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("04"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v('05Z" \n\n'),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("generation")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1 \n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cluster \n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resourceVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' “433" \n\n'),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selfLink")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /apis/config.openshift.io/v1/schedulers/cluster \n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" a636d30a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("d377"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("11e9"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("88d4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("0a60097bee62 \n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mastersSchedulable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" false  \n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("policy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' “" \n\n'),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("status")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),e("p",[e("strong",[t._v("NOTE")])]),t._v(" "),e("p",[t._v("Set the mastersSchedulable to true to allow Control Plane nodes to be schedulable or false to disallow Control Plane nodes to be schedulable.")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("Save the file to apply the changes.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# oc get nodes ")]),t._v("\n")])])]),e("ul",[e("li",[t._v("The following output is displayed:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("NAME\t\t\tSTATUS\tROLES\tAGE\tVERSION \n\nmaster0.ocp.isv.local\tReady\tmaster\t13d\tv1.23.3+e419edf \n\nmaster1.ocp.isv.local\tReady\tmaster\t13d\tv1.23.3+e419edf \n\nmaster2.ocp.isv.local\tReady\tmaster\t13d\tv1.23.3+e419edf \n\nworker1.ocp.isv.local\tReady\tworker\t23h\tv1.23.5+3afdacb \n\nworker2.ocp.isv.local\tReady\tworker\t23h\tv1.23.5+3afdacb \n\nworker3.ocp.isv.local\tReady\tworker\t23h\tv1.23.5+3afdacb \n")])])]),e("p",[e("strong",[t._v("NOTE")])]),t._v(" "),e("p",[t._v("To add more worker nodes, update the worker details in HAProxy and BIND DNS on head nodes and then add RHEL 8.5 worker nodes to the RH OCP cluster. For more information on adding worker nodes, see the "),e("a",{attrs:{href:"bookmark://_Adding_RHEL_compute"}},[t._v("Adding RHEL compute node to OpenShift cluster")]),t._v(" section.")]),t._v(" "),e("p",[t._v("For information on using storage on RH OCP cluster, see "),e("a",{attrs:{href:"bookmark://_Solution_deployment_using"}},[t._v("Solution deployment using storage")]),t._v(" section.")]),t._v(" "),e("p",[t._v("To deploy a sample NGINX application on RH OCP 4.10 using Ephemeral storage, see the "),e("a",{attrs:{href:"bookmark://_Deploying_sample_application"}},[t._v("Deploying sample application on OCP 4.10 using Ephemeral storage")]),t._v(" section.")])])}),[],!1,null,null,null);e.default=n.exports}}]);