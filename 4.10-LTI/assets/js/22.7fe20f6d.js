(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{312:function(t,s,e){"use strict";e.r(s);var n=e(13),a=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"preparing-the-execution-environment-for-rhocp-worker3-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preparing-the-execution-environment-for-rhocp-worker3-node"}},[t._v("#")]),t._v(" Preparing the execution environment for RHOCP worker3 node")]),t._v(" "),s("p",[t._v("Prerequisites:")]),t._v(" "),s("ul",[s("li",[t._v("RedHat Enterprise Linux8.6 must be"),s("a",{attrs:{href:"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/performing_a_standard_rhel_8_installation/index",target:"_blank",rel:"noopener noreferrer"}},[t._v("installed and registered"),s("OutboundLink")],1),t._v(" on your host machine")]),t._v(" "),s("li",[t._v("Configure "),s("strong",[t._v("BOND > VLAN > Bridge")])])]),t._v(" "),s("p",[s("strong",[t._v("Setting up RHEL 8.6 installer machine")])]),t._v(" "),s("p",[t._v("This section assumes the following considerations for our deployment environment:")]),t._v(" "),s("ul",[s("li",[t._v("A server running Red Hat Enterprise Linux (RHEL) 8.6 exists within the deployment environment and is accessible to the installation user to be used as an installer machine. This server must have internet connectivity.")]),t._v(" "),s("li",[t._v("A virtual machine is used to act as an installer machine and the same host is utilized as an Ansible Engine host. We are using one of the worker3 machines as an installer machine to execute Ansible Playbook.")])]),t._v(" "),s("p",[t._v("Prerequisites:")]),t._v(" "),s("p",[t._v("RHEL 8.6 installer machine must have the following configurations:")]),t._v(" "),s("ol",[s("li",[t._v('The installer machine must have at least 500 GB disk space (especially in the "/" partition), 4 CPU cores and 16 GB RAM.')]),t._v(" "),s("li",[t._v("RHEL 8.6 installer machine must be subscribed with valid Red Hat credentials. To register the installer machine for the Red Hat subscription, run the following command:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" subscription-manager register "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--username")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--password")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --auto-attach \n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("Sync time with NTP server.")]),t._v(" "),s("li",[t._v("SSH key pair must be available on the installer machine. If the SSH key is not available, generate a new SSH key pair with the following command:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ssh-keygen \n")])])]),s("p",[t._v("To set up the installer machine:")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("Create and activate a Python3 virtual environment for deploying this solution with the following commands:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ python3 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" venv "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("virtual_environment_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("virtual_environment_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/bin/activate \n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("Download the OpenShift repositories using the following commands in the Ansible Engine:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /opt \n\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /opt \n\n$ yum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" \n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" https://github.com/HewlettPackard/hpe-solutions-openshift.git "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("Setup the installer machine to configure the nginx, development tools, and other python packages required for LTI installation. Navigate to the /opt/hpe-solutions-openshift/DL-LTI-Openshift/ directory and run the following command:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" setup.sh \n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("As part of setup.sh script it will create nginx service, so user must download and copy Rhel 8.5 and Rhel 7.9 DVD ISO toÂ "),s("strong",[t._v("/usr/share/nginx/html/")])]),t._v(" "),s("li",[s("strong",[t._v("Creating and deleting logical drives")])])]),t._v(" "),s("p",[t._v("Create and delete logical drives on the head nodes following below steps.")]),t._v(" "),s("p",[s("strong",[t._v("Input File Update:-")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(". User has to update the input.yaml "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /opt/ISV-Openshit/create_delete_logicaldrives directory to  execute the logical drive script.\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(". User needs to update all the details "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the input.yaml "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" include:-\n\n\n\t\tILOServers:\n\n\t\t\t- ILOIP: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t\tILOuser: admin\n\n\t\t\t\tILOPassword: Password\n\n\t\t\t\tcontroller: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("  \n\n\t\t\t\tRAID: Raid1\n\n\t\t\t\tPhysicalDrives: 1I:1:1,1I:1:2  \n\n\t\t\t- ILOIP: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t\tILOuser: admin\n\n\t\t\t\tILOPassword: Password\n\n\t\t\t\tcontroller: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n\t\t\t\tRAID: Raid1\n\n\t\t\t\tPhysicalDrives: 1I:3:1,1I:3:2\n\n\t\t\t- ILOIP: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t\tILOuser: admin\n\n\t\t\t\tILOPassword: Password\n\n\t\t\t\tcontroller: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v("\n\n\t\t\t\tRAID: Raid1\n\n\t\t\t\tPhysicalDrives: 1I:3:1,1I:3:2   \n")])])]),s("p",[s("strong",[t._v("Note:-")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(". To "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" controller "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" login to the respective ILO -"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" System Information -"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Storage tab where inside Location "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" the **slot number** as the controller id. \n\n\t\t\t "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example - Slot = 12 ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(". To "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" the PhysicalDrives login to the respective ILO -"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" System Information -"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Storage tab inside Unconfigured Drives where under Location you can deduce PhysicalDrives based on these information:\n\n\n\n\t\t "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Slot: 12:Port=1I:Box=1:Bay=1")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example - 1I:1:1 ('Port:Box:Bay')")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Slot: 12:Port=1I:Box=1:Bay=2")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example - 1I:1:2 ('Port:Box:Bay') ")]),t._v("\n")])])]),s("p",[s("strong",[t._v("Playbook Execution:-")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("To delete all the existing logical drives "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the server "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" any and to create new logical drives named "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'RHEL Boot Volume'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" respective ILO servers run the site.yml playbook inside create_delete_logicaldrives directory with the below mentioned "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("                   \n\n\t\t\t$ ansible-playbook site.yml \n")])])]),s("p",[s("strong",[t._v("Note:-Â For server type ProLiant DL360 Gen10, Bonding_Interface1 = eno5 Bonding_Interface2 = eno6. For server type ProLiant DL365 Gen10 Plus, Bonding_Interface1 = ens2 Bonding_Interface2 = ens3")])]),t._v(" "),s("p",[t._v("We can provide the input variables in any one of the below methods")]),t._v(" "),s("p",[t._v("Method 1.Â "),s("strong",[t._v("Input.py : Automation way of taking input")])]),t._v(" "),s("p",[t._v("This method will parse the inputs from json files generated from SCID tool.")]),t._v(" "),s("ol",[s("li",[t._v("Copy base-Configuration.json and ocp.json to working directory (/opt/ISV-OpenShift)")]),t._v(" "),s("li",[t._v("Go to the directory /opt/ISV-OpenShift and run the below command.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("   python ocpParser.py\n")])])]),s("p",[t._v("Here it will prompt for values which are not obtained from SCID json files.")]),t._v(" "),s("p",[t._v("A sample input collection through ocpParser.py is as follows.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("   Name of the file: input.yaml\n\n\tEnter HTTP_server_base_url with installer IP "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Example: http://InstallerIP/ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": http://172.28.*.*/\n\n\tEnter HTTP_file_path "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" /usr/share/nginx/html/\n\n\tEnter Operating System "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" rhel8\n\n\tEnter Operating System Image name "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" rhel-8.5-x86_64-dvd.iso\n\n\tEnter Base Kickstart "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" path "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" /opt/ISV-Openshift/playbooks/roles/rhel8_os_deployment/tasks/ks_rhel8.cfg\n\n\tEnter RedHat Subscription Details\n\n\tEnter Valid Redhat Subscription Username "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" ******\n\n\tEnter Valid  Redhat Subscription Password "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" ******\n\n\tEnter Pool ID "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" Redhat OpenShift Container Platform "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" 8a*****\n\n\tEnter common details\n\n\tEnter DNS reverse zone "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Example: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("230.28")]),t._v(".192.in-addr.arpa "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("230.28")]),t._v(".192.in-addr.arpa\n\n\tEnter the customer forwarder DNS fqdn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Example: resolver.companycorp.net "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" resolver.companycorp.net\n\n\tEnter worker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" used as installer "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Example: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.28")]),t._v(".230.16 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.28")]),t._v(".230.16\n\n\tEnter Upstream DNS Forwarder Details\n\n\tEnter the customer"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s first upstream DNS forwarder ip : 16.153.*.*\n\n\tEnter the customer'")]),t._v("s second upstream DNS forwarder "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.53")]),t._v(".*.*\n\n\tEnter the ocp version "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.10")]),t._v(".16\n\n\tEnter redhat pull secret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" Installer machine public key\n\n\tEnter Redhat pull secret "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" single quotes "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Login to the RedHat Portal and get the pull secret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n\n\tEnter the Installer machine public key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" single quotes "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Generate using "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ssh-keygen'")]),t._v(" and provide the pub key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n\n\tEnter base path Directory\n\n\tEnter base path "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" single quotes "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Example: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/opt/ISV-OpenShift'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": /opt/ISV-OpenShift\n\n\tEnter dhcp range that is used "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" OCP nodes\n\n\tEnter comma separated values of dhcp range that is used "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" OCP nodes "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Example: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.28")]),t._v(".230.10,192.28.230.24 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.28")]),t._v(".230.10,192.28.230.24\n\n\tName of the file: hosts\n")])])]),s("p",[t._v("After execution of ocpParser.py, it will generate input.yaml and hosts file in the same location.")]),t._v(" "),s("p",[t._v("Method 2.Â "),s("strong",[t._v("Input.yaml: Manually editing input file")])]),t._v(" "),s("p",[t._v("Go to the directory /opt/ISV-OpenShift, here we will have input_sample.yaml and hosts_sample files")]),t._v(" "),s("p",[t._v("Rename those two files as input.yaml and hosts and open the files and fill the values as per your setup.")]),t._v(" "),s("p",[t._v("A sample input.yaml file is as follows with a few filled parameters.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\t\t\t - Server_serial_number: 2M20510XXX\n\n\t\t\t\tILO_Address: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t\tILO_Username: admin\n\n\t\t\t\tILO_Password: *****\n\n\t\t\t\tHostname: headnode1.XX.XX                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ex. headnode1.isv.local")]),t._v("\n\n\t\t\t\tHost_Username: root\n\n\t\t\t\tHost_Password: ******\n\n\t\t\t\tBonding_Interface1: eno5\n\n\t\t\t\tBonding_Interface2: eno6\n\n\t\t\t\tHost_OS_disk: sda\n\n\t\t\t\tHost_VlanID: ***\n\n\t\t\t\tHost_IP: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t\tHost_Netmask: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),t._v(".*.*.*\n\n\t\t\t\tHost_Prefix: XX                          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ex. 8,24,32")]),t._v("\n\n\t\t\t\tHost_Gateway: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t\tHost_DNS: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t\tHost_Domain: XX.XX                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ex. isv.com")]),t._v("\n\n\t\t\t\tcorporate_proxy: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#provide corporate proxy, ex. proxy.houston.hpecorp.net")]),t._v("\n\n\t\t\t\tcorporate_proxy_port: XX               "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#corporate proxy port no, ex. 8080")]),t._v("\n\n\t\t\t\tconfig:\n\n\t\t\t\tHTTP_server_base_url: http://172.28.*.*/  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Installer IP address")]),t._v("\n\n\t\t\t\tHTTP_file_path: /usr/share/nginx/html/    \n\n\t\t\t\tOS_type: rhel8\n\n\t\t\t\tOS_image_name: rhel-8.5-x86_64-dvd.iso\n\n\t\t\t\tbase_kickstart_filepath: /opt/ISV-OpenShift-develop/playbooks/roles/rhel8_os_deployment/tasks/ks_rhel8.cfg\n")])])]),s("p",[t._v("A sampleÂ "),s("strong",[t._v("hosts")]),t._v("Â files is as follows")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\t\t   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kvm_nodes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ansible_host"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rhel7_installerVM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("binddns_masters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("binddns_slaves"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("masters_info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\t\t\tmaster1 "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ip")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.* "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("hostname")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("headnode1\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("slaves_info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\t\t\tslave1 "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ip")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.* "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("hostname")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("headnode2\n\n\t\t\tslave2 "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ip")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.* "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("hostname")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("headnode3\n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);