(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{210:function(t,s,e){"use strict";e.r(s);var a=e(0),o=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("The Lite Touch Installation (LTI) package includes Ansible playbooks with scripts to add the RH CoreOS worker nodes to the RHOCP cluster. You can use one of the following two methods to add the RH CoreOS worker nodes:")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._m(3),t._v(" "),t._m(4),t._v(" "),s("p",[t._v("The following table includes the purpose of each playbook required for the deployment:")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),s("p",[t._v("To run individual playbooks do one of the following:")]),t._v(" "),t._m(7),t._v(" "),s("p",[t._v("For example, add the following comments in the site.yaml file to deploy RH CoreOS on the worker nodes:")]),t._v(" "),t._m(8),s("p",[t._v("OR")]),t._v(" "),s("p",[t._v("Run the individual YAML files using the following command:")]),t._v(" "),t._m(9),s("p",[t._v("For example, run the following YAML file to deploy RHEL 8.6 OS on the worker nodes:")]),t._v(" "),t._m(10),s("p",[t._v("For more information on executing individual playbooks, see the consecutive sections.")]),t._v(" "),t._m(11),t._v(" "),s("p",[t._v("This section covers the steps to Enable KVM hypervisor on Worker Nodes and add RHCOS worker VM nodes to an existing Red Hat OpenShift Container Platform cluster.")]),t._v(" "),t._m(12),t._v(" "),s("p",[t._v("This installer VM was created as a KVM VM on one of the head nodes using the rhel8_installerVM.yml playbook. For more information, see the "),s("router-link",{attrs:{to:"./../Solution-Deployment/OCP-Cluster-deployment.html#creating-rhel-8-installer-machine"}},[t._v("Creating RHEL 8 installer machine")]),t._v(" section.")],1),t._v(" "),t._m(13),t._v(" "),t._m(14),t._m(15),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),s("p",[t._v("OR")]),t._v(" "),t._m(20),t._v(" "),t._m(21),t._m(22),t._v(" "),t._m(23),t._v(" "),s("p",[t._v("The administrator needs to approve the CSR requests generated by each kubelet.")]),t._v(" "),s("p",[t._v("You can approve all Pending CSR requests using below command")]),t._v(" "),t._m(24),t._m(25),t._v(" "),t._m(26),t._m(27),t._v(" "),t._m(28)])}),[function(){var t=this._self._c;return t("h1",{attrs:{id:"adding-rh-coreos-worker-nodes-to-rhocp-cluster-using-ansible-playbooks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#adding-rh-coreos-worker-nodes-to-rhocp-cluster-using-ansible-playbooks"}},[this._v("#")]),this._v(" "),t("strong",[this._v("Adding RH CoreOS worker nodes to RHOCP cluster using Ansible playbooks")])])},function(){var t=this._self._c;return t("ul",[t("li",[t("strong",[this._v("Run a consolidated playbook:")]),this._v(" This method includes a single playbook, site.yml, that contains a script to perform all the tasks for adding the RH CoreOS worker nodes to the existing RHOCP cluster. To run LTI using a consolidated playbook:")])])},function(){var t=this._self._c;return t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[this._v("$ ansible-playbook "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[this._v("-i")]),this._v(" hosts site.yml --ask-vault-pass\n")])])])},function(){var t=this._self._c;return t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("NOTE")]),this._v(" "),t("p",[this._v("The default password for the Ansible vault file is "),t("strong",[this._v("changeme")])])])},function(){var t=this._self._c;return t("ul",[t("li",[t("strong",[this._v("Run individual playbooks:")]),this._v(" This method includes multiple playbooks with scripts that enable you to deploy specific tasks for adding the RH CoreOS worker nodes to the existing RHOCP cluster. The playbooks in this method must be executed in a specific sequence to add the worker nodes.")])])},function(){var t=this._self._c;return t("p",[t("strong",[this._v("TABLE 9.")]),this._v(" Playbook Description")])},function(){var t=this,s=t._self._c;return s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("Playbook")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("rhel8_os_deployment.yml")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("This playbook contains the scripts to deploy RHEL 8.6 OS on baremetal servers.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("copy_ssh_workernode.yml")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("This playbook contains the script to copy the ssh public key from installer machine to the KVM worker nodes.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("prepare_rhel_hosts.yml")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("This playbook contains the script to prepare KVM worker nodes with required packages and subscription.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ntp.yml")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("This playbook contains the script to create NTP setup on KVM worker nodes to make sure time synchronization.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("binddns.yml")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("This playbook contains the script to deploy bind dns on three head nodes and it will work as both Active & Passive.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("haproxy.yml")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("This playbook contains the script to deploy haproxy on the head nodes and it will act as Active.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("storage_pool.yml")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("This playbook contains the script to create the storage pools on the KVM Worker nodes.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("deploy_ipxe_ocp.yml")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("This playbook contains the script to deploy the ipxe code on the RHEL8 installer machine.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ocp_rhcosworkervm.yml")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("This playbook contains the script to add kvm based coreos nodes to exsting Openshift cluster.")])])])])},function(){var t=this._self._c;return t("ol",[t("li",[this._v("Edit site.yaml file and add a comment for all the playbooks except the ones that you want to execute.")])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("import_playbook: playbooks/rhel8_os_deployment.yml\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# import_playbook: playbooks/copy_ssh_workernode.yml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# import_playbook: playbooks/prepare_rhel_hosts.yml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# import_playbook: playbooks/ntp.yml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# import_playbook: playbooks/binddns.yml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# import_playbook: playbooks/haproxy.yml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# import_playbook: playbooks/storage_pool.yml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# import_playbook: playbooks/deploy_ipxe_ocp.yml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# import_playbook: playbooks/ocp_rhcosworkervm.yml")]),t._v("\n")])])])},function(){var t=this._self._c;return t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[this._v("$ ansible-playbook "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[this._v("-i")]),this._v(" hosts playbooks/"),t("span",{pre:!0,attrs:{class:"token operator"}},[this._v("<")]),this._v("yaml_filename"),t("span",{pre:!0,attrs:{class:"token operator"}},[this._v(">")]),this._v(".yml --ask-vault-pass\n")])])])},function(){var t=this._self._c;return t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[this._v("$ ansible-playbook "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[this._v("-i")]),this._v(" hosts playbooks/rhel8_os_deployment.yml --ask-vault-pass\n")])])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"adding-rh-coreos-worker-nodes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#adding-rh-coreos-worker-nodes"}},[this._v("#")]),this._v(" "),t("strong",[this._v("Adding RH CoreOS worker nodes")])])},function(){var t=this._self._c;return t("ol",[t("li",[this._v("Login to the Installer VM.")])])},function(){var t=this._self._c;return t("ol",{attrs:{start:"2"}},[t("li",[this._v("Navigate to the $BASE_DIR("),t("strong",[this._v("/opt/hpe-solutions-openshift/DL-LTI-Openshift/")]),this._v(") directory, then copy "),t("strong",[this._v("input file and hosts")]),this._v(" file to $BASE_DIR/coreos_kvmworker_nodes/ and later update ocp worker details in input file and kvm_workernodes group as per sample host file.")])])},function(){var t=this._self._c;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("ansible-vault edit input.yaml\n")])])])},function(){var t=this._self._c;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("vi hosts\n\t'[kvm_workernodes]\n\tKVMworker1 IP\n\tKVMworker2 IP\n\tKVMworker3 IP'\n")])])])},function(){var t=this._self._c;return t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("NOTE")]),this._v(" "),t("p",[this._v("ansible vault password is "),t("strong",[this._v("changeme")])])])},function(){var t=this._self._c;return t("ol",{attrs:{start:"3"}},[t("li",[this._v("Copy RHEL 8.6 DVD ISO to the /usr/share/nginx/html/ directory.")]),this._v(" "),t("li",[this._v("Navigate to the /opt/hpe-solutions-openshift/DL-LTI-Openshift/coreos_kvmworker_nodes/ directory add the worker nodes to the cluster using one of the following methods:")])])},function(){var t=this._self._c;return t("ul",[t("li",[this._v("Run the following sequence of playbooks:")])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\tansible-playbook "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" hosts playbooks/rhel8_os_deployment.yml --ask-vault-pass\n\tansible-playbook "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" hosts playbooks/copy_ssh_workernode.yml --ask-vault-pass\n\tansible-playbook "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" hosts playbooks/prepare_rhel_hosts.yml --ask-vault-pass\n\tansible-playbook "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" hosts playbooks/ntp.yml --ask-vault-pass\n\tansible-playbook "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" hosts playbooks/binddns.yml --ask-vault-pass\n\tansible-playbook "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" hosts playbooks/haproxy.yml --ask-vault-pass\n\tansible-playbook "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" hosts playbooks/storage_pool.yml --ask-vault-pass\n\tansible-playbook "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" hosts playbooks/deploy_ipxe_ocp.yml --ask-vault-pass\n\tansible-playbook "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" hosts playbooks/ocp_rhcosworkervm.yml --ask-vault-pass\n")])])])},function(){var t=this._self._c;return t("ul",[t("li",[this._v("If you want to deploy the entire solution to add the RH CoreOS worker nodes to the cluster, execute the following playbook:")])])},function(){var t=this._self._c;return t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[this._v("$ ansible-playbook "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[this._v("-i")]),this._v(" hosts site.yml --ask-vault-pass\n")])])])},function(){var t=this._self._c;return t("ol",{attrs:{start:"5"}},[t("li",[this._v("After successful execution of all playbooks, check the node status as below.")])])},function(){var t=this._self._c;return t("p",[t("strong",[this._v("Approving server certificates (CSR) for newly added nodes")])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ oc get csr "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.items[] | select(.status == {} ) | .metadata.name'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("xargs")]),t._v(" oc adm certificate approve\n")])])])},function(){var t=this._self._c;return t("ol",{attrs:{start:"6"}},[t("li",[this._v("Later, Verify Node status using below command:")])])},function(){var t=this._self._c;return t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[this._v("$ oc get nodes\n")])])])},function(){var t=this._self._c;return t("ol",{attrs:{start:"7"}},[t("li",[this._v("Execute the following command to set the parameter mastersSchedulable parameter as false, so that master nodes will not be used to schedule pods.")])])},function(){var t=this._self._c;return t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[this._v("$ oc edit scheduler\n")])])])}],!1,null,null,null);s.default=o.exports}}]);