(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{452:function(e,t,s){e.exports=s.p+"assets/img/figure122.4b20b089.png"},453:function(e,t,s){e.exports=s.p+"assets/img/figure123.333bfc20.png"},454:function(e,t,s){e.exports=s.p+"assets/img/figure124.69ea05e2.png"},520:function(e,t,s){"use strict";s.r(t);var r=s(54),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"hpecp-cluster-integration-with-nimble"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hpecp-cluster-integration-with-nimble"}},[e._v("#")]),e._v(" HPECP Cluster Integration with Nimble")]),e._v(" "),r("p",[e._v("The HPE CSI(Container Storage Interface) Driver for Kubernetes allows user to use a "),r("a",{attrs:{href:"https://scod.hpedev.io/container_storage_provider/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Container Storage Provider"),r("OutboundLink")],1),e._v(" (CSP) to perform data management operations on storage resources. We will be using Nimbule as a backend storage to perform the data Management Operation for the individual Kubernets cluster.")]),e._v(" "),r("p",[r("strong",[e._v("Installing the CSI Drivers")])]),e._v(" "),r("p",[e._v("These object configuration files are common for version of Kubernetes.")]),e._v(" "),r("ul",[r("li",[e._v("Worker node IO settings.")])]),e._v(" "),r("p",[e._v("kubectl create -f "),r("a",{attrs:{href:"https://raw.githubusercontent.com/hpe-storage/co-deployments/master/yaml/csi-driver/v1.3.0/hpe-linux-config.yaml",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://raw.githubusercontent.com/hpe-storage/co-deployments/master/yaml/csi-driver/v1.3.0/hpe-linux-config.yaml"),r("OutboundLink")],1)]),e._v(" "),r("ul",[r("li",[e._v("Container Storage Provider:")])]),e._v(" "),r("p",[e._v("kubectl create -f "),r("a",{attrs:{href:"https://raw.githubusercontent.com/hpe-storage/co-deployments/master/yaml/csi-driver/v1.3.0/nimble-csp.yaml",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://raw.githubusercontent.com/hpe-storage/co-deployments/master/yaml/csi-driver/v1.3.0/nimble-csp.yaml"),r("OutboundLink")],1)]),e._v(" "),r("ul",[r("li",[e._v("Kubernetes 1.18")])]),e._v(" "),r("p",[e._v("kubectl create -f "),r("a",{attrs:{href:"https://raw.githubusercontent.com/hpe-storage/co-deployments/master/yaml/csi-driver/v1.3.0/hpe-csi-k8s-1.18.yaml",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://raw.githubusercontent.com/hpe-storage/co-deployments/master/yaml/csi-driver/v1.3.0/hpe-csi-k8s-1.18.yaml"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("strong",[e._v("Adding HPE Storage Backend")])]),e._v(" "),r("p",[e._v("Once the CSI driver is deployed, two additional objects needs to be created to get started with dynamic provisioning of persistent storage, a Secret and a StorageClass.")]),e._v(" "),r("p",[r("strong",[e._v("Secret parameters")])]),e._v(" "),r("p",[e._v("All parameters are mandatory and described below.")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",{staticStyle:{"text-align":"center"}},[r("strong",[e._v("Parameter")])]),e._v(" "),r("th",{staticStyle:{"text-align":"center"}},[r("strong",[e._v("Description")])])])]),e._v(" "),r("tbody",[r("tr",[r("td",{staticStyle:{"text-align":"center"}},[e._v("serviceName")]),e._v(" "),r("td",{staticStyle:{"text-align":"center"}},[e._v('This hostname or IP address where the Container Storage Provider (CSP) is running, usually a Kubernetes Service, such as "nimble-csp-svc" or "primera3par-csp-svc"')])]),e._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"center"}},[e._v("servicePort")]),e._v(" "),r("td",{staticStyle:{"text-align":"center"}},[e._v("This is port the serviceName is listening to.")])]),e._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"center"}},[e._v("Backend")]),e._v(" "),r("td",{staticStyle:{"text-align":"center"}},[e._v("This is the management hostname or IP address of the actual backend storage system, such as a Nimble or 3PAR array.")])]),e._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"center"}},[e._v("username")]),e._v(" "),r("td",{staticStyle:{"text-align":"center"}},[e._v("Backend storage system username with the correct privileges to perform storage management.")])]),e._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"center"}},[e._v("password")]),e._v(" "),r("td",{staticStyle:{"text-align":"center"}},[e._v("Backend storage system password.")])])])]),e._v(" "),r("p",[e._v("1.Create the secret")]),e._v(" "),r("p",[r("strong",[e._v("custom-secret.yaml")])]),e._v(" "),r("p",[e._v("apiVersion: v1")]),e._v(" "),r("p",[e._v("kind: Secret")]),e._v(" "),r("p",[e._v("metadata:")]),e._v(" "),r("p",[r("code"),e._v("name: custom-secret")]),e._v(" "),r("p",[r("code"),e._v("namespace: kube-system")]),e._v(" "),r("p",[e._v("stringData:")]),e._v(" "),r("p",[r("code"),e._v("serviceName: nimble-csp-svc")]),e._v(" "),r("p",[r("code"),e._v('servicePort: "8080"')]),e._v(" "),r("p",[r("code"),e._v("backend: 10.0.2.100")]),e._v(" "),r("p",[r("code"),e._v("username: admin")]),e._v(" "),r("p",[r("code"),e._v("password: admin")]),e._v(" "),r("p",[e._v("\\2. Execute below command to create custom secret file")]),e._v(" "),r("p",[r("code"),e._v("kubectl create -f custom-secret.yaml")]),e._v(" "),r("p",[e._v("\\3. We can see the secret in the “kube-system” Namespace\n"),r("img",{attrs:{src:s(452),alt:""}})]),e._v(" "),r("p",[e._v("\\4. Create the StorageClass with the custome Secret")]),e._v(" "),r("p",[e._v('To use the new Secret "custom-secret", create a new StorageClass using the Secret and the necessary StorageClass parameters.')]),e._v(" "),r("p",[e._v("\\5. Sample StorageClass.yaml file")]),e._v(" "),r("p",[e._v("apiVersion: storage.k8s.io/v1")]),e._v(" "),r("p",[e._v("kind: StorageClass")]),e._v(" "),r("p",[e._v("metadata:")]),e._v(" "),r("p",[r("code"),e._v("name: hpe-custom")]),e._v(" "),r("p",[e._v("provisioner: csi.hpe.com")]),e._v(" "),r("p",[e._v("parameters:")]),e._v(" "),r("p",[r("code"),e._v("csi.storage.k8s.io/fstype: xfs")]),e._v(" "),r("p",[r("code"),e._v("csi.storage.k8s.io/controller-expand-secret-name: custom-secret")]),e._v(" "),r("p",[r("code"),e._v("csi.storage.k8s.io/controller-expand-secret-namespace: kube-system")]),e._v(" "),r("p",[r("code"),e._v("csi.storage.k8s.io/controller-publish-secret-name: custom-secret")]),e._v(" "),r("p",[r("code"),e._v("csi.storage.k8s.io/controller-publish-secret-namespace: kube-system")]),e._v(" "),r("p",[r("code"),e._v("csi.storage.k8s.io/node-publish-secret-name: custom-secret")]),e._v(" "),r("p",[r("code"),e._v("csi.storage.k8s.io/node-publish-secret-namespace: kube-system")]),e._v(" "),r("p",[r("code"),e._v("csi.storage.k8s.io/node-stage-secret-name: custom-secret")]),e._v(" "),r("p",[r("code"),e._v("csi.storage.k8s.io/node-stage-secret-namespace: kube-system")]),e._v(" "),r("p",[r("code"),e._v("csi.storage.k8s.io/provisioner-secret-name: custom-secret")]),e._v(" "),r("p",[r("code"),e._v("csi.storage.k8s.io/provisioner-secret-namespace: kube-system")]),e._v(" "),r("p",[r("code"),e._v('description: "Volume created by using a custom Secret with the HPE CSI Driver for Kubernetes"')]),e._v(" "),r("p",[e._v("reclaimPolicy: Delete")]),e._v(" "),r("p",[e._v("allowVolumeExpansion: true")]),e._v(" "),r("p",[e._v("\\6. Run below command to create storage class.")]),e._v(" "),r("p",[r("code"),e._v("kubectl create -f  StorageClass.yaml\n"),r("img",{attrs:{src:s(453),alt:""}})]),e._v(" "),r("p",[e._v("\\7. Create the PersistentVolumeClaim")]),e._v(" "),r("p",[e._v("Create a PersistentVolumeClaim. This object declaration ensures a PersistentVolume is created and provisioned.")]),e._v(" "),r("p",[r("strong",[e._v("PersistentVolumeClaim.yaml")])]),e._v(" "),r("p",[e._v("apiVersion: v1")]),e._v(" "),r("p",[e._v("kind: PersistentVolumeClaim")]),e._v(" "),r("p",[e._v("metadata:")]),e._v(" "),r("p",[r("code"),e._v("name: my-first-pvc")]),e._v(" "),r("p",[e._v("spec:")]),e._v(" "),r("p",[r("code"),e._v("accessModes:")]),e._v(" "),r("p",[r("code"),e._v("- ReadWriteOnce")]),e._v(" "),r("p",[r("code"),e._v("resources:")]),e._v(" "),r("p",[r("code"),e._v("requests:")]),e._v(" "),r("p",[r("code"),e._v("storage: 32Gi")]),e._v(" "),r("p",[r("code"),e._v("storageClassName: hpe-custom")]),e._v(" "),r("p",[e._v("kubectl create -f "),r("strong",[e._v("PersistentVolumeClaim.yaml")]),e._v(" "),r("img",{attrs:{src:s(454),alt:""}})]),e._v(" "),r("p",[e._v("\\8. Create the Pods")]),e._v(" "),r("p",[e._v("kind: Pod")]),e._v(" "),r("p",[e._v("apiVersion: v1")]),e._v(" "),r("p",[e._v("metadata:")]),e._v(" "),r("p",[r("code"),e._v("name: my-pod")]),e._v(" "),r("p",[e._v("spec:")]),e._v(" "),r("p",[r("code"),e._v("containers:")]),e._v(" "),r("p",[r("code"),e._v("- name: pod-datelog-1")]),e._v(" "),r("p",[r("code"),e._v("image: nginx")]),e._v(" "),r("p",[r("code"),e._v('command: ["bin/sh"]')]),e._v(" "),r("p",[r("code"),e._v('args: ["-c", "while true; do date >> /data/mydata.txt; sleep 1; done"]')]),e._v(" "),r("p",[r("code"),e._v("volumeMounts:")]),e._v(" "),r("p",[r("code"),e._v("- name: export1")]),e._v(" "),r("p",[r("code"),e._v("mountPath: /data")]),e._v(" "),r("p",[r("code"),e._v("- name: pod-datelog-2")]),e._v(" "),r("p",[r("code"),e._v("image: debian")]),e._v(" "),r("p",[r("code"),e._v('command: ["bin/sh"]')]),e._v(" "),r("p",[r("code"),e._v('args: ["-c", "while true; do date >> /data/mydata.txt; sleep 1; done"]')]),e._v(" "),r("p",[r("code"),e._v("volumeMounts:")]),e._v(" "),r("p",[r("code"),e._v("- name: export1")]),e._v(" "),r("p",[r("code"),e._v("mountPath: /data")]),e._v(" "),r("p",[r("code"),e._v("volumes:")]),e._v(" "),r("p",[r("code"),e._v("- name: export1")]),e._v(" "),r("p",[r("code"),e._v("persistentVolumeClaim:")]),e._v(" "),r("p",[r("code"),e._v("claimName: my-first-pvc")]),e._v(" "),r("p",[e._v("\\9. Once the pods are deployment we can list the running pods.")]),e._v(" "),r("p",[r("code"),e._v("kubectl get pods")]),e._v(" "),r("p",[r("code"),e._v("These pods will be using the above created pv’s for their data storage which reside on HPE Nimble Storage in the backend.")])])}),[],!1,null,null,null);t.default=a.exports}}]);