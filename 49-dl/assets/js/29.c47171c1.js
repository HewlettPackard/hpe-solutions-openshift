(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{533:function(e,t,o){"use strict";o.r(t);var r=o(54),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"red-hat-ocp-worker-nodes"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#red-hat-ocp-worker-nodes"}},[e._v("#")]),e._v(" Red Hat OCP worker nodes")]),e._v(" "),o("p",[e._v("This section covers the steps to add RHCOS worker nodes to an existing OpenShift Container Platform 4 cluster.")]),e._v(" "),o("h4",{attrs:{id:"prerequisites"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),o("ol",[o("li",[e._v("A Red Hat OpenShift Container Platform 4 cluster is available within the deployment environment.")]),e._v(" "),o("li",[e._v("A worker node ignition file is generated along with the bootstrap and master ignition files. Refer to the section [Kubernetes manifests and ignition files](C:\\Users\\ramanl\\Documents\\OCP PI 6 deployment guide\\Preparing the execution environment\\Preparing the execution environment.html#kubernetes-manifests-and-ignition-files) in this document for details on generating manifest and ignition files.")])]),e._v(" "),o("p",[o("strong",[e._v("NOTE")])]),e._v(" "),o("p",[e._v("It is important to use the "),o("em",[e._v("worker.ign")]),e._v(" ignition file generated along with the "),o("em",[e._v("master.ign")]),e._v(" file used to create the OpenShift cluster. If this is not the case, then “certificate signing requests” in OpenShift will not recognize these worker nodes.")]),e._v(" "),o("ol",[o("li",[e._v("A working node is available that needs to be attached to the existing OpenShift cluster and used as the worker node.")])]),e._v(" "),o("h4",{attrs:{id:"procedure"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#procedure"}},[e._v("#")]),e._v(" Procedure")]),e._v(" "),o("ol",[o("li",[e._v("Login to the installer VM as non-root user.")]),e._v(" "),o("li",[e._v("Execute the following command to get the nodes associated with the OpenShift cluster.")])]),e._v(" "),o("p",[e._v("$ export KUBECONFIG=$BASE_DIR/installer/ignitions/auth/kubeconfig \n$ export PATH=$PATH:$BASE_DIR/installer/library/openshift_components\n$ oc get nodes")]),e._v(" "),o("p",[e._v("The output is as follows.")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("NAME STATUS ROLES AGE VERSION\n\nmaster1.ocp.twentynet.local Ready master,worker 5d v1.14.6+888f9c630\n\nmaster2.ocp.twentynet.local Ready master,worker 5d v1.14.6+888f9c630\n\nmaster3.ocp.twentynet.local Ready master,worker 5d v1.14.6+888f9c630 \n")])])]),o("ol",[o("li",[e._v("Since the worker node is booted with the existing worker ignition file, the node is recognized by the current OpenShift cluster. However, the certificate signing request is pending. Execute the following command to get the certificate signing requests.")])]),e._v(" "),o("p",[e._v("$ oc get csr")]),e._v(" "),o("ol",[o("li",[e._v("The output is as follows.")])]),e._v(" "),o("p",[e._v("NAME AGE REQUESTOR CONDITION")]),e._v(" "),o("p",[e._v("csr-8pj6k 28m system:node:worker1.ocp.twentynet.local Pending")]),e._v(" "),o("p",[e._v("csr-9pj7c 28m system:node:worker2.ocp.twentynet.local Pending")]),e._v(" "),o("p",[e._v("csr-9pj1s 28m system:node:worker3.ocp.twentynet.local Pending")]),e._v(" "),o("ol",[o("li",[e._v("Execute the following command to approve all of the pending certificate signing requests and to add the worker nodes to the cluster.")])]),e._v(" "),o("p",[e._v("$ oc get csr | awk '{print $1}'| while read line; do ./oc adm certificate approve $line; done")]),e._v(" "),o("ol",[o("li",[e._v("Verify that the certificate signing requests for the worker nodes are approved using the following command.")])]),e._v(" "),o("p",[e._v("$ oc get csr")]),e._v(" "),o("ol",[o("li",[e._v("The output is as follows.")])]),e._v(" "),o("p",[e._v("NAME AGE REQUESTOR CONDITION")]),e._v(" "),o("p",[e._v("csr-8pj6k 28m system:node:worker1.ocp.twentynet.local Approved,Issued")]),e._v(" "),o("p",[e._v("csr-9pj7c 28m system:node:worker2.ocp.twentynet.local Approved,Issued")]),e._v(" "),o("p",[e._v("csr-9pj1s 28m system:node:worker3.ocp.twentynet.local Approved,Issued")]),e._v(" "),o("ol",[o("li",[e._v("Verify that the worker nodes are added to the cluster using the following command.")])]),e._v(" "),o("p",[e._v("$ oc get nodes")]),e._v(" "),o("ol",[o("li",[e._v("The output is as follows.")])]),e._v(" "),o("p",[e._v("NAME STATUS ROLES AGE VERSION")]),e._v(" "),o("p",[e._v("master1.ocp.twentynet.local Ready master,worker 5d v1.14.6+888f9c630")]),e._v(" "),o("p",[e._v("master2.ocp.twentynet.local Ready master,worker 5d v1.14.6+888f9c630")]),e._v(" "),o("p",[e._v("master3.ocp.twentynet.local Ready master,worker 5d v1.14.6+888f9c630")]),e._v(" "),o("p",[e._v("worker1.ocp.twentynet.local Ready worker 5d v1.14.6+888f9c630")]),e._v(" "),o("p",[e._v("worker2.ocp.twentynet.local Ready worker 5d v1.14.6+888f9c630")]),e._v(" "),o("p",[e._v("worker3.ocp.twentynet.local Ready worker 5d v1.14.6+888f9c630")]),e._v(" "),o("ol",[o("li",[e._v("Execute the following command to set the parameter "),o("em",[e._v("mastersSchedulable")]),e._v(" parameter as "),o("em",[e._v("false")]),e._v(", so that master nodes will not be used to schedule pods.")])]),e._v(" "),o("p",[e._v("$ oc edit scheduler")]),e._v(" "),o("ol",[o("li",[e._v("The output is as follows.")])]),e._v(" "),o("p",[e._v("apiVersion: config.openshift.io/v1")]),e._v(" "),o("p",[e._v("kind: Scheduler")]),e._v(" "),o("p",[e._v("metadata:")]),e._v(" "),o("p",[e._v('creationTimestamp: "2019-12-13T10:34:48Z"')]),e._v(" "),o("p",[e._v("generation: 2")]),e._v(" "),o("p",[e._v("name: cluster")]),e._v(" "),o("p",[e._v('resourceVersion: "1748652"')]),e._v(" "),o("p",[e._v("selfLink: /apis/config.openshift.io/v1/schedulers/cluster")]),e._v(" "),o("p",[e._v("uid: 30245db9-1d94-11ea-8066-000c29c3ee8e")]),e._v(" "),o("p",[e._v("spec:")]),e._v(" "),o("p",[e._v("**mastersSchedulable: false **")]),e._v(" "),o("p",[e._v("policy:")]),e._v(" "),o("p",[e._v('name: ""')]),e._v(" "),o("p",[e._v("status: {}")]),e._v(" "),o("ol",[o("li",[e._v("Execute the following command to verify the master roles have been reset.")])]),e._v(" "),o("p",[e._v("$ oc get nodes")]),e._v(" "),o("ol",[o("li",[e._v("The output is as follows.")])]),e._v(" "),o("p",[e._v("NAME STATUS ROLES AGE VERSION")]),e._v(" "),o("p",[e._v("master1.ocp.twentynet.local Ready master 5d v1.14.6+888f9c630")]),e._v(" "),o("p",[e._v("master2.ocp.twentynet.local Ready master 5d v1.14.6+888f9c630")]),e._v(" "),o("p",[e._v("master3.ocp.twentynet.local Ready master 5d v1.14.6+888f9c630")]),e._v(" "),o("p",[e._v("worker1.ocp.twentynet.local Ready worker 5d v1.14.6+888f9c630")]),e._v(" "),o("p",[e._v("worker2.ocp.twentynet.local Ready worker 5d v1.14.6+888f9c630")]),e._v(" "),o("p",[e._v("worker3.ocp.twentynet.local Ready worker 5d v1.14.6+888f9c630")]),e._v(" "),o("h1",{attrs:{id:"adding-rhel-8-worker-nodes"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#adding-rhel-8-worker-nodes"}},[e._v("#")]),e._v(" Adding RHEL 8 worker nodes")]),e._v(" "),o("p",[e._v("This section covers the steps to add RHEL 8 worker nodes to an existing Red Hat OpenShift Container Platform 4 cluster.")]),e._v(" "),o("h4",{attrs:{id:"prerequisites-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites-2"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),o("ol",[o("li",[e._v("Ensure the required packages are installed and any necessary configuration is performed on the installer VM. Refer to the section [Installer machine](C:\\Users\\ramanl\\Documents\\OCP PI 6 deployment guide\\Preparing the execution environment\\Preparing the execution environment.html#installer-machine) of this document for details on the prerequisites and configuration steps.")]),e._v(" "),o("li",[e._v("RHEL nodes are prepared for installation. Refer to the section [Preparingpreparing worker nodes with RHEL](file:///C:\\Users\\ramanl\\Documents\\OCP%20PI%206%20deployment%20guide\\Physical%20node%20configuration\\Physical%20node%20configuration.html#preparing-worker-nodes-with-rhel) of this document for details on preparing the RHEL 8 worker nodes.")])]),e._v(" "),o("h4",{attrs:{id:"procedure-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#procedure-2"}},[e._v("#")]),e._v(" Procedure")]),e._v(" "),o("p",[e._v("Perform the following steps on the installer VM:")]),e._v(" "),o("ol",[o("li",[o("p",[e._v("Download the Red Hat OpenShift Container Platform 4 Ansible package to enable the addition of RHEL 8 worker nodes to an existing OpenShift cluster.")]),e._v(" "),o("p",[e._v("$ sudo yum install openshift-ansible openshift-clients jq")])]),e._v(" "),o("li",[o("p",[e._v("Create an Ansible inventory file exclusively for adding RHEL worker nodes that is named "),o("em",[e._v("path/inventory/hosts")]),e._v(" that defines your compute machine nodes and required variables as listed.")]),e._v(" "),o("p",[e._v("[all:vars]")]),e._v(" "),o("p",[o("em",[e._v("# Username that runs the Ansible tasks on the remote compute machines")])]),e._v(" "),o("p",[o("em",[e._v("# ansible_user=root")])]),e._v(" "),o("p",[o("em",[e._v("# If you do not specify root for the ansible_user")])]),e._v(" "),o("p",[o("em",[e._v("# you must set ansible_become to True and assign the user sudo permissions.")])]),e._v(" "),o("p",[e._v("ansible_become=True")]),e._v(" "),o("p",[o("em",[e._v("# Path to the kubeconfig file for your cluster")])]),e._v(" "),o("p",[e._v('openshift_kubeconfig_path="~/.kube/config"')]),e._v(" "),o("p",[o("em",[e._v("# FQDN of each RHEL machine to add to the cluster")])]),e._v(" "),o("p",[e._v("[new_workers]")]),e._v(" "),o("p",[e._v("worker-0.example.com")]),e._v(" "),o("p",[e._v("worker-1.example.com")])]),e._v(" "),o("li",[o("p",[e._v("Execute the following commands to run the playbook which adds RHEL 8 worker nodes to the existing cluster.")]),e._v(" "),o("p",[e._v("$ cd /usr/share/ansible/openshift-ansible\n$ ansible-playbook -i path to inventory hosts file  playbooks/scaleup.yml")])])]),e._v(" "),o("h4",{attrs:{id:"approving-the-certificate-signing-requests-for-your-machines"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#approving-the-certificate-signing-requests-for-your-machines"}},[e._v("#")]),e._v(" Approving the certificate signing requests for your machines")]),e._v(" "),o("p",[e._v("When new machines are added to the cluster, pending certificate signing requests (CSRs) are generated for each machine that is added. Confirm these CSRs are approved. You can also approve the CSR if necessary.")]),e._v(" "),o("h4",{attrs:{id:"prerequisites-3"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites-3"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),o("ul",[o("li",[e._v("jq package is installed.")])]),e._v(" "),o("h4",{attrs:{id:"procedure-3"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#procedure-3"}},[e._v("#")]),e._v(" Procedure")]),e._v(" "),o("ol",[o("li",[o("p",[e._v("Confirm that the cluster recognizes the machines by executing the following command. The output lists all of the machines that have been created.")]),e._v(" "),o("p",[e._v("$ oc get nodes")]),e._v(" "),o("p",[e._v("NAME STATUS ROLES AGE VERSION")]),e._v(" "),o("p",[e._v("master-0 Ready master 63m v1.14.6+c4799753c")]),e._v(" "),o("p",[e._v("master-1 Ready master 63m v1.14.6+c4799753c")]),e._v(" "),o("p",[e._v("master-2 Ready master 64m v1.14.6+c4799753c")]),e._v(" "),o("p",[e._v("worker-0 NotReady worker 76s v1.14.6+c4799753c")]),e._v(" "),o("p",[e._v("worker-1 NotReady worker 70s v1.14.6+c4799753c")])]),e._v(" "),o("li",[o("p",[e._v("Review the pending CSRs and ensure that there is a client and server request with Pending or Approved status for each machine added to the cluster.")]),e._v(" "),o("p",[e._v("$ oc get csr")]),e._v(" "),o("p",[e._v("NAME AGE REQUESTOR CONDITION")]),e._v(" "),o("p",[e._v("csr-8b2br 15m system:serviceaccount:openshift-machine-config-operator:node-bootstrapper Pending")]),e._v(" "),o("p",[e._v("csr-8vnps 15m system:serviceaccount:openshift-machine-config-operator:node-bootstrapper Pending")]),e._v(" "),o("p",[e._v("csr-bfd72 5m26s system:node:ip-10-0-50-126.us-east-2.compute.internal Pending")]),e._v(" "),o("p",[e._v("csr-c57lv 5m26s system:node:ip-10-0-95-157.us-east-2.compute.internal Pending")]),e._v(" "),o("p",[e._v("Since the CSRs rotate automatically, it is important to approve the CSRs within an hour of adding the machines to the cluster. If the CSRs are not approved within an hour, the certificates will rotate, and more than two certificates will be present for each node. All certificates must be approved. After the initial CSRs are approved, the subsequent node client CSRs are automatically approved by the cluster kube-controller-manager.")]),e._v(" "),o("p",[e._v("To approve CSRs individually, run the following command for each valid CSR. In this example, csr_name is the name of a CSR from the list of current CSRs.")]),e._v(" "),o("p",[e._v("$ oc adm certificate approve csr_name")]),e._v(" "),o("p",[e._v("If all CSRs are valid, approve all of them by running the following command.")]),e._v(" "),o("p",[e._v("$ oc get csr -ojson | jq -r '.items[] | select(.status == {} ) | .metadata.name' | xargs oc adm certificate approve")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);