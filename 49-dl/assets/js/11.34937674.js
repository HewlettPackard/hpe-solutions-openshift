(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{438:function(t,a,e){t.exports=e.p+"assets/img/figure126.9b316a3c.png"},439:function(t,a,e){t.exports=e.p+"assets/img/figure127.14216c6e.png"},440:function(t,a,e){t.exports=e.p+"assets/img/figure128.145f77d7.png"},441:function(t,a,e){t.exports=e.p+"assets/img/figure129.60fc6c80.png"},442:function(t,a,e){t.exports=e.p+"assets/img/figure130.5c93e99d.png"},518:function(t,a,e){"use strict";e.r(a);var s=e(54),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"openshift-operators"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#openshift-operators"}},[t._v("#")]),t._v(" OpenShift operators")]),t._v(" "),s("p",[t._v("Prerequisites")]),t._v(" "),s("ul",[s("li",[t._v("Red Hat OpenShift Container Platform 4.9 console")]),t._v(" "),s("li",[t._v("Availability of any Storage Class (Nimble, 3PAR, Local Storage, and OCS) in OpenShift Container Platform.")]),t._v(" "),s("li",[t._v("Python 3.6.x should be available on installer VM.")]),t._v(" "),s("li",[t._v("'Ansible' and 'Requests' python modules.")])]),t._v(" "),s("h2",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),s("p",[t._v("Operators are pieces of software that ease the operational complexity of running other pieces of software. They act like an extension of the software vendor's engineering team, watching over a Kubernetes environment (such as OpenShift Container Platform) and using the current state to make decisions in real-time. Any container implementation requires certain operators that need to be enabled for use by the end user. This requirement is satisfied by using a combination of Python and Shell scripts and their execution for automating the installation of these operators.")]),t._v(" "),s("p",[t._v("Hewlett Packard Enterprise has deployed the following operators in an automated fashion:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Kiali Operator")])]),t._v(" "),s("li",[s("p",[t._v("Jaeger Operator")])]),t._v(" "),s("li",[s("p",[t._v("Red Hat OpenShift Service Mesh")])]),t._v(" "),s("li",[s("p",[t._v("Prometheus Operator")])]),t._v(" "),s("li",[s("p",[t._v("Grafana Operator")])]),t._v(" "),s("li",[s("p",[t._v("Elasticsearch Operator")])]),t._v(" "),s("li",[s("p",[t._v("Fluentd Operator (Cluster Logging)")])]),t._v(" "),s("li",[s("p",[t._v("Kibana Operator (Cluster Logging)")])])]),t._v(" "),s("h3",{attrs:{id:"scripts-for-configuring-the-operators"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scripts-for-configuring-the-operators"}},[t._v("#")]),t._v(" Scripts for configuring the operators")]),t._v(" "),s("p",[t._v("NOTE")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("BASE_DIR is the directory path for all automated scripts and the path is /opt/hpe/solutions/ocp/hpe-solutions-openshift/DL/scalable\n")])])]),s("p",[t._v("This section provides details on the scripts developed to automate the installation of operators on the OpenShift Container Platform cluster. The scripts to install operators can be found in the installer VM at "),s("em",[t._v("BASE_DIR/platform/operator_install")]),t._v(".")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("deploy_validate_operators.py")]),t._v(" - Main python script which installs and validates the required operators.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Install_odf_operator.py")]),t._v(" -- Main python script which installs Local Storage operator, OpenShift Container Storage operators, creates file system & block storage and also creates SCs, PVs, PVCs.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("config.py")]),t._v(" - Python script to convert user input values into program variables for usage by the deploy_validate_operators.py script.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("userinput.json")]),t._v(" - Input json file filled by the installation user.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("config_secrets.json")]),t._v(" -- Encrypted input json file filled by the installer user.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("create_local_storage_operator.yaml")]),t._v(" - Creates Local Storage operator's Namespace, installs Local Storage operator.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("local_storage_fs.yaml")]),t._v(" - Creates file system storage for monitoring ODF cluster.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("local_storage_block.yaml")]),t._v(" - Creates block storage for claiming OSD persistent volumes.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("ODF_operator.yaml")]),t._v(" - This playbook creates OpenShift Container Storage Namespace, block storage for bounding PVC to Storage Class.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("storage_ODF.yaml")]),t._v(" - This playbook creates storage classes, PVCs (Persistent Volume Claim), pods to bring up the ODF cluster.")])])]),t._v(" "),s("h3",{attrs:{id:"installing-the-operators-on-the-openshift-container-platform-cluster"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installing-the-operators-on-the-openshift-container-platform-cluster"}},[t._v("#")]),t._v(" Installing the operators on the OpenShift Container Platform cluster")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Login to the Ansible Installer virtual machine as a non-root user and browse to Python virtual environment.")])]),t._v(" "),s("li",[s("p",[t._v("Update the "),s("em",[t._v("config_secrets.json")]),t._v(" file found at "),s("em",[t._v("$BASE_DIR/platform/operator_install")]),t._v(" with the following setup configuration details:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" OPENSHIFT_USERNAME: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("OpenShift Container Platform cluster username"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" OPENSHIFT_PASSWORD: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("OpenShift Container Platform cluster password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Update the "),s("em",[t._v("userinput.json")]),t._v(" file found at "),s("em",[t._v("$BASE_DIR/platform/operator_install")]),t._v(" with the following setup\nconfiguration details:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("OPENSHIFT_DOMAIN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <OpenShift Server sub domain fqdn (api.domain.base_domain)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("OPENSHIFT_PORT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <OpenShift Server port number (OpenShift Container Platform runs on port 6443 by default)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("OPENSHIFT_OPERATOR_LIST")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jaeger-product"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kiali-ossm"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"servicemeshoperator"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"grafana-operator"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prometheus"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("elasticsearch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('operator"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cluster-logging"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("OPERATOR_CHANNEL_LIST")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stable"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stable"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alpha"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"beta"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4.9"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4.9"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("OPERATOR_SOURCE_LIST")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redhat-operators"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redhat-operators"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redhat-operators"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"community-operators"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"community-operators"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redhat-operators"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redhat-operators"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("OPERATOR_INSTALL_PLAN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automatic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automatic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automatic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automatic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automatic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automatic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automatic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("OPENSHIFT_PROJECT_NAME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <OpenShift Project Name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("OPENSHIFT_CLIENT_PATH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" < OpenShift OC client tool path (leave it empty if a path has been set)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("OPENSHIFT_STORAGE_CLASS_NAME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" < provide the storage class name to be used by the cluster logging operator "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("NOTE")]),t._v(" "),s("p",[t._v("The operator list, channel details, operator source, and install plans can be used if the user wants to install additional operators. For the default installation of the required operators, the user should not modify these fields.")])]),t._v(" "),s("li",[s("p",[t._v("Execute the following command to install the operators discussed in the "),s("a",{attrs:{href:"#Introduction"}},[t._v("Introduction")]),t._v(" section of this document.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$BASE_DIR")]),t._v("/platform/operator_install\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" python –W ignore deploy_validate_operators.py\n")])])]),s("p",[t._v("The output of the above command is as follows:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" python -W ignore deploy_validate_operators.py\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Enter key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" encrypted variables:\nLogging into your OpenShift Cluster\nSuccessfully logged into the OpenShift Cluster\nToken is generated\nCreating Operators"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nCreating Operator jaeger-product\nCreating Operator kiali-ossm\nCreating Operator servicemeshoperator\nCreating Operator grafana-operator\nCreating Operator prometheus\nCreating Operator elasticsearch-operator\nCreating Operator cluster-logging\nValidating Operators"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nThe Required Operators have been Created\n\nDeploying Service Mesh Control Plane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\nCreated Service Mesh Control Plane\nValidating Control Plane Creation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nControl Plane is present and validated"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\nDeploying Service Mesh Member Roll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nCreated Service Mesh Member Roll\nValidating Member Roll Creation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nMember roll is present and validated"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\nDeploying Logging Cluster"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nCreated Logging instance\nValidating Cluster Logging Instance Creation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nCluster Logging Instance is present and validated"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\nAUTOMATION IS COMPLETE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n$\n​```\n\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"validation-of-the-operator-installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#validation-of-the-operator-installation"}},[t._v("#")]),t._v(" Validation of the operator installation")]),t._v(" "),s("p",[t._v("The required operators will be created after the execution of the script and they will be reflected in the OpenShift console. This section outlines the steps to verify the operators created through script and are reflected in the GUI:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Login to the "),s("strong",[t._v("OpenShift Console")]),t._v(" as the user with administrative privileges.")])]),t._v(" "),s("li",[s("p",[t._v("Navigate to "),s("strong",[t._v("Operators")]),t._v(" -> "),s("strong",[t._v("Installed")]),t._v(" "),s("strong",[t._v("Operators")]),t._v(" -> select your project name.")])]),t._v(" "),s("li",[s("p",[t._v("The operators will be displayed in the OpenShift web console as shown in below figure.")]),t._v(" "),s("p",[s("img",{attrs:{src:e(438),alt:""}})])]),t._v(" "),s("li",[s("p",[t._v('To view the cluster-logging operator and its instance, navigate to "openshift-logging" project name. below figure shows the cluster-logging operator in the OpenShift web console.')]),t._v(" "),s("p",[s("img",{attrs:{src:e(439),alt:""}})])]),t._v(" "),s("li",[s("p",[t._v("Steps to verify the installation of cluster-logging and EFK pods:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Switch to the "),s("strong",[t._v("Workloads → Pods")]),t._v(" page ( inside the "),s("strong",[t._v("openshift-logging")]),t._v(" project).")])]),t._v(" "),s("li",[s("p",[t._v("You should see several pods for cluster logging: Elasticsearch, Fluentd, and Kibana as shown in below figure")]),t._v(" "),s("p",[s("img",{attrs:{src:e(440),alt:""}})])])])])]),t._v(" "),s("h3",{attrs:{id:"launch-kibana-dashboard-from-openshift-cluster"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#launch-kibana-dashboard-from-openshift-cluster"}},[t._v("#")]),t._v(" Launch Kibana dashboard from OpenShift cluster")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Switch to "),s("strong",[t._v("Networking")]),t._v(". Select Routes option , navigate to Location. Click Kibana URL to open a new tab in the browser as shown in below figure.")]),t._v(" "),s("p",[s("img",{attrs:{src:e(441),alt:""}})])]),t._v(" "),s("li",[s("p",[t._v("Kibana dashboard appears as shown below figure.")]),t._v(" "),s("p",[s("img",{attrs:{src:e(442),alt:""}})])])])])}),[],!1,null,null,null);a.default=n.exports}}]);