(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{543:function(s,t,a){"use strict";a.r(t);var e=a(54),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"operating-system-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#operating-system-deployment"}},[s._v("#")]),s._v(" Operating system deployment")]),s._v(" "),a("p",[s._v("This section includes,")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Deploying ESXI on multiple machines in an automated fashion")])]),s._v(" "),a("li",[a("p",[s._v("Deploying Red Hat CoreOS using iPXE server")])]),s._v(" "),a("li",[a("p",[s._v("Deploying RHEL using PXE server")])])]),s._v(" "),a("p",[s._v("What is PXE boot?")]),s._v(" "),a("p",[s._v("Preboot Execution Environment (PXE) is a client-server interface that allows computers in a network to be booted from the server before deploying the obtained OS image in local and remote offices, for PXE enabled clients. PXE network boot is performed using client-server protocols like DHCP (Dynamic Host Configuration Protocol) and TFTP (Trivial File Transfer Protocol).")]),s._v(" "),a("h2",{attrs:{id:"esxi-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#esxi-deployment"}},[s._v("#")]),s._v(" ESXi deployment")]),s._v(" "),a("p",[s._v("This section outlines the steps to programmatically deploy ESXi on all the bare-metal nodes.")]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("Prerequisites")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("ESXi ISO image is present in the HTTP file path within the installer machine.")])]),s._v(" "),a("li",[a("p",[s._v("iLO account with administrative privileges required on servers for configuring ESXi via automation.")])])])]),s._v(" "),a("h3",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[s._v("#")]),s._v(" Installation")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("Enable Python 3 and Ansible environment as mentioned in "),a("a",{attrs:{href:"./Preparing-execution-environment#installer-machine"}},[s._v("Installer machine")]),s._v(" section of deployment guide.")])]),s._v(" "),a("li",[a("p",[s._v("Execute the following command on the installer VM to point to the ESXi deployment directory.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$BASE_DIR")]),s._v("/os_deployment/deploy_esxi\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),a("p",[a("code",[s._v("BASE_DIR")]),s._v(" is defined in "),a("a",{attrs:{href:"./Preparing-execution-environment#installer-machine"}},[s._v("Installer machine")]),s._v(" section in deployment guide.")])])]),s._v(" "),a("li",[a("p",[s._v("Installing requirements")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" setup.sh \n")])])])]),s._v(" "),a("li",[a("p",[s._v("Update the input_files/config.yml file with web server details for ESXi installation.")])]),s._v(" "),a("li",[a("p",[s._v("Use the following command to edit input files/config.yml file.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ansible-vault edit input_files/config.yml\n")])])])]),s._v(" "),a("li",[a("p",[s._v("Example values for the input configuration is as follows:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v(" config:\n   HTTP_server_base_url: http://10.0.x.x/\n   HTTP_file_path: /usr/share/nginx/html/\n   OS_type: esxi67\n   OS_image_name: "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("ISO_image_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(".iso\n   base_kickstart_filepath: kickstart_files/ks_esxi67.cfg\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),a("p",[s._v("The default password for the Ansible vault file is "),a("code",[s._v("changeme")]),s._v(".")]),s._v(" "),a("p",[s._v('Acceptable values for "OS_type" variable is "esxi67" for ESXi 6.7.')])])]),s._v(" "),a("li",[a("p",[s._v("Update the input_files/server_details.yml file with server details for ESXi installation.")])]),s._v(" "),a("li",[a("p",[s._v("Use the following command to edit input files/server_details.yml file.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ansible-vault edit input_files/server_details.yml\n")])])])]),s._v(" "),a("li",[a("p",[s._v("Example values for the input configuration for deploying ESXi 6.7 is as follows:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v(" servers:\n    -  Server_serial_number: MXxxxxxDP\n       ILO_Address: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".x.x\n       ILO_Username: username\n       ILO_Password: password\n       Hostname: vsphere01.twentynet.local\n       Host_IP: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(".x.x.x\n       Host_Username: root\n       Host_Password: Password\n       Host_Netmask: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),s._v(".x.x.x\n       Host_Gateway: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(".x.x.x\n       Host_DNS: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(".x.x.x\n    - Server_serial_number: MXxxxxxDQ\n       ILO_Address: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".x.x\n       ILO_Username: username\n       ILO_Password: password\n       Hostname: vsphere02.twentynet.local\n       Host_IP: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20.0")]),s._v(".x.x\n       Host_Username: root\n       Host_Password: Password\n       Host_Netmask: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),s._v(".x.x.x\n       Host_Gateway: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(".x.x.x\n       Host_DNS: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(".x.x.x\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),a("p",[s._v("The default password for the Ansible vault file is "),a("code",[s._v("changeme")]),s._v(".")]),s._v(" "),a("p",[s._v('It is recommended to provide a complex password for the "Host_Password" variable.')]),s._v(" "),a("p",[s._v("Provide administrative privileged iLO account username and password.")])])]),s._v(" "),a("li",[a("p",[s._v("Run playbook to deploy ESXi.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ansible-playbook deploy.yml --ask-vault-pass\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),a("p",[s._v("In the process of ESXi deployment, ISO image contents will be forcefully moved to "),a("code",[s._v("BASE_DIR/os_deployment/deploy_esxi/files")]),s._v(" folder and it needs to be deleted in case of space issues.")]),s._v(" "),a("p",[a("code",[s._v("BASE_DIR")]),s._v(" is defined in "),a("a",{attrs:{href:"./Preparing-execution-environment#installer-machine"}},[s._v("Installer machine")]),s._v(" section in deployment guide.")])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),a("p",[s._v("Generic settings done as part of kickstart file for ESXi are as follows. It is recommended that the user reviews and modifies the kickstart file (kickstart_files/ks_esxi67.cfg) to suit their requirements.")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Accept End User License Agreement (EULA).")])]),s._v(" "),a("li",[a("p",[s._v("clearpart --alldrives --overwritevmfs")])]),s._v(" "),a("li",[a("p",[s._v("install --firstdisk --overwritevmfs")])]),s._v(" "),a("li",[a("p",[s._v("%firstboot --interpreter=busybox")])]),s._v(" "),a("li",[a("p",[s._v("One standard switch vswitch0 is created with uplinks vmnic0 and vmnic1. it is assigned with the Host_IP defined in the input_files/server_details.yml input file.")])]),s._v(" "),a("li",[a("p",[s._v("NIC teaming is performed with vmnic0 being the active uplink and vmnic1 being the standby uplink.")])]),s._v(" "),a("li",[a("p",[s._v("NIC failover policy is set to --failback yes --failure-detection link --load-balancing mac --notify-switches yes.")])])])])])]),s._v(" "),a("h2",{attrs:{id:"red-hat-coreos-deployment-using-ipxe-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#red-hat-coreos-deployment-using-ipxe-server"}},[s._v("#")]),s._v(" Red Hat CoreOS deployment using iPXE server")]),s._v(" "),a("p",[s._v("In this solution, an iPXE Server setup is used for Red Hat Enterprise Linux CoreOS (RHCOS) deployment. This section explains in detail the playbooks required to configure iPXE server on an RHEL 7.6 VM to perform an unattended installation of Red Hat Enterprise Linux CoreOS (RHCOS) for non-ESXi VMs and bare metal servers.")]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("Prerequisites")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("RHEL Ansible engine VM with Ansible 2.9.x and Python 3.6.x.")])]),s._v(" "),a("li",[a("p",[s._v("Ansible Engine is configured as mentioned in the "),a("a",{attrs:{href:"./Preparing-execution-environment#installer-machine"}},[s._v("Installer machine")]),s._v(" section of this deployment guide.")])]),s._v(" "),a("li",[a("p",[s._v("If the user wishes to setup the iPXE server on a separate RHEL 7.6 VM (other than the Ansible engine VM) preferably or could be bare metal server, they need to have the following minimum configuration:")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("At least 200 GB disk space")])]),s._v(" "),a("li",[a("p",[s._v("Two (2) CPU cores")])]),s._v(" "),a("li",[a("p",[s._v("8 GB RAM")])]),s._v(" "),a("li",[a("p",[s._v("/var has at least 15 GB disk space allocated while partitioning")])]),s._v(" "),a("li",[a("p",[s._v("Static IP on the same network as the RHCOS server")])]),s._v(" "),a("li",[a("p",[s._v("Internet access")])])])]),s._v(" "),a("li",[a("p",[s._v("Disable Selinux using following steps:")]),s._v(" "),a("ul",[a("li",[s._v("Check the status of SELINUX using command /etc/selinux/config")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" $ getenforce\n")])])]),a("ul",[a("li",[s._v("Disable SELINUX")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("​"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/permissive/disabled/g'")]),s._v(" /etc/selinux/config /etc/selinux/config\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),a("p",[s._v('If the current state of "selinux" is "enforcing," replace the keyword "permissive" in the above command with "enforcing" and then run it.')])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Reboot the RHEL machine.")])]),s._v(" "),a("li",[a("p",[s._v("Check the status of SELINUX using command /etc/selinux/config")])])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" getenforce\n")])])])])])]),s._v(" "),a("h3",{attrs:{id:"automated-installation-and-configuration-of-ipxe-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#automated-installation-and-configuration-of-ipxe-server"}},[s._v("#")]),s._v(" Automated Installation and Configuration of iPXE Server")]),s._v(" "),a("p",[s._v("Perform the steps listed below to execute the playbooks for installing and configuring iPXE server")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("Browse to the following directory on the Ansible engine.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$BASE_DIR")]),s._v("/os_deployment/deploy_rhcos/ \n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),a("p",[s._v("Refer to "),a("a",{attrs:{href:"./Preparing-execution-environment#installer-machine"}},[s._v("installer machine")]),s._v(' section of this deployment guide to know the "BASE_DIR" path.')])])]),s._v(" "),a("li",[a("p",[s._v("Copy Red Hat OpenShift 4.x above install files to directory, preferably under /tmp/ Example: /tmp/image/")])]),s._v(" "),a("li",[a("p",[s._v('Update the inventory file "hosts" with the RHEL machine IP on which the user is trying to setup the iPXE server.')]),s._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ansible_host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n20.x.x.x\n")])])])]),s._v(" "),a("li",[a("p",[s._v("Update the secrets.yml file located in BASE_DIR/os_deployment/deploy_rhcos/secrets.yml.")])]),s._v(" "),a("li",[a("p",[s._v("Use the following command to edit secrets.yml file.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ansible-vault edit "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$BASE_DIR")]),s._v("/os_deployment/deploy_rhcos/secrets.yml \n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),a("p",[s._v("Refer to "),a("a",{attrs:{href:"./Preparing-execution-environment#installer-machine"}},[s._v("Installer machine")]),s._v(' section of this deployment guide to know the "BASE_DIR" .')]),s._v(" "),a("p",[s._v("The default password for the Ansible vault file is "),a("em",[s._v("changeme.")])])]),s._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Details of Ansible User Credentials required to set-up the iPXE")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Path to hpe-solutions-openshift Directory; Example: /home/openshift_admin (no trailing forwardslash required)")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("base_path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/home/openshift_admin'")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Is Environment Airgapped; ('yes' or 'no'):")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("is_environment_airgap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'yes'")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("###Common Networking")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Interface Name Example: interface_name: enp0s10f0")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("interface_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <interface_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Ansible Host IP Example: ansible_engine_ip: 20.0.15.115")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ansible_engine_ip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <ansible_engine_ip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# base DNS domain, Example: base_domain: ocp42.local")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("base_domain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <base_domain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Openshift sub domain, Example:app_domain: apps.ocp42.local")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app_domain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <app_domain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Network router IP Example: gateway: 192.168.42.254")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("gateway")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <gateway"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Network DNS server Example: dns_server: 192.168.42.252")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("dns_server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <dns_server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# DHCP range that is used for OCP nodes Example: dhcp_range: 192.168.42.204,192.168.42.210,24h")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("dhcp_range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <dhcp_range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Subnet Mask Example: net_mask: 255.255.240.0")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("net_mask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <net_mask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## OpenShift node network")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mac address of master node 1 Example: master1_mac: 08:00:27:36:0A:01")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("master1_mac")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <master1_mac"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master node 1 IP address Example: master1_ip: 192.168.42.204")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("master1_ip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <master1_ip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master node 2 mac address Example: master2_mac: 08:00:27:36:0A:02")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("master2_mac")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <master2_mac"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master node 2 IP address Example: master2_ip: 192.168.42.205")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("master2_ip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <master2_ip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master node 3 mac address Example: master3_mac: 08:00:27:36:0A:03")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("master3_mac")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <master3_mac"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master node 3 IP address Example: master3_ip: 192.168.42.206")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("master3_ip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <master3_ip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# worker node 1 mac address Example: worker1_mac: 08:00:27:36:0A:04")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("worker1_mac")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <worker1_mac"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# worker node 1 IP address Example: worker1_ip: 192.168.42.207")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("worker1_ip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <worker1_ip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# worker node 2 mac address Example: worker2_mac: 08:00:27:36:0A:05")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("worker2_mac")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <worker2_mac"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# worker node 1 IP address Example: worker2_ip: 192.168.42.208")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("worker2_ip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <worker2_ip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# worker node 3 mac address Example: worker3_mac: 08:00:27:36:0A:06")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("worker3_mac")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <worker3_mac"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# worker node 3 IP address Example: worker3_ip: 192.168.42.209")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("worker3_ip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <worker3_ip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bootstrap mac address Example: bootstrap_mac: 08:00:27:36:0A:08")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("bootstrap_mac")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <bootstrap_mac"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bootstrap IP address Example: bootstrap_ip: 192.168.42.210")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("bootstrap_ip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <bootstrap_ip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# install media details Example: image_location: "/tmp/image/"')]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image_location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <image_location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Example: rhcos-4.9.1-x86_64-live-initramfs.x86_64.img")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("live_initramfs_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <live_initramfs_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Example: rhcos-4.9.1-x86_64-live-kernel-x86_64")]),s._v("\n live_kernel_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("<live_kernel_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Example: rhcos-4.9.1-x86_64-live-rootfs.x86_64.img")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("live_rootfs_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <live_rootfs_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[s._v("Run the following Ansible playbook to configure the iPXE server.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ansible-playbook -i hosts master.yml --ask-vault-pass\n")])])])]),s._v(" "),a("li",[a("p",[s._v("Test the setup with MAC address by running the following command")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" http://localhost:8080/ipxe?mac"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("08:00:27:36:0A:xx \n")])])])]),s._v(" "),a("li",[a("p",[s._v('Copy the ignition files in " /var/lib/matchbox/ignition " and verify the status of ignition file by using MAC address of all nodes.')]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" http://192.168.42.200:8080/ignition?mac"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("08:00:27:36:0A:xx \n")])])])]),s._v(" "),a("li",[a("p",[s._v("Boot the VM/Bare Metal using iPXE..")])])]),s._v(" "),a("h2",{attrs:{id:"rhel-deployment-using-pxe-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rhel-deployment-using-pxe-server"}},[s._v("#")]),s._v(" RHEL deployment using PXE Server")]),s._v(" "),a("p",[s._v("In this solution, a PXE Server is used for RHEL 7.x OS deployment and is configured on CentOS (version: CentOS Linux release 7.6.1810 (Core)). The PXE server uses the FTP service for file distribution but can be altered to support HTTP or NFS. This section highlights the steps to\nconfigure a PXE server.")]),s._v(" "),a("h3",{attrs:{id:"procedure-for-setting-up-pxe-server-and-deploying-rhel-os"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#procedure-for-setting-up-pxe-server-and-deploying-rhel-os"}},[s._v("#")]),s._v(" Procedure for setting up PXE server and deploying RHEL OS")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("Login to the CentOS server to be configured as a PXE server as a user that can run commands as root via sudo.")])]),s._v(" "),a("li",[a("p",[s._v("Install packages such as DHCP, TFTP-server, vSFTPD (FTP server), and xinetd using the following command.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" dhcp tftp tftp-server syslinux vsftpd xinetd\n")])])])]),s._v(" "),a("li",[a("p",[s._v("Update the DHCP configuration file at "),a("em",[s._v("/etc/dhcp/dhcpd.conf")]),s._v(" with the MAC addresses, IP addresses, DNS, and routing details of the installation environment. Domain search is optional. A sample DHCP")]),s._v(" "),a("p",[s._v("configuration file is shown as follows.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("    ddns-update-style interim"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        ignore client-updates"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        authoritative"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        allow booting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        allow bootp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# internal subnet for my DHCP Server")]),s._v("\n        subnet "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20.0")]),s._v(".x.x netmask "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.0")]),s._v(".0.0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        range "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20.0")]),s._v(".x.x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20.0")]),s._v(".x.x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        deny unknown-clients"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        option domain-name-servers "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(".x.x.x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        option domain-name "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"twentynet.local"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        option routers "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(".x.x.x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        option broadcast-address "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20.255")]),s._v(".255.255"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        default-lease-time "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("600")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        max-lease-time "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        next-server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(".x.x.x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        filename "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pxelinux.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#######################################")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" bootstrap "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        hardware ethernet 00:50:56:xx:98:df"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        fixed-address "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20.0")]),s._v(".x.x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" master01 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        hardware ethernet 00:50:56:95:xx:82"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        fixed-address "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20.0")]),s._v(".x.x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" worker01 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        hardware ethernet 00:50:56:xx:ab:82"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        fixed-address "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20.0")]),s._v(".x.x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[s._v("Trivial File Transfer Protocol (TFTP) is used to transfer files from data server to clients without any kind of authentication. TFTP is used for ignition file loading in PXE-based environment. To configure the TFTP server, edit the configuration file "),a("em",[s._v("/etc/xinetd.d/tftp")]),s._v(". Change the parameter 'disable = yes' to 'disable = no' and leave the other parameters as is. To edit the "),a("em",[s._v("/etc/xinetd.d/tftp")]),s._v(" file, execute the following command.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v("  /etc/xinetd.d/tftp\n")])])]),a("p",[s._v("The TFTP configuration file is shown below.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" tftp\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n            socket_type "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" dgram\n            protocol "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" udp\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n            user "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" root\n            server "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" /usr/sbin/in.tftpd\n            server_args "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" -s /var/lib/tftpboot\n            disable "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" no\n            per_source "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("\n            cps "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n            flags "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" IPv4\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("Network boot related files must be placed in the tftp root directory "),a("em",[s._v("/var/lib/tftpboot")]),s._v(". Run the following commands to copy the required network boot files to "),a("em",[s._v("/var/lib/tftpboot/")]),s._v(".")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" –v /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" –v /usr/share/syslinux/menu.c32 /var/lib/tftpboot\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" –v /usr/share/syslinux/memdisk /var/lib/tftpboot\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" –v /usr/share/syslinux/mboot.c32 /var/lib/tftpboot\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" –v /usr/share/syslinux/chain.c32 /var/lib/tftpboot\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" /var/lib/tftpboot/pxelinux.cfg\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" /var/lib/tftpboot/networkboot\n")])])])]),s._v(" "),a("li",[a("p",[s._v("Copy the RHEL 7.6 (or above) ISO files to the PXE server. Mount it to the "),a("em",[s._v("/mnt/")]),s._v(" directory and then copy the contents of the ISO to the local FTP server using the following commands.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v(" –o loop OS "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" name /mnt/\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /mnt/\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" –av * /var/ftp/pub/\n")])])])]),s._v(" "),a("li",[a("p",[s._v("Copy the kernel file (vmlinuz) and initrd file from "),a("em",[s._v("/mnt")]),s._v(" to "),a("em",[s._v("/var/lib/tftpboot/networkboot/")]),s._v(" using the following commands.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /mnt/images/pxeboot/vmlinuz /var/lib/tftpboot/networkboot/\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /mnt/images/pxeboot/initrd.img /var/lib/tftpboot/networkboot\n")])])])]),s._v(" "),a("li",[a("p",[s._v("Unmount the ISO files using the following command.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" unmount /mnt/\n")])])])]),s._v(" "),a("li",[a("p",[s._v("For RHEL nodes, create and utilize a new kickstart file under the folder "),a("em",[s._v("/var/ftp/pub")]),s._v(' with the name "'),a("em",[s._v("rhel7.cfg")]),s._v('" using the following command.')]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /var/ftp/pub/rhel7.cfg\n")])])]),a("p",[s._v("A sample kickstart file is shown as follows. The installation user should create a kickstart file to meet the requirements of their installation environment.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("\nfirewall --disabled\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Install OS instead of upgrade")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Use FTP installation media")]),s._v("\nurl --url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ftp://FTP_server_IP_address/pub/rhel76/"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Root password")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# root password can be plaintext as shown below")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rootpw –plaintext password")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# root password is encrypted using the command “openssl passwd -1 password” and resultant output is provided for rootpw as shown below")]),s._v("\nrootpw --iscrypted "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$6")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$uiq8l")]),s._v("/7xEWsYXhrvaEgan4N21yhLa8K.U7UA12Th3PD11GOXvEcI40gp\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# System authorization information")]),s._v("\nauth useshadow "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("passalgo")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sha512\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Use graphical install")]),s._v("\ngraphical\nfirstboot disable\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# System keyboard, timezone, language")]),s._v("\nkeyboard us\ntimezone Europe/Amsterdam\nlang en_US\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# SELinux configuration")]),s._v("\nselinux disabled\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Installation logging level")]),s._v("\nlogging "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("level")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("info\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# System bootloader configuration")]),s._v("\nbootloader "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("location")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mbr\nclearpart --all --initlabel\npart swap --asprimary --fstype"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"swap"')]),s._v(" --size"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\npart /boot --fstype xfs --size"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),s._v("\npart pv.01 --size"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" --grow\nvolgroup root_vg01 pv.01\nlogvol / --fstype xfs --name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("lv_01 --vgname"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("root_vg01 --size"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" --grow\n%packages\n@^minimal\n@core\n%end\n%addon com_redhat_kdump --disable --reserve-mb"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'auto'")]),s._v("\n%end\n")])])])]),s._v(" "),a("li",[a("p",[s._v("Create a PXE menu:")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Create a PXE menu file at the location  "),a("em",[s._v("/var/lib/tftpboot/pxelinux.cfg/default")]),s._v(" using the command.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /var/lib/tftpboot/pxelinux.cfg/default\n")])])])]),s._v(" "),a("li",[a("p",[s._v("For each of the OS boot options, provide the following details:")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("MENU LABEL -- Custom name of the respective menu label.")])]),s._v(" "),a("li",[a("p",[s._v("KERNEL -- Kernel details of the operating system.")])]),s._v(" "),a("li",[a("p",[s._v("APPEND - Path of bootloader file along with path of cfg or\nconfiguration file (in case of RHEL).")])])])]),s._v(" "),a("li",[a("p",[s._v("A sample PXE menu is shown as follows.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("default menu.c32\n\nprompt "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\n\nMENU TITLE LinuxTechi.com PXE Menu\n\nLABEL rhel76\n\nMENU LABEL RHEL76-Buedata\n\nKERNEL /rhel76/vmlinuz\n\nAPPEND "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("initrd")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/rhel76/initrd.img inst.repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ftp://FTP_server_IP_address/pub/rhel76 "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ks")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ftp://FTP_server_IP_address/pub/rhel76-hcp.cfg\n\nLABEL rhcos-bootstrap\n\nMENU LABEL Install RHCOS4.3 sec-Bootstrap\n\nKERNEL /networkboot/rhcos-4.3.0-x86_64-installer-kernel\n\nAPPEND "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ip")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("dhcp rd.neednet"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("initrd")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/networkboot/rhcos-4.3.0-x86_64-installer-initramfs.img "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("console")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tty0 "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("console")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ttyS0 coreos.inst"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("yes coreos.inst.install_dev"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sda coreos.inst.image_url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ftp://FTP_server_IP_address/pub/rhcos-4.3.0-x86_64-metal-bios.raw.gz coreos.inst.ignition_url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ftp://FTP_server_IP_address/pub/sec/bootstrap.ign\n\nLABEL rhcos-master\n\nMENU LABEL Install RHCOS4.2 sec-Master\n\nKERNEL /networkboot/rhcos-4.3.0-x86_64-installer-kernel\n\nAPPEND "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ip")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("dhcp rd.neednet"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("initrd")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/networkboot/rhcos-4.3.0-x86_64-installer-initramfs.img "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("console")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tty0 "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("console")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ttyS0 coreos.inst"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("yes coreos.inst.install_dev"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sda coreos.inst.image_url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ftp://FTP_server_IP_address/pub/rhcos-4.3.0-x86_64-metal-bios.raw.gz coreos.inst.ignition_url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ftp://FTP_server_IP_address/pub/sec/master.ign\n\nLABEL rhcos-worker\n\nMENU LABEL Install RHCOS4.2 sec-Worker\n\nKERNEL /networkboot/rhcos-4.3.0-x86_64-installer-kernel\n\nAPPEND "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ip")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("dhcp rd.neednet"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("initrd")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/networkboot/rhcos-4.3.0-x86_64-installer-initramfs.img "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("console")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tty0 "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("console")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ttyS0 coreos.inst"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("yes coreos.inst.install_dev"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sda coreos.inst.image_url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ftp://FTP_server_IP_address/pub/rhcos-4.3.0-x86_64-metal-bios.raw.gz coreos.inst.ignition_url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ftp://FTP_server_IP_address/pub/sec/worker.ign\n")])])])])])]),s._v(" "),a("li",[a("p",[s._v("Start and enable xinetd, dhcpd and vsftpd using the following commands.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start xinetd\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" xinetd\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start dhcpd.service\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" dhcpd.service\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start vsftpd\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" vsftpd\n")])])])]),s._v(" "),a("li",[a("p",[s._v("Configure SELinux for FTP.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" setsebool –P allow_ftpd_full_access "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[s._v("Open ports in the firewall using the following firewall-cmd commands.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --add-service-ftp --permanent\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --add-service-dhcp --permanent\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd –reload\n")])])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),a("p",[s._v("It is crucial to generate ignition files, copy them to the TFTP server, and update the path in the PXE default file. For more information about generating the ignition files, refer to the section "),a("a",{attrs:{href:"./preparing-execution-environment#kubernetes-manifests-and-ignition-files"}},[s._v("Kubernetes manifests and ignition files")]),s._v(" in this document.")])])])}),[],!1,null,null,null);t.default=n.exports}}]);