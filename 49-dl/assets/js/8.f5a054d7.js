(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{360:function(s,a,t){s.exports=t.p+"assets/img/figure56.22ce0431.png"},361:function(s,a,t){s.exports=t.p+"assets/img/figure57.c1dde0da.png"},362:function(s,a,t){s.exports=t.p+"assets/img/figure131.cd60438a.png"},363:function(s,a,t){s.exports=t.p+"assets/img/figure58.8b2b99b7.png"},364:function(s,a,t){s.exports=t.p+"assets/img/figure59.2beb86c9.png"},365:function(s,a,t){s.exports=t.p+"assets/img/figure60.cdd4396d.png"},366:function(s,a,t){s.exports=t.p+"assets/img/figure61.9e25891d.png"},367:function(s,a,t){s.exports=t.p+"assets/img/figure62.c8476610.png"},539:function(s,a,t){"use strict";t.r(a);var e=t(54),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"red-hat-openshift-container-platform-installation-in-the-restricted-network-environment"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#red-hat-openshift-container-platform-installation-in-the-restricted-network-environment"}},[s._v("#")]),s._v(" Red Hat OpenShift Container Platform installation in the restricted network environment")]),s._v(" "),e("h2",{attrs:{id:"solution-components-overview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#solution-components-overview"}},[s._v("#")]),s._v(" Solution components overview")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Download server")])]),s._v(" "),e("li",[e("p",[s._v("Centos Yum repository server")])]),s._v(" "),e("li",[e("p",[s._v("OpenShift Mirror registry")])]),s._v(" "),e("li",[e("p",[s._v("Installer machine")])]),s._v(" "),e("li",[e("p",[s._v("iPXE server")])]),s._v(" "),e("li",[e("p",[s._v("Load balancer")])]),s._v(" "),e("li",[e("p",[s._v("OpenShift cluster nodes")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("Bootstrap node")])]),s._v(" "),e("li",[e("p",[s._v("Master nodes")])]),s._v(" "),e("li",[e("p",[s._v("Worker nodes")])])])])]),s._v(" "),e("p",[e("img",{attrs:{src:t(360),alt:""}})]),s._v(" "),e("p",[e("strong",[s._v("Figure 15")]),s._v(". Air-gap installation solution layout")]),s._v(" "),e("h2",{attrs:{id:"flow-of-execution"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flow-of-execution"}},[s._v("#")]),s._v(" Flow of Execution")]),s._v(" "),e("p",[e("img",{attrs:{src:t(361),alt:""}})]),s._v(" "),e("p",[e("strong",[s._v("Figure 16")]),s._v(". Air-gap installation Solution Flow Diagram")]),s._v(" "),e("h2",{attrs:{id:"download-server"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#download-server"}},[s._v("#")]),s._v(" Download server")]),s._v(" "),e("p",[s._v("Download server is the server which has conditional internet access and is used to built on virtual machine with the following configurations")]),s._v(" "),e("ul",[e("li",[e("p",[s._v('OS - CentOS 7 with preinstalled packages such as "Development Tools", "Compatibility Libraries", "System Administration Tools"')])]),s._v(" "),e("li",[e("p",[s._v("CPU - 4 vCPU")])]),s._v(" "),e("li",[e("p",[s._v("Memory - 8 GB")])]),s._v(" "),e("li",[e("p",[s._v("Disk - 300 GB free space in the / partition")])]),s._v(" "),e("li",[e("p",[s._v("Network adapter - 1 network adapter with connectivity to the production network")])])]),s._v(" "),e("h3",{attrs:{id:"for-the-yum-repository-server"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-the-yum-repository-server"}},[s._v("#")]),s._v(" For the Yum repository server")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Download the necessary RPM packages for yum-utils, epel-release, createrepo and nginx and zip them to a tar file")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/rpms\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/hpe/solutions/hpe-solutions-openshift/rpms\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" http://mirror.centos.org/centos/7/os/x86_64/Packages/createrepo-0.9.9-28.el7.noarch.rpm \n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" http://nginx.org/packages/mainline/centos/7/x86_64/RPMS/nginx-1.9.9-1.el7.ngx.x86_64.rpm\n")])])]),e("p",[s._v("Delta RPM (optional  if minimal installation is done)")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" http://mirror.centos.org/centos/7/os/x86_64/Packages/deltarpm-3.6-3.el7.x86_64.rpm\n")])])]),e("p",[s._v("Python Delta RPM (optional  if minimal installation is done)")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" http://mirror.centos.org/centos/7/os/x86_64/Packages/python-deltarpm-3.6-3.el7.x86_64.rpm\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zcf centos-rpms.tar.gz *\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Download the base, extras,  and updates repo to the destination download directory")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/yum_repos\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/yum_repos\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/hpe/solutions/hpe-solutions-openshift/yum_repos\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" epel-release createrepo yum-utils reposync\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" reposync --gpgcheck -l --repoid"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("base --download_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/hpe/solutions/hpe-solutions-openshift/yum_repos --downloadcomps --download-metadata\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" reposync --gpgcheck -l --repoid"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("extras --download_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/hpe/solutions/hpe-solutions-openshift/yum_repos --downloadcomps --download-metadata\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" reposync --gpgcheck -l --repoid"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("updates --download_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/hpe/solutions/hpe-solutions-openshift/yum_repos --downloadcomps --download-metadata\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" reposync --gpgcheck -l --repoid"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("centosplus --download_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/hpe/solutions/hpe-solutions-openshift/yum_repos --downloadcomps --download-metadata\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zvcf centos-yum-repository.tar.gz *\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Securely transfer the zipped files to the server to be used as a yum repository server")])])]),s._v(" "),e("h3",{attrs:{id:"for-the-mirror-registry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-the-mirror-registry"}},[s._v("#")]),s._v(" For the mirror registry")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Create the directories needed for the mirror repository")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/registry\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REGISTRY_BASE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/opt/hpe/solutions/hpe-solutions-openshift/registry"')]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("auth,certs,data,downloads"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("images,tools,secrets"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v('Set the hostname of the server and update the hostname of the external server in the "hosts" file:')]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hostnamectl set-hostname registry_hostname\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/hosts\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 registry_hostname\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Registry_hostname refers to common hostname/FQDN of the download servers and the internal mirror registry.")]),s._v(" "),e("p",[s._v("It is not necessary to create the DNS entry of the download server.")])])]),s._v(" "),e("li",[e("p",[s._v("Download the necessary packages")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y jq openssl podman p7zip httpd-tools "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("screen")]),s._v(" nmap telnet "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ftp")]),s._v(" tftp openldap-clients tcpdump wireshark xorg-x11-xauth tmux net-tools nfs-utils sg3_utils bind-utils rlwrap uucp\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Generating the self-signed certificate")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/certs/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("csr_answer.txt "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" EOF\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n default_bits "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v("\n\n prompt "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" no\n\n default_md "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sha256\n\n distinguished_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" dn\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" dn "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("C")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("US\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ST")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("New York\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("L")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("New York\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("O")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("MyOrg\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("OU")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("MyOU\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("emailAddress")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("email_address\n\n CN "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" replace with registry server hostname/FQDN. This is same as\n the internal mirror registry hostname/FQDN\n\n EOF\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" openssl req -newkey rsa:4096 -nodes -sha256 -keyout domain.key -x509 -days "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("365")]),s._v(" -out domain.crt -config "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" csr_answer.txt "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("List and verify the generated self-signed certificate - there would be domain.crt and domain.key files within the ${REGISTRY_BASE}/certs/ directory.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ll "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/certs/\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Generate the credentials to access the registry")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" htpasswd -bBc "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/auth/htpasswd myuser mypassword\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Open firewall port 5000 to enable accessing the registry")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FIREWALLD_DEFAULT_ZONE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("firewall-cmd --get-default-zone"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v(" --permanent\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" firewall-cmd --reload\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create/Run the registry container")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" podman run --name my-registry --rm -d -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(":5000 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/data:/var/lib/registry:z "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/auth:/auth:z -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"REGISTRY_AUTH=htpasswd"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"REGISTRY_AUTH_HTPASSWD_REALM=Registry"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"REGISTRY_HTTP_SECRET=ALongRandomSecretForRegistry"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REGISTRY_AUTH_HTPASSWD_PATH")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/auth/htpasswd "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/certs:/certs:z "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REGISTRY_HTTP_TLS_CERTIFICATE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/certs/domain.crt "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REGISTRY_HTTP_TLS_KEY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/certs/domain.key "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n docker.io/library/registry:2\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Verify connectivity to your registry with curl. Provide it the username and password you created.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -u myuser:mypassword -k  https://registry_hostname:5000/v2/_catalog \n")])])]),e("p",[s._v('This should return an "empty" repository for now')]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"repositories"')]),s._v(":"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Syncing the repositories")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("Export the OCP Release version")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("OCP_RELEASE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -s https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/release.txt "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Name:'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $NF}'")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"export OCP_RELEASE='),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v('"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/env_ocp\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Download openshift client tool")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux-"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v(".tar.gz -P "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Download openshift install tool")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-install-linux-"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v(".tar.gz -P "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Untar the openshift client and install tool and create a soft link")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xzf "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/openshift-client-linux-"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v(".tar.gz -C "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xzf "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/openshift-install-linux-"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v(".tar.gz -C "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("> ln -s ${REGISTRY_BASE}/downloads/tools/oc /usr/local/bin/oc\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("> ln -s ${REGISTRY_BASE}/downloads/tools/openshift-install /usr/local/bin/openshift-install\n")])])]),e("p",[s._v("Retrieve and create the necessary pull secrets/credentials files")])]),s._v(" "),e("li",[e("p",[s._v("Navigate to the ${REGISTRY_BASE}/downloads/secrets/")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/secrets/\n")])])])]),s._v(" "),e("li",[e("p",[s._v('Login to the Red Hat account and Navigate to the https://cloud.redhat.com/openshift/install/pull-secret and click on "copy pull secret" to retrieve your pull secret.')])]),s._v(" "),e("li",[e("p",[s._v("Create a file for the copied pull-secret and validate the same")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pull-secret.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" EOF\n\n  Copied-pull-secret\n    \n  EOF\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pull-secret.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Generate a base64 output from the user+password string")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'myuser:mypassword'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" base64 -w0\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REG_SECRET")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'myuser:mypassword'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" base64 -w0"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create a bundle json file with all the registries and validate the same")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pull-secret.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'.auths += {"<registry_server_fqdn>:5000": {"auth":\n"REG_SECRET","email": "<email_address>"}}\'')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/REG_SECRET/'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REG_SECRET")]),s._v('/"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pull-secret-bundle.json\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pull-secret-bundle.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Update the <registry_server_fqdn> field in the above command and all the subsequent occurrences of similar flag with the fully qualified domain name of the registry server as per the DNS entry. Update the <email_address> field with the email address used during the certificate creation.")])])]),s._v(" "),e("li",[e("p",[s._v("Create a json file specifically for the mirror registry and validate the same")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ \"auths\": {}}'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'.auths += {"<registry_server_fqdn>:5000": {"auth":\n"REG_SECRET","email": "<email_address>"}}\'')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/REG_SECRET/'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REG_SECRET")]),s._v('/"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq -c ."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pull-secret-registry.json\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pull-secret-registry.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Update the <registry_server_fqdn> field in the above command and all the subsequent occurrences of similar flag with the fully qualified domain name of the registry server as per the DNS entry. Update the <email_address> field with the email address used during the certificate creation.")])])]),s._v(" "),e("li",[e("p",[s._v("Create a json file specifically for the mirror registry and validate the same")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ \"auths\": {}}'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'.auths += {"<registry_server_fqdn>:5000": {"auth":\n"REG_SECRET","email": "<email_address>"}}\'')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/REG_SECRET/'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REG_SECRET")]),s._v('/"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq -c ."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pull-secret-registry.json\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pull-secret-registry.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Trust the self-signed certificate generated earlier")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/certs/domain.crt /etc/pki/ca-trust/source/anchors/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" update-ca-trust extract\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Export a few more variable for the mirroring process and write them into the environment variables file which can be later used to source")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("LOCAL_REGISTRY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<registry_server_fqdn>:5000'")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("OCP_RELEASE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v('-x86_64"')]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("LOCAL_REPOSITORY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ocp/openshift4'")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PRODUCT_REPO")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'openshift-release-dev'")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("LOCAL_SECRET_JSON")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v('/downloads/secrets/pull-secret-bundle.json"')]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RELEASE_NAME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ocp-release"')]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GODEBUG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"x509ignoreCN=0"')]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"export LOCAL_REGISTRY='<registry_server_fqdn>:5000'\"")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/env_ocp\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[[ ! ${OCP_RELEASE} =~ '")]),s._v("x86_64"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' ]] && export OCP_RELEASE=\"${OCP_RELEASE}-x86_64\"'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/env_ocp\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"export LOCAL_REPOSITORY='ocp/openshift4'\"")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/env_ocp\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"export PRODUCT_REPO='openshift-release-dev'\"")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/env_ocp\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export LOCAL_SECRET_JSON=\"${REGISTRY_BASE}/downloads/secrets/pull-secret-bundle.json\"'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/env_ocp\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export RELEASE_NAME=\"ocp-release\"'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/env_ocp\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Start the oc release mirroring process")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc adm -a "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCAL_SECRET_JSON}")]),s._v(" release mirror "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n--from"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("quay.io/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PRODUCT_REPO}")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${RELEASE_NAME}")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n--to"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCAL_REGISTRY}")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCAL_REPOSITORY}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n--to-release-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCAL_REGISTRY}")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCAL_REPOSITORY}")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/secrets/mirror-output.txt\n")])])])])])]),s._v(" "),e("li",[e("p",[s._v("Generating the openshift binary and validating the same")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc adm -a "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCAL_SECRET_JSON}")]),s._v(" release extract --command"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("openshift-install "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCAL_REGISTRY}")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCAL_REPOSITORY}")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v('"')]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v(" \n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("This should return a value 0")])])]),s._v(" "),e("li",[e("p",[s._v("Save the Registry container")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" podman stop my-registry\n")])])]),e("p",[s._v("(optional)")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" podman "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" --force my-registry\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" podman save docker.io/library/registry:2 -o "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/images/registry.tar\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Remove the unwanted certificates and generate the tar file of the contents within registry directory. We will be creating a new certificate for the internal mirror registry server")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/certs/domain.\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zvcf ocp45-registry.tar.gz \n")])])])]),s._v(" "),e("li",[e("p",[s._v("This can be securely transferred to the server which is meant to be used as a mirror-registry for installing OCP in the restricted environment.")])])]),s._v(" "),e("h3",{attrs:{id:"for-the-installer-machine"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-the-installer-machine"}},[s._v("#")]),s._v(" For the installer machine")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Create a new directory for storing the files related to installer machine")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/installer\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Navigate to the /opt/hpe/solutions/hpe-solutions-openshift/registry/downloads/tools/\nand copy the tools oc, kubectl and openshift-install into the folder /opt/hpe/solutions/hpe-solutions-openshift/installer.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/hpe/solutions/hpe-solutions-openshift/registry/downloads/tools/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" kubectl oc openshift-install /opt/hpe/solutions/hpe-solutions-openshift/installer\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create a install-config.yaml template file within /opt/hpe/solutions/hpe-solutions-openshift/installer directory")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /opt/hpe/solutions/hpe-solutions-openshift/installer/install-config.yaml\n")])])]),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[s._v("\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("baseDomain")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("controlPlane")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" master\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hyperthreading")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Enabled\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("compute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" worker\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hyperthreading")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Enabled\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networking")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("clusterNetworks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cidr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10.128.0.0/14\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hostPrefix")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("machineNetwork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cidr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 172.18.0.0/16\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networkType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" OpenShiftSDN\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("serviceNetwork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 172.30.0.0/16\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("platform")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("none")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("fips")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("false")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("pullSecret")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("sshKey")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("additionalTrustBundle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("BEGIN CERTIFICATE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("\n\n <"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("base"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("encoded"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" DER "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" CA certificate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("END CERTIFICATE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("\n\n EOF\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Tar the files corresponding to installer machine and securely transfer them to the server which is meant to be used as an installer for installing OCP in the restricted environment")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/hpe/solutions/hpe-solutions-openshift/installer\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zvcf installer.tar.gz *\n")])])])])]),s._v(" "),e("h3",{attrs:{id:"for-the-ipxe-server"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-the-ipxe-server"}},[s._v("#")]),s._v(" For the iPXE server")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Create a directory as a destination and download the necessary RPMs as follows")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/coreos-images\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/hpe/solutions/hpe-solutions-openshift/coreos-images\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://www.rpmfind.net/linux/centos/7.9.2009/extras/x86_64/Packages/python-httplib2-0.9.2-1.el7.noarch.rpm\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://www.rpmfind.net/linux/centos/7.9.2009/os/x86_64/Packages/python-jinja2-2.7.2-4.el7.noarch.rpm\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://www.rpmfind.net/linux/epel/7/ppc64le/Packages/p/python-keyczar-0.71c-2.el7.noarch.rpm\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://www.rpmfind.net/linux/centos/7.9.2009/extras/x86_64/Packages/sshpass-1.06-2.el7.x86_64.rpm\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://www.rpmfind.net/linux/centos/7.9.2009/extras/x86_64/Packages/python-crypto-2.6.1-1.el7.centos.x86_64.rpm\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://releases.ansible.com/ansible/rpm/release/epel-7-x86_64/ansible-2.9.9-1.el7.ans.noarch.rpm\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Retrieve the OCP ISO version")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("OCP_ISO_VERSION")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -s https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/sha256sum.txt "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" live "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $2}'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -1"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_ISO_VERSION}")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Download the CoreOS images")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/rhcos-"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_ISO_VERSION}")]),s._v("-x86_64-live-initramfs.x86_64.img \n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/rhcos-"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_ISO_VERSION}")]),s._v("-x86_64-live-kernel-x86_64 \n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/rhcos-"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_ISO_VERSION}")]),s._v("-x86_64-live-rootfs.x86_64.img \n")])])])]),s._v(" "),e("li",[e("p",[s._v("Download git and git repositories - hpe-solutions-openshift and matchbox with the following commands")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" -y\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/HewlettPackard/hpe-solutions-openshift.git \n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://github.com/poseidon/matchbox/releases/download/v0.8.0/matchbox-v0.8.0-linux-amd64.tar.gz\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Generate the Tar file of the images")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zcf ipxe.tar.gz *\n")])])])]),s._v(" "),e("li",[e("p",[s._v("This can be securely transferred to the server which is meant to be used as the iPXE server for installing OCP in the restricted environment.")]),s._v(" "),e("p",[s._v("Ansible and python setup - https://medium.com/@theking99984/how-to-install-ansible-offline-on-centos-and-rhel-f3c872b2d91e")])])]),s._v(" "),e("h2",{attrs:{id:"centos-7-internal-yum-server"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#centos-7-internal-yum-server"}},[s._v("#")]),s._v(" CentOS 7 internal Yum Server")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("CentOS 7 Yum server is offline/disconnected server which has conditional internet access and is used as a remote yum server for the restricted network centos servers. It built on virtual machine with the following configurations")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("OS - CentOS 7 with preinstalled packages as follows")]),s._v(" "),e("ul",[e("li",[e("p",[s._v('"Development Tools"')])]),s._v(" "),e("li",[e("p",[s._v('"Compatibility Libraries"')])]),s._v(" "),e("li",[e("p",[s._v('"System Administration Tools"')])])])]),s._v(" "),e("li",[e("p",[s._v("CPU - 4 vCPU")])]),s._v(" "),e("li",[e("p",[s._v("Memory - 8 GB")])]),s._v(" "),e("li",[e("p",[s._v("Disk - 300 GB free space in the / partition")])]),s._v(" "),e("li",[e("p",[s._v("Network adapter - 1 network adapter with connectivity to the production network")])])])]),s._v(" "),e("li",[e("p",[s._v("Refer to the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#Non-root-user-access"}},[s._v("setup the non-root")]),s._v(" section of the deployment guide to create a non-root user and switch to the thus created non-root user")],1)]),s._v(" "),e("li",[e("p",[s._v("Navigate to the folder that contains the centos-rpms.tar.gz and centos-yum -repository.tar.gz shared from the download server")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" path/to/copied/tar/file/centos-rpms.tar.gz\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Extract the tar file centos-rpms.tar.gz consisting of the RPMs needed to bring up the offline/disconnected CentOS Yum server.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf centos-rpms.tar.gz\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Install the RPMs")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -ivh nginx-1.9.9-1.el7.ngx.x86_64.rpm\n")])])]),e("p",[s._v("(optional)")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -ivh deltarpm-3.6-3.el7.x86_64.rpm\n")])])]),e("p",[s._v("(optional)")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -ivh python-deltarpm-3.6-3.el7.x86_64.rpm\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -ivh createrepo-0.9.9-28.el7.noarch.rpm\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Try with --nodeps option if its failing")])])]),s._v(" "),e("li",[e("p",[s._v("Enable, start and verify the status of Nginx web service.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start nginx\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl status nginx\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Move and untar the "),e("em",[s._v("centos-yum-repository.tar.gz")]),s._v(" to the root directory of the Nginx server i.e, /usr/share/nginx/html/")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf path/to/copied/tar/file/centos-yum-repository.tar.gz -C /usr/share/nginx/html/\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create the Yum repos for base, extras, updates and centosplus repos.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" createrepo /usr/share/nginx/html/base/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" createrepo /usr/share/nginx/html/centosplus/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" createrepo /usr/share/nginx/html/extras/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" createrepo /usr/share/nginx/html/updates/\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Update the Nginx configuration file with the following details to host the Yum repository.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/nginx/conf.d/repos.conf\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("server "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\nlisten "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nserver_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("IP_address_or_FQDN_of_the_centos_yum_server"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nroot /usr/share/nginx/html/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nlocation / "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\nindex index.php index.html index.htm"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nautoindex on"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#enable listing of directory index")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Remove/rename files with extension .html in /usr/share/nginx/html/")])]),s._v(" "),e("li",[e("p",[s._v("Restart the nginx web service")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl restart nginx\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Update the firewall ports to allow http communication.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FIREWALLD_DEFAULT_ZONE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("firewall-cmd --get-default-zone"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v(" --permanent\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --reload\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Validate the creation of yum server with the following command. User should be able to the see the following content")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("html"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("head"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("title"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Index of /"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/title"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/head"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("body "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("bgcolor")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"white"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("h"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v("Index of /"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/h"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("hr"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pre"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"../"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"base/"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("base/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 09-Oct-2020 06:24 -\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"centosplus/"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("centosplus/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 09-Oct-2020 06:25 -\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"extras/"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("extras/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 09-Oct-2020 06:25 -\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"updates/"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("updates/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 09-Oct-2020 06:25 -\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"50x.html.bck"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("50x.html.bck"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 09-Dec-2015 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(":05 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("537")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"index.html.bck"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("index.html.bck"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 09-Dec-2015 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(":05 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("612")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/pre"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("hr"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/body"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/html"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("p",[s._v("Reference https://www.tecmint.com/setup-local-http-yum-repository-on-centos-7/")])])]),s._v(" "),e("h2",{attrs:{id:"mirror-registry-internal-registry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mirror-registry-internal-registry"}},[s._v("#")]),s._v(" Mirror registry (Internal registry)")]),s._v(" "),e("p",[s._v("Mirror registry is the server which serves as the container registry for the Red Hat OpenShift Container Platform cluster, this server does not have internet access and is built on virtual machine with the following configurations.")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("OS - CentOS 7 with preinstalled packages as follows")]),s._v(" "),e("ul",[e("li",[e("p",[s._v('"Development Tools"')])]),s._v(" "),e("li",[e("p",[s._v('"Compatibility Libraries"')])]),s._v(" "),e("li",[e("p",[s._v('"System Administration Tools"')])])])]),s._v(" "),e("li",[e("p",[s._v("CPU - 4 vCPU")])]),s._v(" "),e("li",[e("p",[s._v("Memory - 8 GB")])]),s._v(" "),e("li",[e("p",[s._v("Disk - 300 GB free space in the / partition")])]),s._v(" "),e("li",[e("p",[s._v("Network adapter - 1 network adapter with connectivity to the production network")])])]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Refer to the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#Non-root-user-access"}},[s._v("setup the non-root")]),s._v(" section of the deployment guide to create a non-root user and switch to the thus created non-root user")],1)]),s._v(" "),e("li",[e("p",[s._v("Refer to the "),e("a",{attrs:{href:"#Setup-centos-servers-to-use-internal-yum-server"}},[s._v("Setup centos servers to use internal yum server")]),s._v(" section of the deployment guide to enable offline package/module installation for the mirror registry")])]),s._v(" "),e("li",[e("p",[s._v("Set the hostname of the internal registry server and update the same in /etc/hosts file as follows:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hostnamectl set-hostname registry\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/hosts\n\n "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("registry_hostname"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Registry_hostname refers to common hostname/FQDN of the download servers and the internal mirror registry.")]),s._v(" "),e("p",[s._v("It is not necessary to create the DNS entry of the download server.")])])]),s._v(" "),e("li",[e("p",[s._v("Create a directory for the mirror-registry files")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/registry\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Move and extract the ocp45-registry.tar.gz file from the download/external server to the location\n/opt/hpe/solutions/hpe-solutions-openshift/registry")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REGISTRY_BASE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/hpe/solutions/hpe-solutions-openshift/registry\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf /path/to/ocp45-registry.tar.gz -C "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REGISTRY_BASE")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Source the environment variables as saved in env_ocp file from the download/external server")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REGISTRY_BASE")]),s._v("/downloads/tools/env_ocp\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create the certificate for the internal registry server")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REGISTRY_BASE")]),s._v("/certs/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" openssl req -newkey rsa:4096 -nodes -sha256 -keyout domain.key -x509 -days "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("365")]),s._v(" -out domain.crt\n")])])]),e("p",[s._v("Provide the following details when prompted")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("Country Name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" letter code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AU"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" US\n\nState or Province Name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("full name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" New York\n\nLocality Name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("eg, city"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" New York\n\nOrganization Name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("eg, company"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" MyOrg\n\nOrganizational Unit Name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("eg, section"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" MyOU\n\nCommon Name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g. server FQDN or YOUR name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("registry_server_fqdn -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" same as external download server fqdn"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\nEmail Address "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("email_address"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Provide the same email ID for the flag <email_address> as provided in\nthe external download server while downloading the openshift images.")])])]),s._v(" "),e("li",[e("p",[s._v("Trust the self-signed certificate generated earlier")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REGISTRY_BASE")]),s._v("/certs/domain.crt /etc/pki/ca-trust/source/anchors/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" update-ca-trust extract\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Install podman")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" podman -y\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Load the registry container image and verify the same using the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" podman load -i "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REGISTRY_BASE")]),s._v("/downloads/images/registry.tar\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" podman image list\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Update the Firewall rules to open the ports 5000 using the following commands")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FIREWALLD_DEFAULT_ZONE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("firewall-cmd --get-default-zone"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$ FIREWALLD_DEFAULT_ZONE --permanent\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --reload\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Run the podman registry container and verify the same using the following commands")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" podman run --name my-registry --rm -d -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(":5000 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REGISTRY_BASE")]),s._v("/data:/var/lib/registry:z "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REGISTRY_BASE")]),s._v("/auth:/auth:z "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"REGISTRY_AUTH=htpasswd"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"REGISTRY_AUTH_HTPASSWD_REALM=Registry"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"REGISTRY_HTTP_SECRET=ALongRandomSecretForRegistry"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REGISTRY_AUTH_HTPASSWD_PATH")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/auth/htpasswd "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REGISTRY_BASE")]),s._v("/certs:/certs:z "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REGISTRY_HTTP_TLS_CERTIFICATE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/certs/domain.crt "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REGISTRY_HTTP_TLS_KEY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/certs/domain.key \n \n docker.io/library/registry:2\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" podman "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -u myuser:mypassword -k\n")])])]),e("p",[s._v("Replace the "),e("strong",[s._v("<registry_hostname_fqdn>")]),s._v(" to the fully qualified domain name of the internal mirror registry server. Output of the above command should be as follows:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"repositories"')]),s._v(":"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ocp/openshift4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])])]),s._v(" "),e("h2",{attrs:{id:"dns-entries"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dns-entries"}},[s._v("#")]),s._v(" DNS entries")]),s._v(" "),e("p",[s._v("Consult the User Provisioned DNS requirements section for details on creating the DNS entries required for the Red Hat OpenShift Container Platform installation.")]),s._v(" "),e("h2",{attrs:{id:"load-balance-server-with-haproxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#load-balance-server-with-haproxy"}},[s._v("#")]),s._v(" Load balance server with HAProxy")]),s._v(" "),e("p",[s._v("This server is used as a load balancer for the Red Hat OpenShift Container Platform cluster, this server does not have internet access and is built on virtual machine with the following configurations")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("OS - CentOS 7 with preinstalled packages as follows")]),s._v(" "),e("ul",[e("li",[e("p",[s._v('"Development Tools"')])]),s._v(" "),e("li",[e("p",[s._v('"Compatibility Libraries"')])]),s._v(" "),e("li",[e("p",[s._v('"System Administration Tools"')])])])]),s._v(" "),e("li",[e("p",[s._v("CPU - 4 vCPU")])]),s._v(" "),e("li",[e("p",[s._v("Memory - 8 GB")])]),s._v(" "),e("li",[e("p",[s._v("Disk - 150 GB")])]),s._v(" "),e("li",[e("p",[s._v("Network adapter - 1 network adapter with connectivity to the production network")])])]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Refer to the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#Non-root-user-access"}},[s._v("setup the non-root")]),s._v(" section of the deployment guide to create a non-root user and switch to the thus created non-root user")],1)]),s._v(" "),e("li",[e("p",[s._v("Refer to the "),e("a",{attrs:{href:"#Setup-centos-servers-to-use-internal-yum-server"}},[s._v("Setup centos servers to use internal yum server")]),s._v(" section of the deployment guide to enable offline package/module installation for the mirror registry")])]),s._v(" "),e("li",[e("p",[s._v("Disable SELinux")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/enforcing/disabled/g'")]),s._v(" /etc/selinux/config\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Set the hostname of the load balancer server as follows:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hostnamectl set-hostname "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("loadbalancer_fqdn"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("A reboot may be required at this point to reflect the changes done so\nfar.")]),s._v(" "),e("p",[s._v("To check selinux status, use the following command.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" getenforce\n")])])])])]),s._v(" "),e("li",[e("p",[s._v("Install HAProxy using the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" haproxy\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Update the HAProxy configuration file present at /etc/haproxy/haproxy.cfg as follows")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/haproxy/haproxy.cfg\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Example configuration for a possible web application. See the")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# full configuration options online.")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <http://haproxy.1wt.eu/download/1.4/doc/configuration.txt>")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Global settings")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n global\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to have these messages end up in /var/log/haproxy.log you will")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# need to:")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1) configure syslog to accept network log events. This is done")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# by adding the '-r' option to the SYSLOGD_OPTIONS in")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /etc/sysconfig/syslog")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2) configure local2 events to go to the /var/log/haproxy.log")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# file. A line like the following can be added to")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /etc/sysconfig/syslog")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# local2.* /var/log/haproxy.log")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n log "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 local2\n\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chroot")]),s._v(" /var/lib/haproxy\n\n pidfile /var/run/haproxy.pid\n\n maxconn "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4000")]),s._v("\n\n user haproxy\n\n group haproxy\n\n daemon\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# turn on stats unix socket")]),s._v("\n\n stats socket /var/lib/haproxy/stats\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# common defaults that all the 'listen' and 'backend' sections")]),s._v("\n will\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# use if not designated in their block")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n defaults\n\n mode http\n\n log global\n\n option httplog\n\n option dontlognull\n\n option http-server-close\n\n option forwardfor except "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.0/8\n\n option redispatch\n\n retries "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" http-request 10s\n\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" queue 1m\n\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" connect 10s\n\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" client 1m\n\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" server 1m\n\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" http-keep-alive 10s\n\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" check 10s\n\n maxconn "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# main frontend which proxys to the backends")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n frontend main *:5000\n\n acl url_static path_beg -i /static /images /javascript /stylesheets\n\n acl url_static path_end -i .jpg .gif .png .css .js\n\n use_backend static "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" url_static\n\n default_backend app\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# static backend for serving up images, stylesheets and such")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n backend static\n\n balance roundrobin\n\n server static "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:4331 check\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# round robin balancing between the various backends")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n backend app\n\n balance roundrobin\n\n server app1 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:5001 check\n\n server app2 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:5002 check\n\n server app3 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:5003 check\n\n server app4 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:5004 check\n\n frontend openshift-api-server\n\n "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" *:6443\n\n default_backend openshift-api-server\n\n mode tcp\n\n option tcplog\n\n backend openshift-api-server\n\n balance "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v("\n\n mode tcp\n\n server ocpboot ocpboot.ocp.twentynet.local:6443 check\n\n server ocpmaster1 ocpmaster1.ocp.twentynet.local:6443 check\n\n server ocpmaster2 ocpmaster2.ocp.twentynet.local:6443 check\n\n server ocpmaster3 ocpmaster3.ocp.twentynet.local:6443 check\n\n frontend machine-config-server68\n\n "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" *:22623\n\n default_backend machine-config-server\n\n mode tcp\n\n option tcplog\n\n backend machine-config-server\n\n balance "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v("\n\n mode tcp\n\n server ocpboot ocpboot.ocp.twentynet.local:22623 check\n\n server ocpmaster1 ocpmaster1.ocp.twentynet.local:22623 check\n\n server ocpmaster2 ocpmaster2.ocp.twentynet.local:22623 check\n\n server ocpmaster3 ocpmaster3.ocp.twentynet.local:22623 check\n\n frontend ingress-http\n\n "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" *:80\n\n default_backend ingress-http\n\n mode tcp\n\n option tcplog\n\n backend ingress-http\n\n balance "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v("\n\n mode tcp\n\n server ocpworker1 ocpworker1.ocp.twentynet.local:80 check\n\n server ocpworker2 ocpworker2.ocp.twentynet.local:80 check\n\n server ocpworker3 ocpworker3.ocp.twentynet.local:80 check\n\n frontend ingress-https\n\n "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" *:443\n\n default_backend ingress-https\n\n mode tcp\n\n option tcplog\n\n backend ingress-https\n\n balance "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v("\n\n mode tcp\n\n server ocpworker1 ocpworker1.ocp.twentynet.local:443 check\n\n server ocpworker2 ocpworker2.ocp.twentynet.local:443 check\n\n server ocpworker3 ocpworker3.ocp.twentynet.local:443 check\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Start the haproxy service")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start haproxy\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Update the Firewall rules to open the ports 80, 443, 6443, 22623 using the following commands")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FIREWALLD_DEFAULT_ZONE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("firewall-cmd --get-default-zone"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v(" --permanent\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("443")]),s._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v(" --permanent\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6443")]),s._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v(" --permanent\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("22623")]),s._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v(" --permanent\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --reload\n")])])]),e("p",[s._v("The load balance node is now ready to be used.")])])]),s._v(" "),e("h2",{attrs:{id:"installer-machine"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installer-machine"}},[s._v("#")]),s._v(" Installer machine")]),s._v(" "),e("p",[s._v("This machine acts as the installer machine for deploying CoreOS for the Red Hat OpenShift Container Platform cluster nodes, this server does not have internet access and is built on virtual machine with the following configurations")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("OS - CentOS 7 with preinstalled packages as follows")]),s._v(" "),e("ul",[e("li",[e("p",[s._v('"Development Tools"')])]),s._v(" "),e("li",[e("p",[s._v('"Compatibility Libraries"')])]),s._v(" "),e("li",[e("p",[s._v('"System Administration Tools"')])])])]),s._v(" "),e("li",[e("p",[s._v("CPU - 4 vCPU")])]),s._v(" "),e("li",[e("p",[s._v("Memory - 8 GB")])]),s._v(" "),e("li",[e("p",[s._v("Disk - 150 GB free space in the / partition")])]),s._v(" "),e("li",[e("p",[s._v("Network adapter - 1 network adapter with connectivity to the production network")])])]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Refer to the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#Non-root-user-access"}},[s._v("setup the non-root")]),s._v(" section of the deployment guide to create a non-root user and switch to the thus created non-root user.")],1)]),s._v(" "),e("li",[e("p",[s._v("Refer to the "),e("a",{attrs:{href:"#Setup-centos-servers-to-use-internal-yum-server"}},[s._v("Setup centos servers to use internal yum server")]),s._v(" section of the deployment guide to enable offline package/module installation for the mirror registry.")])]),s._v(" "),e("li",[e("p",[s._v("Navigate to the path to the installer.tar.gz file from the download\nserver and untar it.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /path/to/installer.tar.gz\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf installer.tar.gz\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create a softlink for the openshift-install and oc tools")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s /absolute/path/to/oc /usr/local/bin/oc\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s /absolute/path/to/openshift-install /usr/local/bin/openshift-install\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s /abslute/path/to/kubectl /usr/local/bin/kubectl\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Update the install-config.yaml file with the following details.")]),s._v(" "),e("ul",[e("li",[e("p",[e("strong",[s._v("baseDomain")]),s._v(": Base domain of the DNS which hosts Red Hat OpenShift Container Platform.")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("name")]),s._v(": Name of the OpenShift cluster. This is same as the new domain created in DNS.")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("replicas")]),s._v(": Update this field to reflect the corresponding number of master or worker instances required for the OpenShift cluster as per the installation environment requirements. It is recommended to have a minimum of 3 master nodes and 2 worker nodes per OpenShift cluster.")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("pullSecret")]),s._v(': This should now be the contents of the pull_secret_registry.json present in the "mirror registry server"(internal) at /opt/hpe/solutions/hpe-solutions-openshift/registry/downloads/secrets/pull_secret_registry.json. It consists of the credentials to access the internal/mirror registry only created for the restricted network installation of the Red Hat OpenShift Container Platform cluster.')])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("sshKey")]),s._v(": Update this field with the ssh-key generated for the non-root user of the installer machine. sshkey can be generated with the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ssh-keygen\n")])])]),e("p",[s._v("The resultant value can be retrieved from the /home/non-root-user/.ssh/id_rsa.pub")])])])])]),s._v(" "),e("ul",[e("li",[e("p",[e("strong",[s._v("additionalTrustBundle")]),s._v(": Update this field with the CA certificated (domain.crt) generated in the internal/mirror registry. It can be found at /opt/hpe/solutions/hpe-solutions-openshift/registry/certs/domain.crt within the internal mirror registry server. Make sure the value to this field is right indented (5 spaces from the left).")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("imageContentSources")]),s._v(': This content is taken from the mirror-output.txt generated in the "Download server > For the mirror registry" section of this document. It consists of the end points to connect to, to download the required files while created the Red Hat OpenShift Container Platform cluster in a restricted network environment.')]),s._v(" "),e("p",[s._v("The final version should look as follows:")]),s._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("baseDomain")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <your base domain. Similar to example.com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("controlPlane")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" master\n\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hyperthreading")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Enabled\n\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("compute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" worker\n\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hyperthreading")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Enabled\n\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<your subdomain/cluster name. similar to test-cluster>'")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networking")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("clusterNetworks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cidr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10.128.0.0/14\n\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hostPrefix")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("machineNetwork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cidr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 172.18.0.0/16\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networkType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" OpenShiftSDN\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("serviceNetwork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 172.30.0.0/16\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("platform")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("none")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("fips")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("false")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("pullSecret")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" '<contents of the pull_secret_registry.json file similar to \n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v('"auths"'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v('"<registry_hostname_fqdn'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v('5000"'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v('"auth"'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bXl1c2VyOm15cGFzc3dvcmQ="')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v('"email"'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<email_address>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("'\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("sshKey")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'< Your installer machine Public SSH Key>'")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("additionalTrustBundle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("BEGIN CERTIFICATE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("\n\n <Your CA certificate generated by the non"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("root user in the internal\n mirror registry"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("END CERTIFICATE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("\n")])])]),e("p",[s._v("imageContentSources:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v(" - mirrors:\n\n - "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" registry_hostname_fqdn "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":5000/ocp/openshift4\n\n source: quay.io/openshift-release-dev/ocp-release\n\n - mirrors:\n\n - "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" registry_hostname_fqdn "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":5000/ocp/openshift4\n\n source: quay.io/openshift-release-dev/ocp-v4.0-art-dev\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Content in bold are to be reviewed and replaced with the content relevant to actual setup.")])]),s._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),e("p",[s._v("it is recommended to take a backup of the install-config.yaml file before creating the manifests/ignition file since the file will be consumed while they are created.")])])])]),s._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[e("p",[s._v("Navigate to the path where install-config.yaml is present, create a new directory for the ignition files and copy the install-config.yaml into it. Navigate into the newly created folder")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/path/to/directory/with/openshift-install/tools"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/ignitions\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" install-config.yaml ignitions/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /path/to/ignitions/directory\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create the manifests using the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" openshift-install create manifests --dir"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("./\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create the ignition files")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" openshift-install create ignition-configs --dir"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("./\n")])])]),e("p",[s._v("The ignition files thus generated could be used while the CoreOS operating system is booted on the bootstrap, master and worker nodes via the iPXE server.")])]),s._v(" "),e("li",[e("p",[s._v("Export the kubeconfig file with the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KUBECONFIG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/path/to/kubeconfig/file\n")])])])])]),s._v(" "),e("h2",{attrs:{id:"openshift-cluster-nodes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#openshift-cluster-nodes"}},[s._v("#")]),s._v(" Openshift cluster nodes")]),s._v(" "),e("p",[s._v("Red Hat OpenShift Container Platform sizing varies depending on the requirements of the organization and type of deployment. This section highlights the host sizing details recommended by Red Hat.")]),s._v(" "),e("p",[e("strong",[s._v("Resource Bootstrap node Master node Worker node")])]),s._v(" "),e("ul",[e("li",[e("p",[s._v("CPU 4 4 4")])]),s._v(" "),e("li",[e("p",[s._v("Memory 16GB 16GB 16GB")])]),s._v(" "),e("li",[e("p",[s._v("Disk storage 120GB 120GB 120GB")])]),s._v(" "),e("li",[e("p",[s._v("Disk partitions on each of the nodes are as follows.")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("/var -- 40GB")])]),s._v(" "),e("li",[e("p",[s._v("/usr/local/bin -- 1GB")])]),s._v(" "),e("li",[e("p",[s._v("Temporary directory -- 1GB")])])])])]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Sizing for worker nodes is ultimately dependent on the container workloads and their CPU, memory, and disk requirements.")]),s._v(" "),e("p",[s._v("For more information about Red Hat OpenShift Container Platform sizing, refer to the Red Hat OpenShift Container Platform 4 product documentation at https://access.redhat.com/documentation/en-us/openshift_container_platform/4.9/html/scalability_and_performance/index.")])]),s._v(" "),e("h2",{attrs:{id:"ipxe-server"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ipxe-server"}},[s._v("#")]),s._v(" iPXE server")]),s._v(" "),e("p",[s._v("This server is used as OS deployment server for deploying CoreOS for the Red Hat OpenShift Container Platform cluster nodes, this server does not have internet access and is built on virtual machine with the following configurations")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("OS - CentOS 7 with preinstalled packages as follows")]),s._v(" "),e("ul",[e("li",[e("p",[s._v('"Development Tools"')])]),s._v(" "),e("li",[e("p",[s._v('"Compatibility Libraries"')])]),s._v(" "),e("li",[e("p",[s._v('"System Administration Tools"')])])])]),s._v(" "),e("li",[e("p",[s._v("CPU - 4 vCPU")])]),s._v(" "),e("li",[e("p",[s._v("Memory - 8 GB")])]),s._v(" "),e("li",[e("p",[s._v("Disk - 300 GB free space in the / partition")])]),s._v(" "),e("li",[e("p",[s._v("Network adapter - 1 network adapter with connectivity to the production network")])])]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Refer to the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#Non-root-user-access"}},[s._v("setup the non-root")]),s._v(" section of the deployment guide to create a non-root user and switch to the created non-root user")],1)]),s._v(" "),e("li",[e("p",[s._v("Refer to the "),e("a",{attrs:{href:"#Setup-centos-servers-to-use-internal-yum-server"}},[s._v("Setup centos servers to use internal yum server")]),s._v(" section of the deployment guide to enable offline package/module\ninstallation for the mirror registry")])]),s._v(" "),e("li",[e("p",[s._v("Navigate to the path to the ipxe.tar.gz file from the download server and untar it.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" path/to/ipxe.tar.gz\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf ipxe.tar.gz\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Install all the necessary RPMs and ansible as follows.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum localinstall -y *.rpm\n")])])])]),s._v(" "),e("li",[e("p",[s._v('Navigate to the directory "deploy-coreos" path of the github repository hpe-solutions-openshift.')]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /path/to/hpe-solutions-openshift/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" DL/scalable/os-deployment/deploy-rhcos\n")])])]),e("p",[s._v("It is recommended to store the github repository at /opt/hpe/solutions/.")])]),s._v(" "),e("li",[e("p",[s._v("Update the input files such hosts with the following command:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" hosts\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("add the parameters (ansible_ssh_pass, ansible_ssh_user) in the host file for the non-root user\nEg. 10.4.1.141 ansible_ssh_pass=xxx ansible_ssh_user=user")])])]),s._v(" "),e("li",[e("p",[s._v("Update the encrypted input file secret.yml with the following\ncommand")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ansible-vault edit secret.yml\n")])])]),e("p",[s._v('The default password for the encrypted file is "changeme"')])]),s._v(" "),e("li",[e("p",[s._v("Generate the SSH key for the openshift_admin user and copy the SSH key to the known hosts file using the following command.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ssh-keygen\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Ensure there are no previous self-entries in the known host file.")])])]),s._v(" "),e("li",[e("p",[s._v("Copy the thus generated SSH key to the known hosts file using the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ssh-copy-id openshift_admin@"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("ipxe_fqdn"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Move the downloaded matchbox tar file matchbox-v0.8.0-linux-amd64.tar.gz to /tmp/ directory and provide the read permission using the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" /path/to/matchbox-v0.8.0-linux-amd64.tar.gz /tmp/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("400")]),s._v(" /tmp/matchbox-v0.8.0-linux-amd64.tar.gz\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Execute the following to setup iPXE")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ansible-playbook -i hosts master.yml --ask-vault-pass\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Copy the ignitions files from the installer machine to /var/lib/matchbox/igniton/ folders and provide all permissions to the ignition files")]),s._v(" "),e("p",[s._v("Only this command to be executed on the installer machine")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" /path/to/ignitions/files openshift_admin@"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("installer_server_fqdn_or_ip_address"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":/home/openshift_admin\n")])])]),e("p",[s._v("On the iPXE server")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /home/openshift_admin/*.ign /var/lib/matchbox/ignition\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("777")]),s._v(" /var/lib/matchbox/ignition/*.ign\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Ensure the services xinetd, matchbox, tftp, dnsmasq are in active/running state in the iPXE server before initiating the installation of the CoreOS.")])])]),s._v(" "),e("li",[e("p",[s._v("Boot the cluster nodes to complete the installation of Red Hat CoreOS.")]),s._v(" "),e("p",[s._v("For further details on setting up the iPXE server, refer to the OS deployment -> iPXE server section of the deployment guide found at https://hewlettpackard.github.io/hpe-solutions-openshift/46-dl/Solution-Deployment/Preparing-the-execution-environment.html#Operating-system-deployment")])])]),s._v(" "),e("h3",{attrs:{id:"note-registry-testing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#note-registry-testing"}},[s._v("#")]),s._v(" NOTE - Registry Testing")]),s._v(" "),e("p",[s._v("This is a very important point, make sure you are able to access your registry from the bootstrap server.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -u myuser:mypassword -k https://"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("registry_fqdn_or_ip_address"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":5000/v2/_catalog\n")])])]),e("h2",{attrs:{id:"red-hat-openshift-container-platform-cluster-installation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#red-hat-openshift-container-platform-cluster-installation"}},[s._v("#")]),s._v(" Red Hat OpenShift Container Platform Cluster Installation")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Login to the installer machine and start the bootstrap installation\nwith the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /path/to/ignition/files\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" openshift-install --dir"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("./ wait-for bootstrap-complete --log-level\ndebug\n")])])]),e("p",[s._v("Output is similar to as follows:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v(" INFO Waiting up to 30m0s "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the Kubernetes API at\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("https://api.ocp4.example.com:644"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\n INFO API v1.13.4+b626c2fe1 up\n\n INFO Waiting up to 30m0s "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the bootstrap-complete event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),e("p",[s._v("You can monitor the progress of the installation in the bootstrap server. This also helps in tracking the errors, they are self explainatory and helps understand what is happening.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" core@bootstrap "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"journalctl -xe"')]),s._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("After bootstrap process is complete, you can safely remove the bootstrap machine from the load balancer.")])])]),s._v(" "),e("li",[e("p",[s._v("Logging into the cluster")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KUBECONFIG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/path/to/kubeconfig/file\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("whoami")]),s._v("\n\nsystem:admin\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Confirm that the cluster recognizes the machines:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc get nodes\n")])])])])]),s._v(" "),e("p",[e("img",{attrs:{src:t(362),alt:""}})]),s._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[e("p",[s._v("Approve the pending CSRs for your machines")]),s._v(" "),e("p",[s._v("When you add machines to a cluster, two pending certificate signing request (CSRs) are generated for each machine that added. Verify them if the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc get csr\n")])])]),e("p",[s._v("Output looks similar to as follows")]),s._v(" "),e("p",[e("img",{attrs:{src:t(363),alt:""}})]),s._v(" "),e("p",[s._v("If they are not approved, approve them manually using the following command.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc adm certificate approve "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("csr_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Initial Operator configuration")]),s._v(" "),e("p",[s._v("In this phase you have to wait up to 15 min to all operators to go to Available True state. Verify the same using the following command.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),s._v(" -n5 oc get clusteroperators\n")])])]),e("p",[e("img",{attrs:{src:t(364),alt:""}})])]),s._v(" "),e("li",[e("p",[s._v("Completing installation on user-provisioned infrastructure")]),s._v(" "),e("p",[s._v("Once Operator configuration is complete, finish installing the cluster on infrastructure using the following command and confirm that all cluster components are online")]),s._v(" "),e("p",[s._v("Once Operator configuration is complete, finish installing the cluster on infrastructure using the following command and confirm that all cluster components are online")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" openshift-install --dir"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("./ wait-for install-complete "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" install-complete\n")])])]),e("p",[s._v("This will give you an output of you console login with the admin user and credentials to login similar to as follows")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("openshift_admin@installer ignitions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ openshift-install --dir"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("./ wait-for install-complete "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" install-complete\n\nINFO Waiting up to 30m0s "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the cluster at "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("https://api.eoffline.twentynet.local:644"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v(">")]),s._v(" to initialize"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\nINFO Waiting up to 10m0s "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the openshift-console route to be created"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\nINFO Install complete"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\nINFO To access the cluster as the system:admin user when using "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'oc'")]),s._v(", run "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export KUBECONFIG=/home/openshift_admin/ignitions/auth/kubeconfig'")]),s._v("\n\nINFO Access the OpenShift web-console here: "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("https://console-openshift-console.apps.eoffline.twentynet.local"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\nINFO Login to the console with user: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubeadmin"')]),s._v(", and password: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxxxxxxxxxxxxxxx"')]),s._v("\n\nINFO Time elapsed: 0s\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Ensure the cluster nodes are in the ready state using the following command.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc get nodes\n")])])]),e("p",[e("img",{attrs:{src:t(365),alt:""}})])]),s._v(" "),e("li",[e("p",[s._v("At this point, Red Hat OpenShift Container Platform cluster is successfully installed in the restricted network environment and is available for usage.")])])]),s._v(" "),e("h3",{attrs:{id:"snapshots"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#snapshots"}},[s._v("#")]),s._v(" Snapshots")]),s._v(" "),e("p",[s._v("Once the cluster is installed, operators are not yet available since there is no connectivity to the internet and the operator related images are not yet downloaded to the registry server")]),s._v(" "),e("p",[e("img",{attrs:{src:t(366),alt:""}})]),s._v(" "),e("p",[e("strong",[s._v("Figure 17.")]),s._v(" RedHAt OpenShift Container Platform")]),s._v(" "),e("h3",{attrs:{id:"setup-centos-servers-to-use-internal-yum-server"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setup-centos-servers-to-use-internal-yum-server"}},[s._v("#")]),s._v(" Setup centos servers to use internal yum server")]),s._v(" "),e("ol",[e("li",[e("p",[s._v('Login to the host as a user with "remove" permission and remove all the repo files present within the directory /etc/yum.repos.d/.')])]),s._v(" "),e("li",[e("p",[s._v("Login to the server as a non-root user.")])]),s._v(" "),e("li",[e("p",[s._v("Create a new file named local-repo.repo with the following contents. Update the "),e("em",[e("strong",[s._v("yum_server_ip_address_or_fqdn")])]),s._v(" field with the IP address/FQDN of the yum server in your environment")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/yum.repos.d/local-repo.repo\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("local-base"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("CentOS Base\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("baseurl")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://yum_server_ip_address_or_fqdn/base/\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gpgcheck")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("enabled")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("local-centosplus"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("CentOS CentOSPlus\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("baseurl")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://yum_server_ip_address_or_fqdn/centosplus/\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gpgcheck")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("enabled")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n  \n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("local-extras"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("CentOS Extras\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("baseurl")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://yum_server_ip_address_or_fqdn/extras/\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gpgcheck")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("enabled")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("local-updates"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("CentOS Updates\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("baseurl")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://yum_server_ip_address_or_fqdn/updates/\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gpgcheck")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("enabled")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Now the server is ready to use the internal yum server for any offline package/module installations.")])])]),s._v(" "),e("h2",{attrs:{id:"using-operator-lifecycle-manager-on-restricted-networks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-operator-lifecycle-manager-on-restricted-networks"}},[s._v("#")]),s._v(" Using Operator Lifecycle Manager on Restricted Networks")]),s._v(" "),e("p",[s._v("For OpenShift Container Platform clusters that are installed on restricted networks, also known as disconnected clusters, Operator Lifecycle Manager (OLM) by default cannot access the Red Hat-provided\nOperatorHub sources hosted remotely on Quay.io because those remote sources require full Internet connectivity.")]),s._v(" "),e("p",[s._v("However, as a cluster administrator you can still enable your cluster to use OLM in a restricted network if you have a workstation/download server that has full Internet access. This workstation is used to prepare local mirrors of the remote OperatorHub sources by pulling the required remote content. (Similar to the download server as mentioned in the above steps)")]),s._v(" "),e("p",[s._v("An Operator catalog is a repository of metadata that Operator Lifecycle Manager (OLM) can query to discover and install Operators and their dependencies on a cluster. OLM always installs Operators from the latest version of a catalog. As of OpenShift Container Platform 4.9, Red\nHat-provided catalogs are distributed using index images. An index image, based on the Operator Bundle Format, is a containerized snapshot of a catalog.")]),s._v(" "),e("p",[s._v("There are four Red Hat-provided Operator catalogs:")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[s._v("Catalog")])]),s._v(" "),e("th",[e("strong",[s._v("Index image")])]),s._v(" "),e("th",[e("strong",[s._v("Description")])])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("redhat-operators")]),s._v(" "),e("td",[s._v("registry.redhat.io/redhat/redhat-operator-index:v4.9")]),s._v(" "),e("td",[s._v("Red Hat products packaged and shipped by Red Hat. Supported by Red Hat.")])]),s._v(" "),e("tr",[e("td",[s._v("certified-operators")]),s._v(" "),e("td",[s._v("registry.redhat.io/redhat/certified-operator-index:v4.9")]),s._v(" "),e("td",[s._v("Products from leading independent software vendors (ISVs). Red Hat partners with ISVs to package and ship. Supported by the ISV.")])]),s._v(" "),e("tr",[e("td",[s._v("redhat-marketplace")]),s._v(" "),e("td",[s._v("registry.redhat.io/redhat/redhat-marketplace-index:v4.9")]),s._v(" "),e("td",[s._v("Certified software that can be purchased from Red Hat Marketplace.")])]),s._v(" "),e("tr",[e("td",[s._v("community-operators")]),s._v(" "),e("td",[s._v("registry.redhat.io/redhat/community-operator-index:latest")]),s._v(" "),e("td",[s._v("Software maintained by relevant representatives in the operator-framework/community-operators GitHub repository. No official support.")])])])]),s._v(" "),e("p",[s._v("The high-level flow of the procedure is shown below:")]),s._v(" "),e("p",[e("img",{attrs:{src:t(367),alt:""}})]),s._v(" "),e("p",[e("strong",[s._v("Figure 18.")]),s._v(" Solution Flow of Operator Lifecycle Manager on a Restricted Network.")]),s._v(" "),e("p",[s._v("The following is the process that is required to enable OLM in restricted networks:")]),s._v(" "),e("p",[s._v("On the "),e("strong",[s._v("Download Server")]),s._v(" (workstation with Internet Access)")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Login to registry.redhat.io to pull the required catalog image")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" podman login registry.redhat.io\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create directory required for the operators")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Copy the pull secret from the RedHat site into a file in the newly created directory and validate the same")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pull-secret.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\n\n<Copied-pull-secret>\n\nEOF")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pull-secret.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Pull the required catalog image")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" podman pull registry.redhat.io/redhat/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("-index:v4.9\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Save the catalog image into a tar file for use in the mirror registry")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" podman save "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("image-tag"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -o "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("-catalog.tar\n")])])])]),s._v(" "),e("li",[e("p",[s._v("The "),e("em",[s._v("oc adm catalog mirror")]),s._v(" command extracts the contents of an index image to generate the manifests required for mirroring. The following command creates a folder in your current directory.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc adm catalog registry.redhat.io/redhat/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("-index:v4.9 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("mirror_registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --manifests-only --registry-config"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators/pull-secret.json\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v('The "'),e("em",[s._v("--manifests-only")]),s._v('" flag is to only generate the manifests required for mirroring, but not actually mirror the image content to the registry yet. This can be useful for reviewing what will be mirrored, and it allows you to make any changes to the mapping list if you only\nrequire a subset of packages.')])])]),s._v(" "),e("li",[e("p",[s._v("Navigate to the newly created folder to view the mapping.txt file and the imageContentSourcePolicy.yaml files")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("-index-manifests\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -lrth\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Identify the required entries for your operator from the mapping.txt file. Remove the unwanted entries.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" mapping.txt\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("The entries in the mapping.txt file are in the following format.")]),s._v(" "),e("p",[s._v("<source_registry>/<image_url>@"),e("a",{attrs:{href:"sha256:digest"}},[s._v("sha256:digest")]),s._v("=<mirror_registry>/<image_url>:<tag")])])]),s._v(" "),e("li",[e("p",[s._v("Install the skopeo tool to perform the copy of the images")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" skopeo -y\n")])])])]),s._v(" "),e("li",[e("p",[s._v("For each entry in the mapping.txt file copy the images to the local directory into a custom folder name.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" skopeo copy --authfile "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators/pull-secret.json --all docker://"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source_registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("image_url"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("@"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("sha256:digest"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" dir:./"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" skopeo copy --authfile "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators/pull-secret.json --all docker://"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source_registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("image_url"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("@"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("sha256:digest"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" dir:./"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Tar the contents of the operator folder (catalog-image-catalog.tar, custom_folder_name_1,\ncustom_folder_name_2...) to move to the mirror registry")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zvcf mirror-operator.tar.gz "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("-catalog.tar, "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Tar the contents of the catalog-image-index-manifests folder to move to the installer machine.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("-index-manifests\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zvcf installer-operator.tar.gz\n")])])])])]),s._v(" "),e("h3",{attrs:{id:"on-the-mirror-server-restricted-network"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#on-the-mirror-server-restricted-network"}},[s._v("#")]),s._v(" On the "),e("strong",[s._v("Mirror Server")]),s._v(" (Restricted Network)")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Untar the mirror-operator.tar.gz file")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf /path/to/mirror-operator.tar.gz -C "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators/\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Login to your mirror registry to push new images")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" podman login "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("mirror_registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Load the required catalog image and validate the same")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" podman load -i "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("-catalog.tar\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" podman images\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Push the catalog image to the mirror registry")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" podman push "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog_image_tag"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("mirror_registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog_image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("-index:v4.9\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Install the skopeo tool to perform a copy of the images")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" skopeo -y\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Transfer the images from your director into the mirror registry")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" skopeo copy --authfile "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/secrets/pull-secret-registry.json --a\ndir:./ "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" docker://"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("mirror registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("imageurl"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("tag"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" skopeo copy --authfile "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/secrets/pull-secret-registry.json --a\ndir:./ "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" docker://"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("mirror registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("imageurl"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("tag"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])])])]),s._v(" "),e("p",[s._v("Do this for all the directory folders you have by referring the mapping.txt for the corresponding tags.")]),s._v(" "),e("h3",{attrs:{id:"for-the-installer-server-restricted-network"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-the-installer-server-restricted-network"}},[s._v("#")]),s._v(" For the "),e("strong",[s._v("Installer Server")]),s._v(" (Restricted Network)")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Disable the sources for the default catalogs by adding disableAllDefaultSources: true to the OperatorHub spec:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc patch OperatorHub cluster --type json "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -p "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'[{"op": "add", "path": "/spec/disableAllDefaultSources", "value": true}]\'')]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Untar the installer-operator.tar.gz file")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf /path/to/mirror-operator.tar.gz -C "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators/\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create the CatalogSource.yaml file")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" CatalogSource.yaml\n")])])]),e("p",[s._v("Paste the following content: (Refer to instruction 16 for the catalog image)")]),s._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" operators.coreos.com/v1alpha1\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" CatalogSource\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" my"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("operator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("catalog\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" openshift"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("marketplace\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("sourceType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" grpc\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n<registry_mirror"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("<port"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("/<namespace"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("/<catalog_image"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("v4.9\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("displayName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" My Operator Catalog\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("publisher")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <custom_publisher_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Verify the following resources are created successfully")]),s._v(" "),e("p",[e("strong",[s._v("Check the pods:")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc get pods -n openshift-marketplace\n")])])]),e("p",[s._v("Example Output:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("NAME READY STATUS RESTARTS AGE\n\nmy-operator-catalog-6njx6 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1 Running "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 28s\n\nmarketplace-operator-d9f549946-96sgr "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1 Running "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 26h\n")])])]),e("p",[e("strong",[s._v("Check the CatalogSource")]),s._v(":")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc get catalogsource -n openshift-marketplace\n")])])]),e("p",[s._v("Example Output:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("NAME "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("DISPLAY")]),s._v(" TYPE PUBLISHER AGE\n\nmy-operator-catalog My Operator Catalog grpc 5s\n")])])]),e("p",[e("strong",[s._v("Check the PackageManifest:")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc get packagemanifest -n openshift-marketplace\n")])])]),e("p",[s._v("Example Output:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("NAME CATALOG AGE\n\njaeger-product My Operator Catalog 93s\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Apply the imageContentSourcePolicy.yaml file ( any further new\nentries for new operators can be appended to the existing yaml file)")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc create -f imageContentSourcePolicy.yaml\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Wait for the Image Content Source Policy to apply to all the nodes\nin the cluster")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),s._v(" oc get nodes\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("The nodes will go from Ready to NotReady and Scheduling Disabled states.")]),s._v(" "),e("p",[s._v("Wait for all the nodes to get back to Ready state")]),s._v(" "),e("p",[s._v("watch oc get mcp")])]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Wait for the UPDATED states of both the master and worker to turn to True")])])]),s._v(" "),e("li",[e("p",[s._v("Login to OpenShift Console")])]),s._v(" "),e("li",[e("p",[s._v("Install the newly pushed Operator in required namespace")])]),s._v(" "),e("li",[e("p",[s._v("Deploy instance as required")])]),s._v(" "),e("li",[e("p",[s._v("Repeat above steps for other required operators.# Red Hat OpenShift Container Platform installation in the restricted network environment")])])]),s._v(" "),e("h2",{attrs:{id:"solution-components-overview-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#solution-components-overview-2"}},[s._v("#")]),s._v(" Solution components overview")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Download server")])]),s._v(" "),e("li",[e("p",[s._v("Centos Yum repository server")])]),s._v(" "),e("li",[e("p",[s._v("OpenShift Mirror registry")])]),s._v(" "),e("li",[e("p",[s._v("Installer machine")])]),s._v(" "),e("li",[e("p",[s._v("iPXE server")])]),s._v(" "),e("li",[e("p",[s._v("Load balancer")])]),s._v(" "),e("li",[e("p",[s._v("OpenShift cluster nodes")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("Bootstrap node")])]),s._v(" "),e("li",[e("p",[s._v("Master nodes")])]),s._v(" "),e("li",[e("p",[s._v("Worker nodes")])])])])]),s._v(" "),e("p",[e("img",{attrs:{src:t(360),alt:""}})]),s._v(" "),e("p",[e("strong",[s._v("Figure 19")]),s._v(". Air-gap installation solution layout")]),s._v(" "),e("h2",{attrs:{id:"flow-of-execution-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flow-of-execution-2"}},[s._v("#")]),s._v(" Flow of Execution")]),s._v(" "),e("p",[e("img",{attrs:{src:t(361),alt:""}})]),s._v(" "),e("p",[e("strong",[s._v("Figure 20")]),s._v(". Air-gap installation Solution Flow Diagram")]),s._v(" "),e("h2",{attrs:{id:"download-server-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#download-server-2"}},[s._v("#")]),s._v(" Download server")]),s._v(" "),e("p",[s._v("Download server is the server which has conditional internet access and is used to built on virtual machine with the following configurations")]),s._v(" "),e("ul",[e("li",[e("p",[s._v('OS - CentOS 7 with preinstalled packages such as "Development Tools", "Compatibility Libraries", "System Administration Tools"')])]),s._v(" "),e("li",[e("p",[s._v("CPU - 4 vCPU")])]),s._v(" "),e("li",[e("p",[s._v("Memory - 8 GB")])]),s._v(" "),e("li",[e("p",[s._v("Disk - 300 GB free space in the / partition")])]),s._v(" "),e("li",[e("p",[s._v("Network adapter - 1 network adapter with connectivity to the production network")])])]),s._v(" "),e("h3",{attrs:{id:"for-the-yum-repository-server-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-the-yum-repository-server-2"}},[s._v("#")]),s._v(" For the Yum repository server")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Download the necessary RPM packages for yum-utils, epel-release, createrepo and nginx and zip them to a tar file")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/rpms\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/hpe/solutions/hpe-solutions-openshift/rpms\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" http://mirror.centos.org/centos/7/os/x86_64/Packages/createrepo-0.9.9-28.el7.noarch.rpm \n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" http://nginx.org/packages/mainline/centos/7/x86_64/RPMS/nginx-1.9.9-1.el7.ngx.x86_64.rpm\n")])])]),e("p",[s._v("Delta RPM (optional  if minimal installation is done)")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" http://mirror.centos.org/centos/7/os/x86_64/Packages/deltarpm-3.6-3.el7.x86_64.rpm\n")])])]),e("p",[s._v("Python Delta RPM (optional  if minimal installation is done)")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" http://mirror.centos.org/centos/7/os/x86_64/Packages/python-deltarpm-3.6-3.el7.x86_64.rpm\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zcf centos-rpms.tar.gz *\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Download the base, extras, centosplus and updates repo to the destination download directory")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/yum_repos\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/yum_repos\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/hpe/solutions/hpe-solutions-openshift/yum_repos\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" epel-release createrepo yum-utils reposync\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" reposync --gpgcheck -l --repoid"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("base --download_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/hpe/solutions/hpe-solutions-openshift/yum_repos --downloadcomps --download-metadata\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" reposync --gpgcheck -l --repoid"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("extras --download_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/hpe/solutions/hpe-solutions-openshift/yum_repos --downloadcomps --download-metadata\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" reposync --gpgcheck -l --repoid"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("updates --download_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/hpe/solutions/hpe-solutions-openshift/yum_repos --downloadcomps --download-metadata\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" reposync --gpgcheck -l --repoid"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("centosplus --download_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/hpe/solutions/hpe-solutions-openshift/yum_repos --downloadcomps --download-metadata\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zvcf centos-yum-repository.tar.gz *\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Securely transfer the zipped files to the server to be used as a yum repository server")])])]),s._v(" "),e("h3",{attrs:{id:"for-the-mirror-registry-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-the-mirror-registry-2"}},[s._v("#")]),s._v(" For the mirror registry")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Create the directories needed for the mirror repository")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/registry\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REGISTRY_BASE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/opt/hpe/solutions/hpe-solutions-openshift/registry"')]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("auth,certs,data,downloads"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("images,tools,secrets"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v('Set the hostname of the server and update the hostname of the external server in the "hosts" file:')]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hostnamectl set-hostname registry_hostname\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/hosts\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 registry_hostname\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Registry_hostname refers to common hostname/FQDN of the download servers and the internal mirror registry.")]),s._v(" "),e("p",[s._v("It is not necessary to create the DNS entry of the download server.")])])]),s._v(" "),e("li",[e("p",[s._v("Download the necessary packages")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y jq openssl podman p7zip httpd-tools "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("screen")]),s._v(" nmap telnet "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ftp")]),s._v(" tftp openldap-clients tcpdump wireshark xorg-x11-xauth tmux net-tools nfs-utils sg3_utils bind-utils rlwrap uucp\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Generating the self-signed certificate")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/certs/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("csr_answer.txt "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" EOF\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n default_bits "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v("\n\n prompt "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" no\n\n default_md "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sha256\n\n distinguished_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" dn\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" dn "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("C")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("US\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ST")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("New York\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("L")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("New York\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("O")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("MyOrg\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("OU")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("MyOU\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("emailAddress")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("email_address\n\n CN "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" replace with registry server hostname/FQDN. This is same as\n the internal mirror registry hostname/FQDN\n\n EOF\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" openssl req -newkey rsa:4096 -nodes -sha256 -keyout domain.key -x509 -days "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("365")]),s._v(" -out domain.crt -config "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" csr_answer.txt "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("List and verify the generated self-signed certificate - there would be domain.crt and domain.key files within the ${REGISTRY_BASE}/certs/ directory.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ll "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/certs/\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Generate the credentials to access the registry")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" htpasswd -bBc "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/auth/htpasswd myuser mypassword\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Open firewall port 5000 to enable accessing the registry")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FIREWALLD_DEFAULT_ZONE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("firewall-cmd --get-default-zone"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v(" --permanent\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" firewall-cmd --reload\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create/Run the registry container")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" podman run --name my-registry --rm -d -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(":5000 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/data:/var/lib/registry:z "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/auth:/auth:z -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"REGISTRY_AUTH=htpasswd"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"REGISTRY_AUTH_HTPASSWD_REALM=Registry"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"REGISTRY_HTTP_SECRET=ALongRandomSecretForRegistry"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REGISTRY_AUTH_HTPASSWD_PATH")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/auth/htpasswd "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/certs:/certs:z "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REGISTRY_HTTP_TLS_CERTIFICATE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/certs/domain.crt "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REGISTRY_HTTP_TLS_KEY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/certs/domain.key "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n docker.io/library/registry:2\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Verify connectivity to your registry with curl. Provide it the username and password you created.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -u myuser:mypassword -k  https://registry_hostname:5000/v2/_catalog \n")])])]),e("p",[s._v('This should return an "empty" repository for now')]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"repositories"')]),s._v(":"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Syncing the repositories")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("Export the OCP Release version")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("OCP_RELEASE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -s https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/release.txt "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Name:'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $NF}'")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"export OCP_RELEASE='),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v('"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/env_ocp\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Download openshift client tool")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux-"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v(".tar.gz -P "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-install-linux-"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v(".tar.gz -P "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Untar the openshift client tool and create a soft link")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xzf "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/openshift-client-linux-"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v(".tar.gz -C "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("> ln -s ${REGISTRY_BASE}/downloads/tools/oc /usr/local/bin/oc\n")])])]),e("p",[s._v("Retrieve and create the necessary pull secrets/credentials files")])]),s._v(" "),e("li",[e("p",[s._v("Navigate to the ${REGISTRY_BASE}/downloads/secrets/")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/secrets/\n")])])])]),s._v(" "),e("li",[e("p",[s._v('Login to the Red Hat account and Navigate to the https://cloud.redhat.com/openshift/install/pull-secret and click on "copy pull secret" to retrieve your pull secret.')])]),s._v(" "),e("li",[e("p",[s._v("Create a file for the copied pull-secret and validate the same")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pull-secret.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" EOF\n\n  Copied-pull-secret\n    \n  EOF\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pull-secret.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Generate a base64 output from the user+password string")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'myuser:mypassword'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" base64 -w0\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REG_SECRET")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'myuser:mypassword'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" base64 -w0"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create a bundle json file with all the registries and validate the same")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pull-secret.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'.auths += {"<registry_server_fqdn>:5000": {"auth":\n"REG_SECRET","email": "<email_address>"}}\'')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/REG_SECRET/'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REG_SECRET")]),s._v('/"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pull-secret-bundle.json\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pull-secret-bundle.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Update the <registry_server_fqdn> field in the above command and all the subsequent occurrences of similar flag with the fully qualified domain name of the registry server as per the DNS entry. Update the <email_address> field with the email address used during the certificate creation.")])])]),s._v(" "),e("li",[e("p",[s._v("Create a json file specifically for the mirror registry and validate the same")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ \"auths\": {}}'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'.auths += {"<registry_server_fqdn>:5000": {"auth":\n"REG_SECRET","email": "<email_address>"}}\'')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/REG_SECRET/'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REG_SECRET")]),s._v('/"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq -c ."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pull-secret-registry.json\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pull-secret-registry.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Trust the self-signed certificate generated earlier")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/certs/domain.crt /etc/pki/ca-trust/source/anchors/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" update-ca-trust extract\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Export a few more variable for the mirroring process and write them into the environment variables file which can be later used to source")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("LOCAL_REGISTRY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<registry_server_fqdn>:5000'")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("OCP_RELEASE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v('-x86_64"')]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("LOCAL_REPOSITORY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ocp/openshift4'")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PRODUCT_REPO")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'openshift-release-dev'")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("LOCAL_SECRET_JSON")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v('/downloads/secrets/pull-secret-bundle.json"')]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RELEASE_NAME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ocp-release"')]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GODEBUG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"x509ignoreCN=0"')]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"export LOCAL_REGISTRY='<registry_server_fqdn>:5000'\"")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/env_ocp\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[[ ! ${OCP_RELEASE} =~ '")]),s._v("x86_64"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' ]] && export OCP_RELEASE=\"${OCP_RELEASE}-x86_64\"'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/env_ocp\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"export LOCAL_REPOSITORY='ocp/openshift4'\"")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/env_ocp\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"export PRODUCT_REPO='openshift-release-dev'\"")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/env_ocp\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export LOCAL_SECRET_JSON=\"${REGISTRY_BASE}/downloads/secrets/pull-secret-bundle.json\"'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/env_ocp\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export RELEASE_NAME=\"ocp-release\"'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/env_ocp\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Start the oc release mirroring process")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc adm -a "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCAL_SECRET_JSON}")]),s._v(" release mirror "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n--from"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("quay.io/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PRODUCT_REPO}")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${RELEASE_NAME}")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n--to"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCAL_REGISTRY}")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCAL_REPOSITORY}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n--to-release-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCAL_REGISTRY}")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCAL_REPOSITORY}")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/secrets/mirror-output.txt\n")])])])])])]),s._v(" "),e("li",[e("p",[s._v("Generating the openshift binary and validating the same")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/tools/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc adm -a "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCAL_SECRET_JSON}")]),s._v(" release extract --command"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("openshift-install "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCAL_REGISTRY}")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCAL_REPOSITORY}")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_RELEASE}")]),s._v('"')]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v(" -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" \n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("This should return a value 0")])])]),s._v(" "),e("li",[e("p",[s._v("Save the Registry container")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" podman stop my-registry\n")])])]),e("p",[s._v("(optional)")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" podman "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" --force my-registry\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" podman save docker.io/library/registry:2 -o "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/images/registry.tar\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Remove the unwanted certificates and generate the tar file of the contents within registry directory. We will be creating a new certificate for the internal mirror registry server")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/certs/domain.\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zvcf ocp45-registry.tar.gz \n")])])])]),s._v(" "),e("li",[e("p",[s._v("This can be securely transferred to the server which is meant to be used as a mirror-registry for installing OCP in the restricted environment.")])])]),s._v(" "),e("h3",{attrs:{id:"for-the-installer-machine-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-the-installer-machine-2"}},[s._v("#")]),s._v(" For the installer machine")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Create a new directory for storing the files related to installer machine")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/installer\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Navigate to the /opt/hpe/solutions/hpe-solutions-openshift/registry/downloads/tools/\nand copy the tools oc, kubectl and openshift-install into the folder /opt/hpe/solutions/hpe-solutions-openshift/installer.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/hpe/solutions/hpe-solutions-openshift/registry/downloads/tools/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" kubectl oc openshift-install /opt/hpe/solutions/hpe-solutions-openshift/installer\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create a install-config.yaml template file within /opt/hpe/solutions/hpe-solutions-openshift/installer directory")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /opt/hpe/solutions/hpe-solutions-openshift/installer/install-config.yaml\n")])])]),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[s._v("\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("baseDomain")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("controlPlane")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" master\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hyperthreading")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Enabled\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("compute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" worker\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hyperthreading")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Enabled\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networking")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("clusterNetworks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cidr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10.128.0.0/14\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hostPrefix")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("machineNetwork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cidr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 172.18.0.0/16\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networkType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" OpenShiftSDN\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("serviceNetwork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 172.30.0.0/16\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("platform")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("none")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("fips")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("false")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("pullSecret")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("sshKey")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("additionalTrustBundle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("BEGIN CERTIFICATE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("\n\n <"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("base"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("encoded"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" DER "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" CA certificate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("END CERTIFICATE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("\n\n EOF\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Tar the files corresponding to installer machine and securely transfer them to the server which is meant to be used as an installer for installing OCP in the restricted environment")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/hpe/solutions/hpe-solutions-openshift/installer\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zvcf installer.tar.gz *\n")])])])])]),s._v(" "),e("h3",{attrs:{id:"for-the-ipxe-server-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-the-ipxe-server-2"}},[s._v("#")]),s._v(" For the iPXE server")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Create a directory as a destination and download the necessary RPMs as follows")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/coreos-images\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/hpe/solutions/hpe-solutions-openshift/coreos-images\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://www.rpmfind.net/linux/centos/7.9.2009/extras/x86_64/Packages/python-httplib2-0.9.2-1.el7.noarch.rpm\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://www.rpmfind.net/linux/centos/7.9.2009/os/x86_64/Packages/python-jinja2-2.7.2-4.el7.noarch.rpm\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://www.rpmfind.net/linux/epel/7/ppc64le/Packages/p/python-keyczar-0.71c-2.el7.noarch.rpm\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://www.rpmfind.net/linux/centos/7.9.2009/extras/x86_64/Packages/sshpass-1.06-2.el7.x86_64.rpm\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://www.rpmfind.net/linux/centos/7.9.2009/extras/x86_64/Packages/python-crypto-2.6.1-1.el7.centos.x86_64.rpm\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://releases.ansible.com/ansible/rpm/release/epel-7-x86_64/ansible-2.9.9-1.el7.ans.noarch.rpm\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Retrieve the OCP ISO version")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("OCP_ISO_VERSION")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -s https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/sha256sum.txt "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" live "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $2}'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -1"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_ISO_VERSION}")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Download the CoreOS images")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/rhcos-"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_ISO_VERSION}")]),s._v("-x86_64-live-initramfs.x86_64.img \n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/rhcos-"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_ISO_VERSION}")]),s._v("-x86_64-live-kernel-x86_64 \n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/rhcos-"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OCP_ISO_VERSION}")]),s._v("-x86_64-live-rootfs.x86_64.img \n")])])])]),s._v(" "),e("li",[e("p",[s._v("Download git and git repositories - hpe-solutions-openshift and matchbox with the following commands")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" -y\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/HewlettPackard/hpe-solutions-openshift.git \n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://github.com/poseidon/matchbox/releases/download/v0.8.0/matchbox-v0.8.0-linux-amd64.tar.gz\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Generate the Tar file of the images")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zcf ipxe.tar.gz *\n")])])])]),s._v(" "),e("li",[e("p",[s._v("This can be securely transferred to the server which is meant to be used as the iPXE server for installing OCP in the restricted environment.")]),s._v(" "),e("p",[s._v("Ansible and python setup - https://medium.com/@theking99984/how-to-install-ansible-offline-on-centos-and-rhel-f3c872b2d91e")])])]),s._v(" "),e("h2",{attrs:{id:"centos-7-internal-yum-server-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#centos-7-internal-yum-server-2"}},[s._v("#")]),s._v(" CentOS 7 internal Yum Server")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("CentOS 7 Yum server is offline/disconnected server which has conditional internet access and is used as a remote yum server for the restricted network centos servers. It built on virtual machine with the following configurations")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("OS - CentOS 7 with preinstalled packages as follows")]),s._v(" "),e("ul",[e("li",[e("p",[s._v('"Development Tools"')])]),s._v(" "),e("li",[e("p",[s._v('"Compatibility Libraries"')])]),s._v(" "),e("li",[e("p",[s._v('"System Administration Tools"')])])])]),s._v(" "),e("li",[e("p",[s._v("CPU - 4 vCPU")])]),s._v(" "),e("li",[e("p",[s._v("Memory - 8 GB")])]),s._v(" "),e("li",[e("p",[s._v("Disk - 300 GB free space in the / partition")])]),s._v(" "),e("li",[e("p",[s._v("Network adapter - 1 network adapter with connectivity to the production network")])])])]),s._v(" "),e("li",[e("p",[s._v("Refer to the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#Non-root-user-access"}},[s._v("setup the non-root")]),s._v(" section of the deployment guide to create a non-root user and switch to the thus created non-root user")],1)]),s._v(" "),e("li",[e("p",[s._v("Navigate to the folder that contains the centos-rpms.tar.gz and centos-yum -repository.tar.gz shared from the download server")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" path/to/copied/tar/file/centos-rpms.tar.gz\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Extract the tar file centos-rpms.tar.gz consisting of the RPMs needed to bring up the offline/disconnected CentOS Yum server.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf centos-rpms.tar.gz\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Install the RPMs")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -ivh nginx-1.9.9-1.el7.ngx.x86_64.rpm\n")])])]),e("p",[s._v("(optional)")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -ivh deltarpm-3.6-3.el7.x86_64.rpm\n")])])]),e("p",[s._v("(optional)")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -ivh python-deltarpm-3.6-3.el7.x86_64.rpm\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -ivh createrepo-0.9.9-28.el7.noarch.rpm\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Try with --nodeps option if its failing")])])]),s._v(" "),e("li",[e("p",[s._v("Enable, start and verify the status of Nginx web service.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start nginx\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl status nginx\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Move and untar the "),e("em",[s._v("centos-yum-repository.tar.gz")]),s._v(" to the root directory of the Nginx server i.e, /usr/share/nginx/html/")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf path/to/copied/tar/file/centos-yum-repository.tar.gz -C /usr/share/nginx/html/\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create the Yum repos for base, extras, updates and centosplus repos.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" createrepo /usr/share/nginx/html/base/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" createrepo /usr/share/nginx/html/centosplus/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" createrepo /usr/share/nginx/html/extras/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" createrepo /usr/share/nginx/html/updates/\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Update the Nginx configuration file with the following details to host the Yum repository.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/nginx/conf.d/repos.conf\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("server "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\nlisten "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nserver_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("IP_address_or_FQDN_of_the_centos_yum_server"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nroot /usr/share/nginx/html/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nlocation / "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\nindex index.php index.html index.htm"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nautoindex on"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#enable listing of directory index")]),s._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Remove/rename files with extension .html in /usr/share/nginx/html/")])]),s._v(" "),e("li",[e("p",[s._v("Restart the nginx web service")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl restart nginx\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Update the firewall ports to allow http communication.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FIREWALLD_DEFAULT_ZONE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("firewall-cmd --get-default-zone"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v(" --permanent\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --reload\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Validate the creation of yum server with the following command. User should be able to the see the following content")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("html"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("head"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("title"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Index of /"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/title"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/head"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("body "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("bgcolor")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"white"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("h"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v("Index of /"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/h"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("hr"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pre"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"../"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"base/"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("base/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 09-Oct-2020 06:24 -\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"centosplus/"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("centosplus/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 09-Oct-2020 06:25 -\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"extras/"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("extras/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 09-Oct-2020 06:25 -\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"updates/"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("updates/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 09-Oct-2020 06:25 -\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"50x.html.bck"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("50x.html.bck"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 09-Dec-2015 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(":05 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("537")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"index.html.bck"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("index.html.bck"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 09-Dec-2015 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(":05 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("612")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/pre"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("hr"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/body"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/html"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("p",[s._v("Reference https://www.tecmint.com/setup-local-http-yum-repository-on-centos-7/")])])]),s._v(" "),e("h2",{attrs:{id:"mirror-registry-internal-registry-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mirror-registry-internal-registry-2"}},[s._v("#")]),s._v(" Mirror registry (Internal registry)")]),s._v(" "),e("p",[s._v("Mirror registry is the server which serves as the container registry for the Red Hat OpenShift Container Platform cluster, this server does not have internet access and is built on virtual machine with the following configurations.")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("OS - CentOS 7 with preinstalled packages as follows")]),s._v(" "),e("ul",[e("li",[e("p",[s._v('"Development Tools"')])]),s._v(" "),e("li",[e("p",[s._v('"Compatibility Libraries"')])]),s._v(" "),e("li",[e("p",[s._v('"System Administration Tools"')])])])]),s._v(" "),e("li",[e("p",[s._v("CPU - 4 vCPU")])]),s._v(" "),e("li",[e("p",[s._v("Memory - 8 GB")])]),s._v(" "),e("li",[e("p",[s._v("Disk - 300 GB free space in the / partition")])]),s._v(" "),e("li",[e("p",[s._v("Network adapter - 1 network adapter with connectivity to the production network")])])]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Refer to the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#Non-root-user-access"}},[s._v("setup the non-root")]),s._v(" section of the deployment guide to create a non-root user and switch to the thus created non-root user")],1)]),s._v(" "),e("li",[e("p",[s._v("Refer to the "),e("a",{attrs:{href:"#Setup-centos-servers-to-use-internal-yum-server"}},[s._v("Setup centos servers to use internal yum server")]),s._v(" section of the deployment guide to enable offline package/module installation for the mirror registry")])]),s._v(" "),e("li",[e("p",[s._v("Set the hostname of the internal registry server and update the same in /etc/hosts file as follows:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hostnamectl set-hostname registry\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/hosts\n\n "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("registry_hostname"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Registry_hostname refers to common hostname/FQDN of the download servers and the internal mirror registry.")]),s._v(" "),e("p",[s._v("It is not necessary to create the DNS entry of the download server.")])])]),s._v(" "),e("li",[e("p",[s._v("Create a directory for the mirror-registry files")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/registry\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Move and extract the ocp45-registry.tar.gz file from the download/external server to the location\n/opt/hpe/solutions/hpe-solutions-openshift/registry")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REGISTRY_BASE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/hpe/solutions/hpe-solutions-openshift/registry\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf /path/to/ocp45-registry.tar.gz -C "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REGISTRY_BASE")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Source the environment variables as saved in env_ocp file from the download/external server")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REGISTRY_BASE")]),s._v("/downloads/tools/env_ocp\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create the certificate for the internal registry server")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REGISTRY_BASE")]),s._v("/certs/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" openssl req -newkey rsa:4096 -nodes -sha256 -keyout domain.key -x509 -days "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("365")]),s._v(" -out domain.crt\n")])])]),e("p",[s._v("Provide the following details when prompted")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("Country Name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" letter code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AU"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" US\n\nState or Province Name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("full name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" New York\n\nLocality Name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("eg, city"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" New York\n\nOrganization Name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("eg, company"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" MyOrg\n\nOrganizational Unit Name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("eg, section"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" MyOU\n\nCommon Name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g. server FQDN or YOUR name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("registry_server_fqdn -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" same as external download server fqdn"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\nEmail Address "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("email_address"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Provide the same email ID for the flag <email_address> as provided in\nthe external download server while downloading the openshift images.")])])]),s._v(" "),e("li",[e("p",[s._v("Trust the self-signed certificate generated earlier")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REGISTRY_BASE")]),s._v("/certs/domain.crt /etc/pki/ca-trust/source/anchors/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" update-ca-trust extract\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Install podman")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" podman -y\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Load the registry container image and verify the same using the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" podman load -i "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REGISTRY_BASE")]),s._v("/downloads/images/registry.tar\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" podman image list\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Update the Firewall rules to open the ports 5000 using the following commands")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FIREWALLD_DEFAULT_ZONE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("firewall-cmd --get-default-zone"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$ FIREWALLD_DEFAULT_ZONE --permanent\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --reload\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Run the podman registry container and verify the same using the following commands")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" podman run --name my-registry --rm -d -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(":5000 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REGISTRY_BASE")]),s._v("/data:/var/lib/registry:z "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REGISTRY_BASE")]),s._v("/auth:/auth:z "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"REGISTRY_AUTH=htpasswd"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"REGISTRY_AUTH_HTPASSWD_REALM=Registry"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"REGISTRY_HTTP_SECRET=ALongRandomSecretForRegistry"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REGISTRY_AUTH_HTPASSWD_PATH")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/auth/htpasswd "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REGISTRY_BASE")]),s._v("/certs:/certs:z "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REGISTRY_HTTP_TLS_CERTIFICATE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/certs/domain.crt "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REGISTRY_HTTP_TLS_KEY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/certs/domain.key \n \n docker.io/library/registry:2\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" podman "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -u myuser:mypassword -k\n")])])]),e("p",[s._v("Replace the "),e("strong",[s._v("<registry_hostname_fqdn>")]),s._v(" to the fully qualified domain name of the internal mirror registry server. Output of the above command should be as follows:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"repositories"')]),s._v(":"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ocp/openshift4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])])]),s._v(" "),e("h2",{attrs:{id:"dns-entries-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dns-entries-2"}},[s._v("#")]),s._v(" DNS entries")]),s._v(" "),e("p",[s._v("Consult the User Provisioned DNS requirements section for details on creating the DNS entries required for the Red Hat OpenShift Container Platform installation.")]),s._v(" "),e("h2",{attrs:{id:"load-balance-server-with-haproxy-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#load-balance-server-with-haproxy-2"}},[s._v("#")]),s._v(" Load balance server with HAProxy")]),s._v(" "),e("p",[s._v("This server is used as a load balancer for the Red Hat OpenShift Container Platform cluster, this server does not have internet access and is built on virtual machine with the following configurations")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("OS - CentOS 7 with preinstalled packages as follows")]),s._v(" "),e("ul",[e("li",[e("p",[s._v('"Development Tools"')])]),s._v(" "),e("li",[e("p",[s._v('"Compatibility Libraries"')])]),s._v(" "),e("li",[e("p",[s._v('"System Administration Tools"')])])])]),s._v(" "),e("li",[e("p",[s._v("CPU - 4 vCPU")])]),s._v(" "),e("li",[e("p",[s._v("Memory - 8 GB")])]),s._v(" "),e("li",[e("p",[s._v("Disk - 150 GB")])]),s._v(" "),e("li",[e("p",[s._v("Network adapter - 1 network adapter with connectivity to the production network")])])]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Refer to the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#Non-root-user-access"}},[s._v("setup the non-root")]),s._v(" section of the deployment guide to create a non-root user and switch to the thus created non-root user")],1)]),s._v(" "),e("li",[e("p",[s._v("Refer to the "),e("a",{attrs:{href:"#Setup-centos-servers-to-use-internal-yum-server"}},[s._v("Setup centos servers to use internal yum server")]),s._v(" section of the deployment guide to enable offline package/module installation for the mirror registry")])]),s._v(" "),e("li",[e("p",[s._v("Disable SELinux")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/enforcing/disabled/g'")]),s._v(" /etc/selinux/config\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Set the hostname of the load balancer server as follows:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hostnamectl set-hostname "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("loadbalancer_fqdn"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("A reboot may be required at this point to reflect the changes done so\nfar.")]),s._v(" "),e("p",[s._v("To check selinux status, use the following command.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" getenforce\n")])])])])]),s._v(" "),e("li",[e("p",[s._v("Install HAProxy using the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" haproxy\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Update the HAProxy configuration file present at /etc/haproxy/haproxy.cfg as follows")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/haproxy/haproxy.cfg\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Example configuration for a possible web application. See the")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# full configuration options online.")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <http://haproxy.1wt.eu/download/1.4/doc/configuration.txt>")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Global settings")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n global\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to have these messages end up in /var/log/haproxy.log you will")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# need to:")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1) configure syslog to accept network log events. This is done")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# by adding the '-r' option to the SYSLOGD_OPTIONS in")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /etc/sysconfig/syslog")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2) configure local2 events to go to the /var/log/haproxy.log")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# file. A line like the following can be added to")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /etc/sysconfig/syslog")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# local2.* /var/log/haproxy.log")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n log "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 local2\n\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chroot")]),s._v(" /var/lib/haproxy\n\n pidfile /var/run/haproxy.pid\n\n maxconn "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4000")]),s._v("\n\n user haproxy\n\n group haproxy\n\n daemon\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# turn on stats unix socket")]),s._v("\n\n stats socket /var/lib/haproxy/stats\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# common defaults that all the 'listen' and 'backend' sections")]),s._v("\n will\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# use if not designated in their block")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n defaults\n\n mode http\n\n log global\n\n option httplog\n\n option dontlognull\n\n option http-server-close\n\n option forwardfor except "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.0/8\n\n option redispatch\n\n retries "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" http-request 10s\n\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" queue 1m\n\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" connect 10s\n\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" client 1m\n\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" server 1m\n\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" http-keep-alive 10s\n\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" check 10s\n\n maxconn "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# main frontend which proxys to the backends")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n frontend main *:5000\n\n acl url_static path_beg -i /static /images /javascript /stylesheets\n\n acl url_static path_end -i .jpg .gif .png .css .js\n\n use_backend static "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" url_static\n\n default_backend app\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# static backend for serving up images, stylesheets and such")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n backend static\n\n balance roundrobin\n\n server static "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:4331 check\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# round robin balancing between the various backends")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n\n backend app\n\n balance roundrobin\n\n server app1 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:5001 check\n\n server app2 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:5002 check\n\n server app3 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:5003 check\n\n server app4 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:5004 check\n\n frontend openshift-api-server\n\n "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" *:6443\n\n default_backend openshift-api-server\n\n mode tcp\n\n option tcplog\n\n backend openshift-api-server\n\n balance "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v("\n\n mode tcp\n\n server ocpboot ocpboot.ocp.twentynet.local:6443 check\n\n server ocpmaster1 ocpmaster1.ocp.twentynet.local:6443 check\n\n server ocpmaster2 ocpmaster2.ocp.twentynet.local:6443 check\n\n server ocpmaster3 ocpmaster3.ocp.twentynet.local:6443 check\n\n frontend machine-config-server68\n\n "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" *:22623\n\n default_backend machine-config-server\n\n mode tcp\n\n option tcplog\n\n backend machine-config-server\n\n balance "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v("\n\n mode tcp\n\n server ocpboot ocpboot.ocp.twentynet.local:22623 check\n\n server ocpmaster1 ocpmaster1.ocp.twentynet.local:22623 check\n\n server ocpmaster2 ocpmaster2.ocp.twentynet.local:22623 check\n\n server ocpmaster3 ocpmaster3.ocp.twentynet.local:22623 check\n\n frontend ingress-http\n\n "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" *:80\n\n default_backend ingress-http\n\n mode tcp\n\n option tcplog\n\n backend ingress-http\n\n balance "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v("\n\n mode tcp\n\n server ocpworker1 ocpworker1.ocp.twentynet.local:80 check\n\n server ocpworker2 ocpworker2.ocp.twentynet.local:80 check\n\n server ocpworker3 ocpworker3.ocp.twentynet.local:80 check\n\n frontend ingress-https\n\n "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" *:443\n\n default_backend ingress-https\n\n mode tcp\n\n option tcplog\n\n backend ingress-https\n\n balance "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v("\n\n mode tcp\n\n server ocpworker1 ocpworker1.ocp.twentynet.local:443 check\n\n server ocpworker2 ocpworker2.ocp.twentynet.local:443 check\n\n server ocpworker3 ocpworker3.ocp.twentynet.local:443 check\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Start the haproxy service")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start haproxy\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Update the Firewall rules to open the ports 80, 443, 6443, 22623 using the following commands")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FIREWALLD_DEFAULT_ZONE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("firewall-cmd --get-default-zone"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v(" --permanent\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("443")]),s._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v(" --permanent\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6443")]),s._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v(" --permanent\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("22623")]),s._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIREWALLD_DEFAULT_ZONE")]),s._v(" --permanent\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd --reload\n")])])]),e("p",[s._v("The load balance node is now ready to be used.")])])]),s._v(" "),e("h2",{attrs:{id:"installer-machine-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installer-machine-2"}},[s._v("#")]),s._v(" Installer machine")]),s._v(" "),e("p",[s._v("This machine acts as the installer machine for deploying CoreOS for the Red Hat OpenShift Container Platform cluster nodes, this server does not have internet access and is built on virtual machine with the following configurations")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("OS - CentOS 7 with preinstalled packages as follows")]),s._v(" "),e("ul",[e("li",[e("p",[s._v('"Development Tools"')])]),s._v(" "),e("li",[e("p",[s._v('"Compatibility Libraries"')])]),s._v(" "),e("li",[e("p",[s._v('"System Administration Tools"')])])])]),s._v(" "),e("li",[e("p",[s._v("CPU - 4 vCPU")])]),s._v(" "),e("li",[e("p",[s._v("Memory - 8 GB")])]),s._v(" "),e("li",[e("p",[s._v("Disk - 150 GB free space in the / partition")])]),s._v(" "),e("li",[e("p",[s._v("Network adapter - 1 network adapter with connectivity to the production network")])])]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Refer to the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#Non-root-user-access"}},[s._v("setup the non-root")]),s._v(" section of the deployment guide to create a non-root user and switch to the thus created non-root user.")],1)]),s._v(" "),e("li",[e("p",[s._v("Refer to the "),e("a",{attrs:{href:"#Setup-centos-servers-to-use-internal-yum-server"}},[s._v("Setup centos servers to use internal yum server")]),s._v(" section of the deployment guide to enable offline package/module installation for the mirror registry.")])]),s._v(" "),e("li",[e("p",[s._v("Navigate to the path to the installer.tar.gz file from the download\nserver and untar it.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /path/to/installer.tar.gz\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf installer.tar.gz\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create a softlink for the openshift-install and oc tools")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s /absolute/path/to/oc /usr/local/bin/oc\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s /absolute/path/to/openshift-install /usr/local/bin/openshift-install\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s /abslute/path/to/kubectl /usr/local/bin/kubectl\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Update the install-config.yaml file with the following details.")]),s._v(" "),e("ul",[e("li",[e("p",[e("strong",[s._v("baseDomain")]),s._v(": Base domain of the DNS which hosts Red Hat OpenShift Container Platform.")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("name")]),s._v(": Name of the OpenShift cluster. This is same as the new domain created in DNS.")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("replicas")]),s._v(": Update this field to reflect the corresponding number of master or worker instances required for the OpenShift cluster as per the installation environment requirements. It is recommended to have a minimum of 3 master nodes and 2 worker nodes per OpenShift cluster.")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("pullSecret")]),s._v(': This should now be the contents of the pull_secret_registry.json present in the "mirror registry server"(internal) at /opt/hpe/solutions/hpe-solutions-openshift/registry/downloads/secrets/pull_secret_registry.json. It consists of the credentials to access the internal/mirror registry only created for the restricted network installation of the Red Hat OpenShift Container Platform cluster.')])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("sshKey")]),s._v(": Update this field with the ssh-key generated for the non-root user of the installer machine. sshkey can be generated with the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ssh-keygen\n")])])]),e("p",[s._v("The resultant value can be retrieved from the /home/non-root-user/.ssh/id_rsa.pub")])])])])]),s._v(" "),e("ul",[e("li",[e("p",[e("strong",[s._v("additionalTrustBundle")]),s._v(": Update this field with the CA certificated (domain.crt) generated in the internal/mirror registry. It can be found at /opt/hpe/solutions/hpe-solutions-openshift/registry/certs/domain.crt within the internal mirror registry server. Make sure the value to this field is right indented (5 spaces from the left).")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("imageContentSources")]),s._v(': This content is taken from the mirror-output.txt generated in the "Download server > For the mirror registry" section of this document. It consists of the end points to connect to, to download the required files while created the Red Hat OpenShift Container Platform cluster in a restricted network environment.')]),s._v(" "),e("p",[s._v("The final version should look as follows:")]),s._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("baseDomain")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <your base domain. Similar to example.com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("controlPlane")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" master\n\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hyperthreading")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Enabled\n\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("compute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" worker\n\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hyperthreading")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Enabled\n\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<your subdomain/cluster name. similar to test-cluster>'")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networking")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("clusterNetworks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cidr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10.128.0.0/14\n\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hostPrefix")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("machineNetwork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cidr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 172.18.0.0/16\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networkType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" OpenShiftSDN\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("serviceNetwork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 172.30.0.0/16\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("platform")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("none")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("fips")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("false")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("pullSecret")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" '<contents of the pull_secret_registry.json file similar to \n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v('"auths"'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v('"<registry_hostname_fqdn'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v('5000"'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v('"auth"'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bXl1c2VyOm15cGFzc3dvcmQ="')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v('"email"'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<email_address>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("'\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("sshKey")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'< Your installer machine Public SSH Key>'")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("additionalTrustBundle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("BEGIN CERTIFICATE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("\n\n <Your CA certificate generated by the non"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("root user in the internal\n mirror registry"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("END CERTIFICATE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("\n")])])]),e("p",[s._v("imageContentSources:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v(" - mirrors:\n\n - "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" registry_hostname_fqdn "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":5000/ocp/openshift4\n\n source: quay.io/openshift-release-dev/ocp-release\n\n - mirrors:\n\n - "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" registry_hostname_fqdn "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":5000/ocp/openshift4\n\n source: quay.io/openshift-release-dev/ocp-v4.0-art-dev\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Content in bold are to be reviewed and replaced with the content relevant to actual setup.")])]),s._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),e("p",[s._v("it is recommended to take a backup of the install-config.yaml file before creating the manifests/ignition file since the file will be consumed while they are created.")])])])]),s._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[e("p",[s._v("Navigate to the path where install-config.yaml is present, create a new directory for the ignition files and copy the install-config.yaml into it. Navigate into the newly created folder")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/path/to/directory/with/openshift-install/tools"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/ignitions\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" install-config.yaml ignitions/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /path/to/ignitions/directory\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create the manifests using the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" openshift-install create manifests --dir"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("./\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create the ignition files")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" openshift-install create ignition-configs --dir"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("./\n")])])]),e("p",[s._v("The ignition files thus generated could be used while the CoreOS operating system is booted on the bootstrap, master and worker nodes via the iPXE server.")])]),s._v(" "),e("li",[e("p",[s._v("Export the kubeconfig file with the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KUBECONFIG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/path/to/kubeconfig/file\n")])])])])]),s._v(" "),e("h2",{attrs:{id:"openshift-cluster-nodes-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#openshift-cluster-nodes-2"}},[s._v("#")]),s._v(" Openshift cluster nodes")]),s._v(" "),e("p",[s._v("Red Hat OpenShift Container Platform sizing varies depending on the requirements of the organization and type of deployment. This section highlights the host sizing details recommended by Red Hat.")]),s._v(" "),e("p",[e("strong",[s._v("Resource Bootstrap node Master node Worker node")])]),s._v(" "),e("ul",[e("li",[e("p",[s._v("CPU 4 4 4")])]),s._v(" "),e("li",[e("p",[s._v("Memory 16GB 16GB 16GB")])]),s._v(" "),e("li",[e("p",[s._v("Disk storage 120GB 120GB 120GB")])]),s._v(" "),e("li",[e("p",[s._v("Disk partitions on each of the nodes are as follows.")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("/var -- 40GB")])]),s._v(" "),e("li",[e("p",[s._v("/usr/local/bin -- 1GB")])]),s._v(" "),e("li",[e("p",[s._v("Temporary directory -- 1GB")])])])])]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Sizing for worker nodes is ultimately dependent on the container workloads and their CPU, memory, and disk requirements.")]),s._v(" "),e("p",[s._v("For more information about Red Hat OpenShift Container Platform sizing, refer to the Red Hat OpenShift Container Platform 4 product documentation at https://access.redhat.com/documentation/en-us/openshift_container_platform/4.4/html/scalability_and_performance/index.")])]),s._v(" "),e("h2",{attrs:{id:"ipxe-server-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ipxe-server-2"}},[s._v("#")]),s._v(" iPXE server")]),s._v(" "),e("p",[s._v("This server is used as OS deployment server for deploying CoreOS for the Red Hat OpenShift Container Platform cluster nodes, this server does not have internet access and is built on virtual machine with the following configurations")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("OS - CentOS 7 with preinstalled packages as follows")]),s._v(" "),e("ul",[e("li",[e("p",[s._v('"Development Tools"')])]),s._v(" "),e("li",[e("p",[s._v('"Compatibility Libraries"')])]),s._v(" "),e("li",[e("p",[s._v('"System Administration Tools"')])])])]),s._v(" "),e("li",[e("p",[s._v("CPU - 4 vCPU")])]),s._v(" "),e("li",[e("p",[s._v("Memory - 8 GB")])]),s._v(" "),e("li",[e("p",[s._v("Disk - 300 GB free space in the / partition")])]),s._v(" "),e("li",[e("p",[s._v("Network adapter - 1 network adapter with connectivity to the production network")])])]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Refer to the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#Non-root-user-access"}},[s._v("setup the non-root")]),s._v(" section of the deployment guide to create a non-root user and switch to the created non-root user")],1)]),s._v(" "),e("li",[e("p",[s._v("Refer to the "),e("a",{attrs:{href:"#Setup-centos-servers-to-use-internal-yum-server"}},[s._v("Setup centos servers to use internal yum server")]),s._v(" section of the deployment guide to enable offline package/module\ninstallation for the mirror registry")])]),s._v(" "),e("li",[e("p",[s._v("Navigate to the path to the ipxe.tar.gz file from the download server and untar it.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" path/to/ipxe.tar.gz\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf ipxe.tar.gz\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Install all the necessary RPMs and ansible as follows.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum localinstall -y *.rpm\n")])])])]),s._v(" "),e("li",[e("p",[s._v('Navigate to the directory "deploy-coreos" path of the github repository hpe-solutions-openshift.')]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /path/to/hpe-solutions-openshift/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" DL/scalable/os-deployment/deploy-rhcos\n")])])]),e("p",[s._v("It is recommended to store the github repository at /opt/hpe/solutions/.")])]),s._v(" "),e("li",[e("p",[s._v("Update the input files such hosts with the following command:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" hosts\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("add the parameters (ansible_ssh_pass, ansible_ssh_user) in the host file for the non-root user")])]),s._v(" "),e("p",[s._v("Eg. 10.4.1.141 ansible_ssh_pass=xxx ansible_ssh_user=user")])]),s._v(" "),e("li",[e("p",[s._v("Update the encrypted input file secret.yml with the following\ncommand")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ansible-vault edit secret.yml\n")])])]),e("p",[s._v('The default password for the encrypted file is "changeme"')])]),s._v(" "),e("li",[e("p",[s._v("Generate the SSH key for the openshift_admin user and copy the SSH key to the known hosts file using the following command.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ssh-keygen\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Ensure there are no previous self-entries in the known host file.")])])]),s._v(" "),e("li",[e("p",[s._v("Copy the thus generated SSH key to the known hosts file using the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ssh-copy-id openshift_admin@"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("ipxe_fqdn"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Move the downloaded matchbox tar file matchbox-v0.8.0-linux-amd64.tar.gz to /tmp/ directory and provide the read permission using the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" /path/to/matchbox-v0.8.0-linux-amd64.tar.gz /tmp/\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("400")]),s._v(" /tmp/matchbox-v0.8.0-linux-amd64.tar.gz\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Execute the following to setup iPXE")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ansible-playbook -i hosts master.yml --ask-vault-pass\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Copy the ignitions files from the installer machine to /var/lib/matchbox/igniton/ folders and provide all permissions to the ignition files")]),s._v(" "),e("p",[s._v("Only this command to be executed on the installer machine")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" /path/to/ignitions/files openshift_admin@"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("installer_server_fqdn_or_ip_address"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":/home/openshift_admin\n")])])]),e("p",[s._v("On the iPXE server")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /home/openshift_admin/*.ign /var/lib/matchbox/ignition\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("777")]),s._v(" /var/lib/matchbox/ignition/*.ign\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Ensure the services xinetd, matchbox, tftp, dnsmasq are in active/running state in the iPXE server before initiating the installation of the CoreOS.")])])]),s._v(" "),e("li",[e("p",[s._v("Boot the cluster nodes to complete the installation of Red Hat CoreOS.")]),s._v(" "),e("p",[s._v("For further details on setting up the iPXE server, refer to the OS deployment -> iPXE server section of the deployment guide found at https://hewlettpackard.github.io/hpe-solutions-openshift/46-dl/Solution-Deployment/Preparing-the-execution-environment.html#Operating-system-deployment")])])]),s._v(" "),e("h3",{attrs:{id:"note-registry-testing-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#note-registry-testing-2"}},[s._v("#")]),s._v(" NOTE - Registry Testing")]),s._v(" "),e("p",[s._v("This is a very important point, make sure you are able to access your registry from the bootstrap server.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -u myuser:mypassword -k https://"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("registry_fqdn_or_ip_address"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":5000/v2/_catalog\n")])])]),e("h2",{attrs:{id:"red-hat-openshift-container-platform-cluster-installation-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#red-hat-openshift-container-platform-cluster-installation-2"}},[s._v("#")]),s._v(" Red Hat OpenShift Container Platform Cluster Installation")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Login to the installer machine and start the bootstrap installation\nwith the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /path/to/ignition/files\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" openshift-install --dir"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("./ wait-for bootstrap-complete --log-level\ndebug\n")])])]),e("p",[s._v("Output is similar to as follows:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v(" INFO Waiting up to 30m0s "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the Kubernetes API at\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("https://api.ocp4.example.com:644"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\n INFO API v1.13.4+b626c2fe1 up\n\n INFO Waiting up to 30m0s "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the bootstrap-complete event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),e("p",[s._v("You can monitor the progress of the installation in the bootstrap server. This also helps in tracking the errors, they are self explainatory and helps understand what is happening.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" core@bootstrap "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"journalctl -xe"')]),s._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("After bootstrap process is complete, you can safely remove the bootstrap machine from the load balancer.")])])]),s._v(" "),e("li",[e("p",[s._v("Logging into the cluster")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KUBECONFIG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/path/to/kubeconfig/file\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("whoami")]),s._v("\n\nsystem:admin\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Confirm that the cluster recognizes the machines:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc get nodes\n")])])])])]),s._v(" "),e("p",[e("img",{attrs:{src:t(362),alt:""}})]),s._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[e("p",[s._v("Approve the pending CSRs for your machines")]),s._v(" "),e("p",[s._v("When you add machines to a cluster, two pending certificate signing request (CSRs) are generated for each machine that added. Verify them if the following command")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc get csr\n")])])]),e("p",[s._v("Output looks similar to as follows")]),s._v(" "),e("p",[e("img",{attrs:{src:t(363),alt:""}})]),s._v(" "),e("p",[s._v("If they are not approved, approve them manually using the following command.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc adm certificate approve "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("csr_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Initial Operator configuration")]),s._v(" "),e("p",[s._v("In this phase you have to wait up to 15 min to all operators to go to Available True state. Verify the same using the following command.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),s._v(" -n5 oc get clusteroperators\n")])])]),e("p",[e("img",{attrs:{src:t(364),alt:""}})])]),s._v(" "),e("li",[e("p",[s._v("Completing installation on user-provisioned infrastructure")]),s._v(" "),e("p",[s._v("Once Operator configuration is complete, finish installing the cluster on infrastructure using the following command and confirm that all cluster components are online")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" openshift-install --dir"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("./ wait-for install-complete "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" install-complete\n")])])]),e("p",[s._v("This will give you an output of you console login with the admin user and credentials to login similar to as follows")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("openshift_admin@installer ignitions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ openshift-install --dir"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("./ wait-for install-complete "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" install-complete\n\nINFO Waiting up to 30m0s "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the cluster at "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("https://api.eoffline.twentynet.local:644"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v(">")]),s._v(" to initialize"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\nINFO Waiting up to 10m0s "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the openshift-console route to be created"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\nINFO Install complete"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\nINFO To access the cluster as the system:admin user when using "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'oc'")]),s._v(", run "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export KUBECONFIG=/home/openshift_admin/ignitions/auth/kubeconfig'")]),s._v("\n\nINFO Access the OpenShift web-console here: "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("https://console-openshift-console.apps.eoffline.twentynet.local"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\nINFO Login to the console with user: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubeadmin"')]),s._v(", and password: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxxxxxxxxxxxxxxx"')]),s._v("\n\nINFO Time elapsed: 0s\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Ensure the cluster nodes are in the ready state using the following command.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc get nodes\n")])])]),e("p",[e("img",{attrs:{src:t(365),alt:""}})])]),s._v(" "),e("li",[e("p",[s._v("At this point, Red Hat OpenShift Container Platform cluster is successfully installed in the restricted network environment and is available for usage.")])])]),s._v(" "),e("h3",{attrs:{id:"snapshots-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#snapshots-2"}},[s._v("#")]),s._v(" Snapshots")]),s._v(" "),e("p",[s._v("Once the cluster is installed, operators are not yet available since there is no connectivity to the internet and the operator related images are not yet downloaded to the registry server")]),s._v(" "),e("p",[e("img",{attrs:{src:t(366),alt:""}})]),s._v(" "),e("p",[e("strong",[s._v("Figure 21.")]),s._v(" RedHAt OpenShift Container Platform")]),s._v(" "),e("h3",{attrs:{id:"setup-centos-servers-to-use-internal-yum-server-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setup-centos-servers-to-use-internal-yum-server-2"}},[s._v("#")]),s._v(" Setup centos servers to use internal yum server")]),s._v(" "),e("ol",[e("li",[e("p",[s._v('Login to the host as a user with "remove" permission and remove all the repo files present within the directory /etc/yum.repos.d/.')])]),s._v(" "),e("li",[e("p",[s._v("Login to the server as a non-root user.")])]),s._v(" "),e("li",[e("p",[s._v("Create a new file named local-repo.repo with the following contents. Update the "),e("em",[e("strong",[s._v("yum_server_ip_address_or_fqdn")])]),s._v(" field with the IP address/FQDN of the yum server in your environment")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/yum.repos.d/local-repo.repo\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("local-base"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("CentOS Base\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("baseurl")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://yum_server_ip_address_or_fqdn/base/\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gpgcheck")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("enabled")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("local-centosplus"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("CentOS CentOSPlus\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("baseurl")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://yum_server_ip_address_or_fqdn/centosplus/\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gpgcheck")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("enabled")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n  \n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("local-extras"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("CentOS Extras\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("baseurl")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://yum_server_ip_address_or_fqdn/extras/\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gpgcheck")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("enabled")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("local-updates"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("CentOS Updates\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("baseurl")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://yum_server_ip_address_or_fqdn/updates/\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gpgcheck")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("enabled")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Now the server is ready to use the internal yum server for any offline package/module installations.")])])]),s._v(" "),e("h2",{attrs:{id:"using-operator-lifecycle-manager-on-restricted-networks-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-operator-lifecycle-manager-on-restricted-networks-2"}},[s._v("#")]),s._v(" Using Operator Lifecycle Manager on Restricted Networks")]),s._v(" "),e("p",[s._v("For OpenShift Container Platform clusters that are installed on restricted networks, also known as disconnected clusters, Operator Lifecycle Manager (OLM) by default cannot access the Red Hat-provided\nOperatorHub sources hosted remotely on Quay.io because those remote sources require full Internet connectivity.")]),s._v(" "),e("p",[s._v("However, as a cluster administrator you can still enable your cluster to use OLM in a restricted network if you have a workstation/download server that has full Internet access. This workstation is used to prepare local mirrors of the remote OperatorHub sources by pulling the required remote content. (Similar to the download server as mentioned in the above steps)")]),s._v(" "),e("p",[s._v("An Operator catalog is a repository of metadata that Operator Lifecycle Manager (OLM) can query to discover and install Operators and their dependencies on a cluster. OLM always installs Operators from the latest version of a catalog. As of OpenShift Container Platform 4.9, Red\nHat-provided catalogs are distributed using index images. An index image, based on the Operator Bundle Format, is a containerized snapshot of a catalog.")]),s._v(" "),e("p",[s._v("There are four Red Hat-provided Operator catalogs:")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[s._v("Catalog")])]),s._v(" "),e("th",[e("strong",[s._v("Index image")])]),s._v(" "),e("th",[e("strong",[s._v("Description")])])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("redhat-operators")]),s._v(" "),e("td",[s._v("registry.redhat.io/redhat/redhat-operator-index:v4.9")]),s._v(" "),e("td",[s._v("Red Hat products packaged and shipped by Red Hat. Supported by Red Hat.")])]),s._v(" "),e("tr",[e("td",[s._v("certified-operators")]),s._v(" "),e("td",[s._v("registry.redhat.io/redhat/certified-operator-index:v4.9")]),s._v(" "),e("td",[s._v("Products from leading independent software vendors (ISVs). Red Hat partners with ISVs to package and ship. Supported by the ISV.")])]),s._v(" "),e("tr",[e("td",[s._v("redhat-marketplace")]),s._v(" "),e("td",[s._v("registry.redhat.io/redhat/redhat-marketplace-index:v4.9")]),s._v(" "),e("td",[s._v("Certified software that can be purchased from Red Hat Marketplace.")])]),s._v(" "),e("tr",[e("td",[s._v("community-operators")]),s._v(" "),e("td",[s._v("registry.redhat.io/redhat/community-operator-index:latest")]),s._v(" "),e("td",[s._v("Software maintained by relevant representatives in the operator-framework/community-operators GitHub repository. No official support.")])])])]),s._v(" "),e("p",[s._v("The high-level flow of the procedure is shown below:")]),s._v(" "),e("p",[e("img",{attrs:{src:t(367),alt:""}})]),s._v(" "),e("p",[e("strong",[s._v("Figure 22.")]),s._v(" Solution Flow of Operator Lifecycle Manager on a Restricted Network.")]),s._v(" "),e("p",[s._v("The following is the process that is required to enable OLM in restricted networks:")]),s._v(" "),e("p",[s._v("On the "),e("strong",[s._v("Download Server")]),s._v(" (workstation with Internet Access)")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Login to registry.redhat.io to pull the required catalog image")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" podman login registry.redhat.io\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create directory required for the operators")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Copy the pull secret from the RedHat site into a file in the newly created directory and validate the same")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pull-secret.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\n\n<Copied-pull-secret>\n\nEOF")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pull-secret.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Pull the required catalog image")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" podman pull registry.redhat.io/redhat/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("-index:v4.9\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Save the catalog image into a tar file for use in the mirror registry")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" podman save "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("image-tag"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -o "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("-catalog.tar\n")])])])]),s._v(" "),e("li",[e("p",[s._v("The "),e("em",[s._v("oc adm catalog mirror")]),s._v(" command extracts the contents of an index image to generate the manifests required for mirroring. The following command creates a folder in your current directory.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc adm catalog registry.redhat.io/redhat/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("-index:v4.9 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("mirror_registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --manifests-only --registry-config"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators/pull-secret.json\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v('The "'),e("em",[s._v("--manifests-only")]),s._v('" flag is to only generate the manifests required for mirroring, but not actually mirror the image content to the registry yet. This can be useful for reviewing what will be mirrored, and it allows you to make any changes to the mapping list if you only\nrequire a subset of packages.')])])]),s._v(" "),e("li",[e("p",[s._v("Navigate to the newly created folder to view the mapping.txt file and the imageContentSourcePolicy.yaml files")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("-index-manifests\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -lrth\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Identify the required entries for your operator from the mapping.txt file. Remove the unwanted entries.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" mapping.txt\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("The entries in the mapping.txt file are in the following format.")]),s._v(" "),e("p",[s._v("{source_registry}/{image_url}@{sha256:digest}={mirror_registry}/{image_url}:{tag}")])])]),s._v(" "),e("li",[e("p",[s._v("Install the skopeo tool to perform the copy of the images")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" skopeo -y\n")])])])]),s._v(" "),e("li",[e("p",[s._v("For each entry in the mapping.txt file copy the images to the local directory into a custom folder name.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" skopeo copy --authfile "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators/pull-secret.json --all docker://"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source_registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("image_url"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("@"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("sha256:digest"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" dir:./"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" skopeo copy --authfile "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators/pull-secret.json --all docker://"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source_registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("image_url"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("@"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("sha256:digest"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" dir:./"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v("\n")])])]),e("p",[s._v("....")]),s._v(" "),e("p",[s._v("Do this for all the entries in the mapping.txt file")])]),s._v(" "),e("li",[e("p",[s._v("Tar the contents of the operator folder (catalog-image-catalog.tar, custom_folder_name_1,\ncustom_folder_name_2...) to move to the mirror registry")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zvcf mirror-operator.tar.gz "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("-catalog.tar, "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Tar the contents of the catalog-image-index-manifests folder to move to the installer machine.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("-index-manifests\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zvcf installer-operator.tar.gz\n")])])])])]),s._v(" "),e("h3",{attrs:{id:"on-the-mirror-server-restricted-network-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#on-the-mirror-server-restricted-network-2"}},[s._v("#")]),s._v(" On the "),e("strong",[s._v("Mirror Server")]),s._v(" (Restricted Network)")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Untar the mirror-operator.tar.gz file")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf /path/to/mirror-operator.tar.gz -C "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators/\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Login to your mirror registry to push new images")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" podman login "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("mirror_registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Load the required catalog image and validate the same")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" podman load -i "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("-catalog.tar\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" podman images\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Push the catalog image to the mirror registry")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" podman push "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog_image_tag"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("mirror_registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("catalog_image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("-index:v4.9\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Install the skopeo tool to perform a copy of the images")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" skopeo -y\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Transfer the images from your director into the mirror registry")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" skopeo copy --authfile "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/secrets/pull-secret-registry.json --a\ndir:./ "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" docker://"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("mirror registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("imageurl"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("tag"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" skopeo copy --authfile "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/downloads/secrets/pull-secret-registry.json --a\ndir:./ "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" docker://"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("mirror registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("imageurl"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("tag"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])])])]),s._v(" "),e("p",[s._v("Do this for all the directory folders you have by referring the mapping.txt for the corresponding tags.")]),s._v(" "),e("h3",{attrs:{id:"for-the-installer-server-restricted-network-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-the-installer-server-restricted-network-2"}},[s._v("#")]),s._v(" For the "),e("strong",[s._v("Installer Server")]),s._v(" (Restricted Network)")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Disable the sources for the default catalogs by adding disableAllDefaultSources: true to the OperatorHub spec:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc patch OperatorHub cluster --type json "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\n -p "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'[{"op": "add", "path": "/spec/disableAllDefaultSources", "value": true}]\'')]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Untar the installer-operator.tar.gz file")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf /path/to/mirror-operator.tar.gz -C "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators/\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Create the CatalogSource.yaml file")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REGISTRY_BASE}")]),s._v("/operators\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" CatalogSource.yaml\n")])])]),e("p",[s._v("Paste the following content: (Refer to instruction 16 for the catalog image)")]),s._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" operators.coreos.com/v1alpha1\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" CatalogSource\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" my"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("operator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("catalog\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" openshift"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("marketplace\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("sourceType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" grpc\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n<registry_mirror"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("<port"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("/<namespace"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("/<catalog_image"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("v4.9\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("displayName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" My Operator Catalog\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("publisher")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <custom_publisher_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Verify the following resources are created successfully")]),s._v(" "),e("p",[e("strong",[s._v("Check the pods:")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc get pods -n openshift-marketplace\n")])])]),e("p",[s._v("Example Output:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("NAME READY STATUS RESTARTS AGE\n\nmy-operator-catalog-6njx6 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1 Running "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 28s\n\nmarketplace-operator-d9f549946-96sgr "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1 Running "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 26h\n")])])]),e("p",[e("strong",[s._v("Check the CatalogSource")]),s._v(":")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc get catalogsource -n openshift-marketplace\n")])])]),e("p",[s._v("Example Output:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("NAME "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("DISPLAY")]),s._v(" TYPE PUBLISHER AGE\n\nmy-operator-catalog My Operator Catalog grpc 5s\n")])])]),e("p",[e("strong",[s._v("Check the PackageManifest:")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc get packagemanifest -n openshift-marketplace\n")])])]),e("p",[s._v("Example Output:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("NAME CATALOG AGE\n\njaeger-product My Operator Catalog 93s\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Apply the imageContentSourcePolicy.yaml file ( any further new\nentries for new operators can be appended to the existing yaml file)")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" oc create -f imageContentSourcePolicy.yaml\n")])])])]),s._v(" "),e("li",[e("p",[s._v("Wait for the Image Content Source Policy to apply to all the nodes\nin the cluster")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),s._v(" oc get nodes\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("The nodes will go from Ready to NotReady and Scheduling Disabled states.")]),s._v(" "),e("p",[s._v("Wait for all the nodes to get back to Ready state")]),s._v(" "),e("p",[s._v("watch oc get mcp")])]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("Wait for the UPDATED states of both the master and worker to turn to True")])])]),s._v(" "),e("li",[e("p",[s._v("Login to OpenShift Console")])]),s._v(" "),e("li",[e("p",[s._v("Install the newly pushed Operator in required namespace")])]),s._v(" "),e("li",[e("p",[s._v("Deploy instance as required")])]),s._v(" "),e("li",[e("p",[s._v("Repeat above steps for other required operators.")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);