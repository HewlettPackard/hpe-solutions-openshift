(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{428:function(t,e,s){t.exports=s.p+"assets/img/figure24.688ca465.png"},493:function(t,e,s){"use strict";s.r(e);var a=s(42),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"red-hat-openshift-container-platform-cluster-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#red-hat-openshift-container-platform-cluster-deployment"}},[t._v("#")]),t._v(" Red Hat OpenShift Container Platform Cluster deployment")]),t._v(" "),a("p",[t._v("This section describes the process to deploy Red Hat OpenShift Container Platform 4.")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("Pre-requisites")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Bootstrap node should be up.")])]),t._v(" "),a("li",[a("p",[t._v("Master nodes should be up and ready.")])])])]),t._v(" "),a("h2",{attrs:{id:"deploying-an-openshift-cluster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploying-an-openshift-cluster"}},[t._v("#")]),t._v(" Deploying an OpenShift cluster")]),t._v(" "),a("p",[t._v("This section covers the steps to deploy a Red Hat OpenShift Container Platform 4 cluster with master nodes and worker nodes running RHCOS. After the operating system is installed on the nodes, verify the installation and then perform the following steps:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Login to the installer VM as non-root user.")])]),t._v(" "),a("li",[a("p",[t._v("Execute the following command to bootstrap the nodes.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$BASE_DIR")]),t._v("/installer/library/openshift_components/openshift-install wait-for bootstrap-complete --log-level"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("debug\n")])])]),a("p",[a("strong",[t._v("RESULT")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("DEBUG OpenShift Installer v4.4\n\nDEBUG Built from commit 425e4ff0037487e32571258640b39f56d5ee5572\n\nINFO Waiting up to 30m0s "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the Kubernetes API at https://api.ocp.pxelocal.local:6443"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\nINFO API v1.14.4+76aeb0c up\n\nINFO Waiting up to 30m0s "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" bootstrapping to complete"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\nDEBUG Bootstrap status: complete\n\nINFO It is now safe to remove the bootstrap resources\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[t._v("You can shut down or remove the bootstrap node after the completion of step 1 and step 2.")])])]),t._v(" "),a("li",[a("p",[t._v("Run the following command to append the kubeconfig path to environment variables.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("KUBECONFIG")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$BASE_DIR")]),t._v("/installer/ignitions/auth/kubeconfig\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Run the following command to append the oc utility path to environment variables.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$BASE_DIR")]),t._v("/installer/library/openshift_components\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Provide the PV storage for the registry. Execute the following command to set the image registry storage to an empty directory.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oc patch configs.imageregistry.operator.openshift.io cluster --type merge --patch "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"spec":{"storage":{"emptyDir":{}}}}\'')]),t._v(" \n")])])])]),t._v(" "),a("li",[a("p",[t._v("Execute the following command to complete the RedHat OpenShift Container Platform 4 cluster installation.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$BASE_DIR")]),t._v("/installer/library/openshift_components/openshift-install wait-for install-complete --log-level"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("debug\n")])])]),a("p",[t._v("The result should appear like what appears below.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("    DEBUG OpenShift Installer v4.4\n\nDEBUG Built from commit 6ed04f65b0f6a1e11f10afe658465ba8195ac459 \n\nINFO Waiting up to 30m0s "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the cluster at https://api.rrocp.pxelocal.local:6443 to initialize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". \n\nDEBUG Still waiting "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the cluster to initialize: Working towards "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.4")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("% complete \n\nDEBUG Still waiting "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the cluster to initialize: Working towards "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.4")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("% complete, waiting on authentication, console,image-registry \n\nDEBUG Still waiting "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the cluster to initialize: Working towards "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.4")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("% complete \n\nDEBUG Still waiting "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the cluster to initialize: Working towards "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.4")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("% complete, waiting on image-registry \n\nDEBUG Still waiting "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the cluster to initialize: Cluster operator image-registry is still updating \n\nDEBUG Still waiting "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the cluster to initialize: Cluster operator image-registry is still updating \n\nDEBUG Cluster is initialized \n\nINFO Waiting up to 10m0s "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the openshift-console route to be created"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". \n\nDEBUG Route found "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" openshift-console namespace: console \n\nDEBUG Route found "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" openshift-console namespace: downloads \n\nDEBUG OpenShift console route is created \n\nINFO Install complete"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" \n\nINFO To access the cluster as the system:admin user when using "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'oc'")]),t._v(", run "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export KUBECONFIG=/opt/hpe/solutions/ocp/hpe-solutions-openshift/synergy/scalable/installer/library/ignitions/auth/kubeconfig'")]),t._v(" \n\nINFO Access the OpenShift web-console here: https://console-openshift-console.apps.ocp.pxelocal.local \n\nINFO Login to the console with user: kubeadmin, password: a6hKv-okLUA-Q9p3q-UXLc3\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[t._v("Make a note of the cluster URL and the username for future access.")]),t._v(" "),a("p",[t._v("If the password is lost or forgotten, view the fileÂ kubeadmin-password located in the installer machine at "),a("em",[t._v("$BASE_DIR/installer/library/ignitions/auth/.")])])])])]),t._v(" "),a("p",[a("strong",[t._v("Figure 18")]),t._v(" shows the OpenShift Container Platform console view upon successful deployment.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(428),alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("Figure 18.")]),t._v(" OpenShift Web Console login screen")]),t._v(" "),a("h1",{attrs:{id:"validating-openshift-container-platform-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validating-openshift-container-platform-deployment"}},[t._v("#")]),t._v(" Validating OpenShift Container Platform deployment")]),t._v(" "),a("p",[t._v("After the cluster is up and running with OpenShift Local Storage Operator, the cluster configuration is validated by deploying a MongoDB pod with persistent volume and Yahoo Cloud Service Benchmarking (YCSB). This section covers the steps to validate the OpenShift Container Platform deployment.")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("Prerequisites")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("OCP 4 cluster must be installed.")])]),t._v(" "),a("li",[a("p",[t._v("Use local storage or OCS to claim persistent volume (PV).")])]),t._v(" "),a("li",[a("p",[t._v("MongoDB instance will only support local file system storage or OCS file system.")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("Block storage is not supported.")])]),t._v(" "),a("h2",{attrs:{id:"deploying-mongodb-application"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploying-mongodb-application"}},[t._v("#")]),t._v(" Deploying MongoDB application")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Login to the installer VM as a non-root user.")])]),t._v(" "),a("li",[a("p",[t._v("Use the following command to download the Red Hat scripts specific to the MongoDB application at "),a("a",{attrs:{href:"https://github.com/red-hat-storage/SAWORF",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/red-hat-storage/SAWORF"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("https://github.com/red-hat-storage/SAWORF.git"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  \n")])])])]),t._v(" "),a("li",[a("p",[t._v("From within the red-hat-storage repository, navigate to the folder SAWORF/OCS3/MongoDB/blog2.")])]),t._v(" "),a("li",[a("p",[t._v("Update the "),a("em",[t._v("create_and_load.sh")]),t._v(" script with "),a("strong",[t._v("local storage")]),t._v(", "),a("strong",[t._v("OCS ,")]),t._v(" "),a("strong",[t._v("Nimble storage,")]),t._v(" and "),a("strong",[t._v("3PAR storage")]),t._v(" in place of "),a("strong",[t._v("glusterfs")]),t._v(" content. Example is as follows.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("mongodb_ip")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$(")]),t._v("oc get svc -n "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PROJECT_NAME}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" -v **local storage** "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" mongodb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$3")]),t._v("}'")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Create MongoDB and YCSB pods and load the sample data. Update the following command with appropriate values for the command line parameters and execute the command to create the MongoDB and YCSB pods and also to load the sample data.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ./create_and_load_mongodb "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PROJECT_NAME")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$OCP_TEMPLATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$MONGODB_MEMORY_LIMIT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PV_SIZE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$MONGODB_VERSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$YCSB_WORKLOAD")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$YCSB_DISTRIBUTION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$YCSB_RECORDCOUNT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$YCSB_OPERATIONCOUNT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$YCSB_THREADS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$LOG_DIR")]),t._v("\n")])])]),a("p",[t._v("Example command is shown as follows.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ./create_and_load_mongodb dbtest mongodb-persistent 4Gi 10Gi "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.6")]),t._v(" workloadb uniform "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" root /mnt/data/\n")])])]),a("p",[t._v("The output is as follows.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(' > Deploying template "openshift/mongodb-persistent" to project dbtest\n\nâ¯â¯â¯ MongoDB\n\n---------\n\n> MongoDB database service, with persistent storage. For more information about using this template, including OpenShift considerations, see documentation in the upstream repository: <https://github.com/sclorg/mongodb-container>.   \n\nThe following service(s) have been created in the project: mongodb.\n\nUsername: redhat\n\nPassword: redhat\n\nDatabase Name: redhatdb\n\nConnection URL: mongodb://redhat:redhat@mongodb/redhatdb\n\nFor more information about using this template, including OpenShift considerations, see documentation in the upstream repository: <https://github.com/sclorg/mongodb-container>.\n\nWith parameters:\n\nâ¯â¯â¯â¯â¯â¯â¯ * Memory Limit=4Gi\n\nâ¯â¯â¯â¯â¯â¯â¯ * Namespace=openshift\n\nâ¯â¯â¯â¯â¯â¯â¯ * Database Service Name=mongodb\n\nâ¯â¯â¯â¯â¯â¯â¯ * MongoDB Connection Username=redhat\n\nâ¯â¯â¯â¯â¯â¯â¯ * MongoDB Connection Password=redhat\n\nâ¯â¯â¯â¯â¯â¯â¯ * MongoDB Database Name=redhatdb\n\nâ¯â¯â¯â¯â¯â¯â¯ * MongoDB Admin Password=redhat\n\nâ¯â¯â¯â¯â¯â¯â¯ * Volume Capacity=10Gi\n\nâ¯â¯â¯â¯â¯â¯â¯ * Version of MongoDB Image=3.6\n\n> Creating resources ...\n\nâ¯â¯â¯ secret "mongodb" created\n\nâ¯â¯â¯ service "mongodb" created\n\nâ¯â¯â¯ error: persistentvolumeclaims "mongodb" already exists\n\nâ¯â¯â¯ deploymentconfig.apps.openshift.io "mongodb" created\n\n> Failed\n\npod/ycsb-pod created\n')])])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("    Scaling to more than one replica is not supported. You must have persistent volume available in your cluster to use this template.\n")])])])]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[a("p",[t._v("Execute the following command to run the check_db_size script.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./check_db_size "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PROJECT_NAME")]),t._v("\n")])])]),a("p",[t._v("The output is as follows.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('MongoDB shell version v3.6.12\n\nconnecting to: mongodb://172.x.x.x:27017/redhatdb?gssapiServiceName=mongodb\n\nImplicit session: session {"id" : UUID("c0a76ddc-ea0b-4fc-88fd-045d0f98b2") }\n\nMongoDB server version: 3.6.3\n\n{\n\nâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯ "db" : "redhatdb",\n\nâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯ "collections" : 1,\n\nâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯ "views" : 0,\n\nâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯ "objects" : 4000,\n\nâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯ "avgObjSize" : 1167.877,\n\nâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯ "dataSize" : 0.004350680857896805,\n\nâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯ "storageSize" : 0.00446319580078125,\n\nâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯ "numExtents" : 0,\n\nâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯ "indexes" : 1,\n\nâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯ "indexSize" : 0.0001068115234375,\n\nâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯ "fsUsedSize" : 1.0311393737792969,\n\nâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯ "fsTotalSize" : 99.951171875,\n\nâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯ "ok" : 1\n\n}\n')])])])])]),t._v(" "),a("h2",{attrs:{id:"verifying-mongodb-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#verifying-mongodb-deployment"}},[t._v("#")]),t._v(" Verifying MongoDB deployment")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Execute the following command to verify the persistent volume associated with MongoDB pods.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ oc get "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pv")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" mongodb\n")])])]),a("p",[t._v("The output is as follows.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("local-pv-e7f10f65 100Gi RWO Delete Bound dbtest/mongodb local-sc 26h\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Execute the following command to verify the persistent volume claim (PVC) associated with MongoDB pods.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ oc get pvc \n")])])]),a("p",[t._v("The output is as follows.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("local-pv-e7f10f65 100Gi RWO Delete Bound dbtest/mongodb local-sc 26h\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Execute the following command to ensure MongoDB and YCSB pods are up and running.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ oc get pod\n")])])]),a("p",[t._v("The output is as follows.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("NAMEâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯ READYâ¯â¯ STATUSâ¯â¯â¯â¯â¯ RESTARTSâ¯â¯ AGE\n\nmongodb-1-deployâ¯â¯ 0/1â¯â¯â¯â¯ Completedâ¯â¯ 0â¯â¯â¯â¯â¯â¯â¯â¯â¯ 3m40s\n\nmongodb-1-skbwqâ¯â¯â¯ 1/1â¯â¯â¯â¯ Runningâ¯â¯â¯â¯ 0â¯â¯â¯â¯â¯â¯â¯â¯â¯ 3m36s\n\nycsb-podâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯ 1/1â¯â¯â¯â¯ Runningâ¯â¯â¯â¯ 0â¯â¯â¯â¯â¯â¯â¯â¯â¯ 3m41s\n")])])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("For more information about deploying MongoDB application along with YCSB, refer to the Red Hat documentation at "),a("a",{attrs:{href:"https://www.redhat.com/en/blog/multitenant-deployment-mongodb-using-openshift-container-storage-and-using-ycsb-test-performance",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.redhat.com/en/blog/multitenant-deployment-mongodb-using-openshift-container-storage-and-using-ycsb-test-performance"),a("OutboundLink")],1),t._v(".")])])])}),[],!1,null,null,null);e.default=n.exports}}]);