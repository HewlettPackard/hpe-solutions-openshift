(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{498:function(e,a,t){"use strict";t.r(a);var n=t(42),s=Object(n.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"load-balancer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#load-balancer"}},[e._v("#")]),e._v(" Load Balancer")]),e._v(" "),t("p",[e._v("Red Hat OpenShift Container Platform 4.4 uses an external load balancer to communicate from outside the cluster with services running inside the cluster. This section assumes that there is a load balancer available within the deployment environment and is available for use. This solution was developed using "),t("strong",[e._v("HA Proxy")]),e._v(", an open source solution with one (1) virtual machine for load balancing functionality.")]),e._v(" "),t("p",[e._v("This section covers its configuration. In a production environment, Hewlett Packard Enterprise recommends the use of enterprise load balancing such as F5 Networks Big-IP and its associated products.")]),e._v(" "),t("h2",{attrs:{id:"install-and-configure-haproxy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-and-configure-haproxy"}},[e._v("#")]),e._v(" Install and Configure HAProxy")]),e._v(" "),t("p",[e._v("This section covers configuring HAProxy using ansible playbook.")]),e._v(" "),t("h3",{attrs:{id:"procedure"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#procedure"}},[e._v("#")]),e._v(" Procedure")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("Copy the ssh keys from installer machine to HAProxy machine by running following command")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" ssh-copy-id root@haproxy_machine_ip\n")])])])]),e._v(" "),t("li",[t("p",[e._v("Navigate to "),t("code",[e._v("$BASE_DIR/haproxy")])])]),e._v(" "),t("li",[t("p",[e._v("Update hosts file with bootstrap, master and worker details.")])])]),e._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[e._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#change your fqdn names as per your environment")]),e._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("lb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n   lb01 ansible_host=20.x.x.x ansible_user=<installermachine_username"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v("\n   \n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("boot"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n   ocpboot ansible_host=<fqdn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#ex:- ocpboot.tennet.com")]),e._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("master"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n   ocpmaster1 ansible_host=<fqdn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v("\n   ocpmaster2 ansible_host=<fqdn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v("\n   ocpmaster3 ansible_host=<fqdn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v("\n   \n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#ex:- ocpmaster.tennet.com")]),e._v("\n   \n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("worker"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n   ocpworker1 ansible_host=<fqdn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v("\n   ocpworker2 ansible_host=<fqdn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v("\n   ocpworker3 ansible_host=<fqdn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v("\n  \n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#ex:- ocpworker.tennet.com")]),e._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("cluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("children"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n   lb\n   boot\n   master\n   worker\n")])])]),t("ol",{attrs:{start:"4"}},[t("li",[e._v("Execute the ansible playbook to configure HAProxy")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("> ansible-playbook -i hosts haproxy.yaml\n")])])]),t("ol",{attrs:{start:"5"}},[t("li",[t("p",[e._v("The following entries are made in the haproxy.cfg file.")]),e._v(" "),t("p",[e._v("Sample haproxy.cfg file")])])]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#---------------------------------------------------------------------")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# static backend for serving up images, stylesheets and such")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#---------------------------------------------------------------------")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#backend static")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# balance roundrobin")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# server static 127.0.0.1:4331 check")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#---------------------------------------------------------------------")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# round robin balancing between the various backends")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#---------------------------------------------------------------------")]),e._v("\n    frontend ocp4-kubernetes-api-server\n        "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("bind")]),e._v(" *:6443\n        default_backend ocp4-kubernetes-api-server\n        mode tcp\n        option tcplog\n\n    backend ocp4-kubernetes-api-server\n        mode tcp\n        balance "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("source")]),e._v("\n        server bootstrap bootstrap.ocp.pxelocal.local:6443 check\n        server master01 master01.ocp.pxelocal.local:6443 check\n        server master02 master02.ocp.pxelocal.local:6443 check\n        server master03 master03.ocp.pxelocal.local:6443 check\n    frontend ocp4-machine-config-server68\n        "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("bind")]),e._v(" *:22623\n        default_backend ocp4-machine-config-server\n        mode tcp\n        option tcplog\n\n    backend ocp4-machine-config-server\n        balance "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("source")]),e._v("\n        mode tcp\n        server bootstrap bootstrap.ocp.pxelocal.local:22623 check\n        server master01 master01.ocp.pxelocal.local:22623 check\n        server master02 master02.ocp.pxelocal.local:22623 check\n        server master03 master03.ocp.pxelocal.local:22623 check\n    frontend ocp4-router-http\n        "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("bind")]),e._v(" *:80\n        default_backend ocp4-router-http\n        mode tcp\n        option tcplog\n\n    backend ocp4-router-http\n        balance "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("source")]),e._v("\n        mode tcp\n        server worker03 worker03.ocp.pxelocal.local:80 check\n        server worker04 worker04.ocp.pxelocal.local:80 check\n        server worker01 worker01.ocp.pxelocal.local:80 check\n        server worker02 worker02.ocp.pxelocal.local:80 check\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# if creating a cluster with only master nodes to begin with and later adding the worker nodes, master nodes should be added in this section instead of worker nodes. Once all the worker nodes are added into the cluster, this configuration needs to be updated with the worker nodes.")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# server master01 master01.ocp.pxelocal.local:80 check")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# server master02 master02.ocp.pxelocal.local:80 check")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# server master03 master03.ocp.pxelocal.local:80 check")]),e._v("\n    frontend ocp4-router-https\n        "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("bind")]),e._v(" *:443\n        default_backend ocp4-router-https\n        mode tcp\n        option tcplog\n\n        backend ocp4-router-https\n            balance "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("source")]),e._v("\n            mode tcp\n            server worker03 worker03.ocp.pxelocal.local:443 check\n            server worker04 worker04.ocp.pxelocal.local:443 check\n            server worker01 worker01.ocp.pxelocal.local:443 check\n            server worker01 worker02.ocp.pxelocal.local:443 check\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# if creating a cluster with only master nodes to begin with and later adding the worker nodes, master nodes should be added in this section instead of worker nodes. Once all the worker nodes are added into the cluster, this configuration needs to be updated with the worker nodes.")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# server master01 master01.ocp.pxelocal.local:443 check")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# server master02 master02.ocp.pxelocal.local:443 check")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# server master03 master03.ocp.pxelocal.local:443 check")]),e._v("\n    ```\n\n::: tip NOTE\n\nThe load balancer configuration should contain values that are aligned to the installation environment.\n\n:::")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);