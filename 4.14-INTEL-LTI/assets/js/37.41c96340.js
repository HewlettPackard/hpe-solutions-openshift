(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{344:function(t,e,s){"use strict";s.r(e);var a=s(14),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"preparing-the-execution-environment-for-rhocp-worker3-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#preparing-the-execution-environment-for-rhocp-worker3-node"}},[t._v("#")]),t._v(" Preparing the execution environment for RHOCP worker3 node")]),t._v(" "),e("p",[e("strong",[t._v("Prerequisites:")])]),t._v(" "),e("ul",[e("li",[t._v("RedHat Enterprise Linux 8.8 must be "),e("a",{attrs:{href:"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/performing_a_standard_rhel_8_installation/index",target:"_blank",rel:"noopener noreferrer"}},[t._v("installed and registered"),e("OutboundLink")],1),t._v(" on your host machine")]),t._v(" "),e("li",[t._v("Configure "),e("strong",[t._v("BOND > VLAN > Bridge")])])]),t._v(" "),e("p",[e("strong",[t._v("Setting up RHEL 8.8 installer machine")])]),t._v(" "),e("p",[t._v("This section assumes the following considerations for our deployment environment:")]),t._v(" "),e("ul",[e("li",[t._v("A server running Red Hat Enterprise Linux (RHEL) 8.8 exists within the deployment environment and is accessible to the installation user to be used as an installer machine. This server must have internet connectivity.")]),t._v(" "),e("li",[t._v("A virtual machine is used to act as an installer machine and the same host is utilized as an Ansible Engine host. We are using one of the worker3 machines as an installer machine to execute Ansible Playbook.")])]),t._v(" "),e("p",[e("strong",[t._v("Prerequisites to execute ansible playbook:")])]),t._v(" "),e("p",[t._v("RHEL 8.8 installer machine must have the following configurations:")]),t._v(" "),e("ol",[e("li",[t._v('The installer machine must have at least 500 GB disk space (especially in the "/" partition), 4 CPU cores and 16 GB RAM.')]),t._v(" "),e("li",[t._v("RHEL 8.8 installer machine must be subscribed with valid Red Hat credentials. To register the installer machine for the Red Hat subscription, run the following command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" subscription-manager register "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--username")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("username"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--password")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("password"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --auto-attach \n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("Sync time with NTP server.")]),t._v(" "),e("li",[t._v("SSH key pair must be available on the installer machine. If the SSH key is not available, generate a new SSH key pair with the following command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ssh-keygen \n")])])]),e("p",[e("strong",[t._v("To set up the installer machine:")])]),t._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[t._v("Create and activate a Python3 virtual environment for deploying this solution with the following commands:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ python3 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" venv "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("virtual_environment_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("virtual_environment_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/bin/activate \n")])])]),e("ol",{attrs:{start:"6"}},[e("li",[t._v("Download the OpenShift repositories using the following commands in the Ansible Engine:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /opt \n\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /opt \n\n$ yum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" \n\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("https://github.com/HewlettPackard/hpe-solutions-openshift.git"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])])]),e("ol",{attrs:{start:"7"}},[e("li",[t._v("Setup the installer machine to configure the nginx, development tools, and other python packages required for LTI installation. Navigate to the $BASE_DIR directory and run the following command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$BASE_DIR")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" setup.sh \n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),e("p",[t._v("$BASE_DIR refers to "),e("strong",[t._v("/opt/hpe-solutions-openshift/DL-LTI-Openshift/")])])]),t._v(" "),e("ol",{attrs:{start:"8"}},[e("li",[e("p",[t._v("As part of setup.sh script it will create nginx service, so user must download and copy Rhel 8.8 DVD ISO to "),e("strong",[t._v("/usr/share/nginx/html/")])])]),t._v(" "),e("li",[e("p",[t._v("Minimum Storage requirement for management servers")])])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[t._v("Management Servers")])]),t._v(" "),e("th",[e("strong",[t._v("Host OS disk")])]),t._v(" "),e("th",[e("strong",[t._v("Storage Pool disk")])])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Server 1")]),t._v(" "),e("td",[t._v("2 x 1.6 TB")]),t._v(" "),e("td",[t._v("2 x 1.6 TB")])]),t._v(" "),e("tr",[e("td",[t._v("Server 2")]),t._v(" "),e("td",[t._v("2 x 1.6 TB")]),t._v(" "),e("td",[t._v("2 x 1.6 TB")])]),t._v(" "),e("tr",[e("td",[t._v("Server 3")]),t._v(" "),e("td",[t._v("2 x 1.6 TB")]),t._v(" "),e("td",[t._v("2 x 1.6 TB")])])])]),t._v(" "),e("p",[t._v("Host OS disk – raid1 for redundancy")]),t._v(" "),e("ol",{attrs:{start:"10"}},[e("li",[e("strong",[t._v("Creating and deleting logical drives")])])]),t._v(" "),e("p",[t._v("Create and delete logical drives on the head nodes following below steps.")]),t._v(" "),e("p",[e("strong",[t._v("Input File Update:-")])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("User has to update the input.yaml file in $BASE_DIR/create_delete_logicaldrives directory to execute the logical drive script.")])]),t._v(" "),e("li",[e("p",[t._v("User needs to update all the details in the input.yaml file which include:-")])])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("\n\t\tILOServers:\n\n\t\t\t- ILOIP: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t\tILOuser: admin\n\n\t\t\t\tILOPassword: Password\n\n\t\t\t\tcontroller: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("  \n\n\t\t\t\tRAID: Raid1\n\n\t\t\t\tPhysicalDrives: 1I:1:1,1I:1:2  \n\n\t\t\t- ILOIP: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t\tILOuser: admin\n\n\t\t\t\tILOPassword: Password\n\n\t\t\t\tcontroller: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n\t\t\t\tRAID: Raid1\n\n\t\t\t\tPhysicalDrives: 1I:3:1,1I:3:2\n\n\t\t\t- ILOIP: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n\n\t\t\t\tILOuser: admin\n\n\t\t\t\tILOPassword: Password\n\n\t\t\t\tcontroller: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v("\n\n\t\t\t\tRAID: Raid1\n\n\t\t\t\tPhysicalDrives: 1I:3:1,1I:3:2   \n")])])]),e("p",[e("strong",[t._v("Note:-")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(". To "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" controller "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" login to the respective ILO -"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" System Information -"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Storage tab where inside Location "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" the **slot number** as the controller id. \n\n\t\t\t "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example - Slot = 12 ")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(". To "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" the PhysicalDrives login to the respective ILO -"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" System Information -"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Storage tab inside Unconfigured Drives where under Location you can deduce PhysicalDrives based on these information:\n\n\t\t "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Slot: 12:Port=1I:Box=1:Bay=1")]),t._v("\n\n\t\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example - 1I:1:1 ('Port:Box:Bay')")]),t._v("\n\n\t\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Slot: 12:Port=1I:Box=1:Bay=2")]),t._v("\n\n\t\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example - 1I:1:2 ('Port:Box:Bay') ")]),t._v("\n")])])]),e("p",[e("strong",[t._v("Playbook Execution:-")])]),t._v(" "),e("p",[t._v("To delete all the existing logical drives in the server in case if any and to create new logical drives named 'RHEL Boot Volume' in respective ILO servers run the site.yml playbook inside create_delete_logicaldrives directory with the below mentioned command")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("\t$ ansible-playbook site.yml --ask-vault-pass\n")])])]),e("p",[t._v("We can provide the input variables in any one of the below methods")]),t._v(" "),e("p",[t._v("Method 1. "),e("strong",[t._v("Input.py : Automation way of taking input")])]),t._v(" "),e("p",[t._v("Through the input.py, go to the directory /opt/hpe-solutions-openshift/DL-LTI-Openshift/ and run the below command.")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("   python input.py\n")])])]),e("p",[t._v("Here it will prompt for values which are not obtained from SCID json files.")]),t._v(" "),e("p",[t._v("A sample input collection through input.py is as follows.")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("\tEnter server serial number "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the first "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("head")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" server "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Example: 2M2210020X "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t2M205107TH\n\tEnter ILO address "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the first "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("head")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" server "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Example: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.28")]),t._v(".201.5 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".201.13\n\tEnter ILO username "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the first "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("head")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" server "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Example: admin "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tadmin\n\tEnter ILO password "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the first "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("head")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" server "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Example: Password "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tPassword\n\tEnter Host FQDN "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the first "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("head")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" server "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Example: kvm1.xyz.local "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\theadnode1.isv.local\n\tetc "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".'\n")])])]),e("p",[t._v("After execution of input.py, it will generate input.yaml and hosts file in the same location.")]),t._v(" "),e("p",[t._v("Method 2. "),e("strong",[t._v("Input.yaml: Manually editing input file")])]),t._v(" "),e("p",[t._v("Go to the directory $BASE_DIR("),e("strong",[t._v("/opt/hpe-solutions-openshift/DL-LTI-Openshift/")]),t._v("), here we will have input.yaml and hosts files.")]),t._v(" "),e("ol",[e("li",[t._v("A preconfigured Ansible vault file (input.yaml) is provided as a part of this solution, which consists of sensitive information to support the host and virtual machine deployment.")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("cd $BASE_DIR\n")])])]),e("p",[t._v("Run the following commands on the installer VM to edit the vault to match the installation environment.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("ansible-vault edit input.yaml\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("The default password for the Ansible vault file is "),e("strong",[t._v("changeme")])]),t._v(" "),e("p",[t._v("Sample input_sample.yml can be found in the $BASE_DIR along with description of each input variable.")])]),t._v(" "),e("p",[t._v("A sample input.yaml file is as follows with a few filled parameters.")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v(" - Server_serial_number: 2M20510XXX\n   ILO_Address: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n   ILO_Username: admin\n   ILO_Password: *****\n   Hostname: headnode3.XX.XX                "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ex. headnode3.isv.local")]),t._v("\n   Host_Username: root\n   Host_Password: ******\n   HWADDR1: XX:XX:XX:XX:XX:XX             "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#mac address for server physical interface1 ")]),t._v("\n   HWADDR2: XX:XX:XX:XX:XX:XX             "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#mac address for server physical interface2")]),t._v("\n   Host_OS_disk: sda\n   Host_VlanID: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("230")]),t._v("\n   Host_IP: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n   Host_Netmask: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),t._v(".*.*.*\n   Host_Prefix: XX                          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ex. 8,24,32")]),t._v("\n   Host_Gateway: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n   Host_DNS: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*\n   Host_Domain: XX.XX                       "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ex. isv.local")]),t._v("\n   corporate_proxy: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.28")]),t._v(".*.*              "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#provide corporate proxy, ex. proxy.houston.hpecorp.net")]),t._v("\n   corporate_proxy_port: XX               "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#corporate proxy port no, ex. 8080")]),t._v("\n\nconfig:\n   HTTP_server_base_url: http://172.28.*.*/  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Installer IP address")]),t._v("\n   HTTP_file_path: /usr/share/nginx/html/    \n   OS_type: rhel8\n   OS_image_name: rhel-8.8-x86_64-dvd.iso    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ISO image should be present in /usr/share/nginx/html/")]),t._v("\n   base_kickstart_filepath: /opt/hpe-solutions-openshift/DL-LTI-Openshift/playbooks/roles/rhel8_os_deployment/tasks/ks_rhel8.cfg\n\n")])])]),e("p",[t._v("A sample "),e("strong",[t._v("hosts")]),t._v(" files is as follows")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("\t\t   "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[kvm_nodes]\n\t\t\t172.28.*.*\n\t\t\t172.28.*.*\n\t\t\t172.28.*.*\n\n\t\t\t[ansible_host]\n\t\t\t172.28.*.*\n\n\t\t\t[rhel8_installerVM]\n\t\t\t172.28.*.*\n\n\t\t\t[binddns_masters]\n\t\t\t172.28.*.*\n\n\t\t\t[binddns_slaves]\n\t\t\t172.28.*.*\n\t\t\t172.28.*.*\n\n\t\t\t[masters_info]\n\t\t\tmaster1 ip=172.28.*.* hostname=headnode1\n\n\t\t\t[slaves_info]\n\t\t\tslave1 ip=172.28.*.* hostname=headnode2\n\t\t\tslave2 ip=172.28.*.* hostname=headnode3'")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);