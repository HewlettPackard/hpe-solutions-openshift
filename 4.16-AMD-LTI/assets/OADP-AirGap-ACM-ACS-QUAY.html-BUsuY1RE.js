import{_ as a,c as s,a as n,o as t}from"./app-CLu7g6Jx.js";const i="/hpe-solutions-openshift/4.16-AMD-LTI/assets/figure-oadp1-beRDxZ0C.png",l="/hpe-solutions-openshift/4.16-AMD-LTI/assets/figure-oadp2-B-HOQYO1.png",r="/hpe-solutions-openshift/4.16-AMD-LTI/assets/figure77-BghECYon.png",o="/hpe-solutions-openshift/4.16-AMD-LTI/assets/figure78-CsIKSgIl.png",p="/hpe-solutions-openshift/4.16-AMD-LTI/assets/figure79-ice2bTMS.png",c="/hpe-solutions-openshift/4.16-AMD-LTI/assets/figure80-BJ70vAdv.png",d="/hpe-solutions-openshift/4.16-AMD-LTI/assets/figure81-DW1WS1mx.png",u="/hpe-solutions-openshift/4.16-AMD-LTI/assets/figure82-D5OwySIB.png",h="/hpe-solutions-openshift/4.16-AMD-LTI/assets/figure83-CBYUwXAw.png",m="/hpe-solutions-openshift/4.16-AMD-LTI/assets/figure84-D_NKlZu4.png",g="/hpe-solutions-openshift/4.16-AMD-LTI/assets/figure85-otcbgo7_.png",v="/hpe-solutions-openshift/4.16-AMD-LTI/assets/figure86-BSx_ZKzN.png",f="/hpe-solutions-openshift/4.16-AMD-LTI/assets/ACS-D4T8e9jy.png",b="/hpe-solutions-openshift/4.16-AMD-LTI/assets/ACS-1-B_doUEMv.png",y="/hpe-solutions-openshift/4.16-AMD-LTI/assets/ACS-2-D2L4nIJx.png",C="/hpe-solutions-openshift/4.16-AMD-LTI/assets/ACS-3-lzs8atn8.png",k="/hpe-solutions-openshift/4.16-AMD-LTI/assets/ACS-4-xapDNZqs.png",A="/hpe-solutions-openshift/4.16-AMD-LTI/assets/ACS-5-vok3cuQU.png",S="/hpe-solutions-openshift/4.16-AMD-LTI/assets/ACS-6-CISqzBtg.png",I="/hpe-solutions-openshift/4.16-AMD-LTI/assets/ACS-7-DqQABnSE.png",O="/hpe-solutions-openshift/4.16-AMD-LTI/assets/ACS-8-lyN1uCT6.png",w="/hpe-solutions-openshift/4.16-AMD-LTI/assets/quay1-DJaMCQQl.png",_="/hpe-solutions-openshift/4.16-AMD-LTI/assets/quay2-POgKC_JD.png",x="/hpe-solutions-openshift/4.16-AMD-LTI/assets/quay3-BT5GtdDU.png",R="/hpe-solutions-openshift/4.16-AMD-LTI/assets/quay4-DMv-NDZE.png",D="/hpe-solutions-openshift/4.16-AMD-LTI/assets/quay5-6EYRv8Hl.png",M="/hpe-solutions-openshift/4.16-AMD-LTI/assets/quay6-DJ1ODFaf.png",P="/hpe-solutions-openshift/4.16-AMD-LTI/assets/quay7-Bt3b71c5.png",H="/hpe-solutions-openshift/4.16-AMD-LTI/assets/quay8-C_wyAqWq.png",T={};function L(q,e){return t(),s("div",null,e[0]||(e[0]=[n(`<h1 id="additional-features-and-functionality" tabindex="-1"><a class="header-anchor" href="#additional-features-and-functionality"><span><strong>Additional Features and Functionality</strong></span></a></h1><h2 id="openshift-api-data-protection" tabindex="-1"><a class="header-anchor" href="#openshift-api-data-protection"><span><strong>OpenShift API Data Protection</strong></span></a></h2><h4 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h4><p>OpenShift API for Data Protection (OADP) product safeguards customer applications on OpenShift Container Platform. It offers comprehensive disaster recovery protection, covering OpenShift Container Platform applications, application-related cluster resources, persistent volumes, and internal images. OADP is also capable of backing up both containerized applications and virtual machines (VMs).</p><p>However, OADP does not serve as a disaster recovery solution for etcd or OpenShift Operators.</p><h4 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h4><ul><li><p>In the OpenShift Container Platform web console, click Operators → OperatorHub.</p></li><li><p>Use the Filter by keyword field to find the OADP Operator.</p></li><li><p>Select the OADP Operator and click Install.</p></li><li><p>Click Install to install the Operator in the openshift-adp project.</p></li><li><p>Click Operators → Installed Operators to verify the installation.</p></li></ul><h4 id="creating-secret" tabindex="-1"><a class="header-anchor" href="#creating-secret"><span>Creating secret:</span></a></h4><p>Create a Secret with the default name:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ oc create secret generic cloud-credentials <span class="token parameter variable">-n</span> openshift-adp --from-file <span class="token assign-left variable">cloud</span><span class="token operator">=</span>credentials-velero </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The Secret is referenced in the spec.backupLocations.credential block of the DataProtectionApplication CR when you install the Data Protection Application.</p><h4 id="configuring-the-data-protection-application" tabindex="-1"><a class="header-anchor" href="#configuring-the-data-protection-application"><span>Configuring the Data Protection Application</span></a></h4><p>Configure the client-burst and the client-qps fields in the DPA as shown in the following example:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">apiVersion: oadp.openshift.io/v1alpha1 </span>
<span class="line">kind: DataProtectionApplication </span>
<span class="line">metadata: </span>
<span class="line">  name: test-dpa </span>
<span class="line">  namespace: openshift-adp </span>
<span class="line">spec: </span>
<span class="line">  backupLocations: </span>
<span class="line">    - name: default </span>
<span class="line">      velero: </span>
<span class="line">        config: </span>
<span class="line">          insecureSkipTLSVerify: <span class="token string">&quot;true&quot;</span> </span>
<span class="line">          profile: <span class="token string">&quot;default&quot;</span> </span>
<span class="line">          region: <span class="token operator">&lt;</span>bucket_region<span class="token operator">&gt;</span> </span>
<span class="line">          s3ForcePathStyle: <span class="token string">&quot;true&quot;</span> </span>
<span class="line">          s3Url: <span class="token operator">&lt;</span>bucket_url<span class="token operator">&gt;</span> </span>
<span class="line">        credential: </span>
<span class="line">          key: cloud </span>
<span class="line">          name: cloud-credentials </span>
<span class="line">        default: <span class="token boolean">true</span> </span>
<span class="line">        objectStorage: </span>
<span class="line">          bucket: <span class="token operator">&lt;</span>bucket_name<span class="token operator">&gt;</span> </span>
<span class="line">          prefix: velero </span>
<span class="line">        provider: aws </span>
<span class="line">  configuration: </span>
<span class="line">    nodeAgent: </span>
<span class="line">      enable: <span class="token boolean">true</span> </span>
<span class="line">      uploaderType: restic </span>
<span class="line">    velero: </span>
<span class="line">      client-burst: <span class="token number">500</span>  </span>
<span class="line">      client-qps: <span class="token number">300</span>  </span>
<span class="line">      defaultPlugins: </span>
<span class="line">        - openshift </span>
<span class="line">        - aws </span>
<span class="line">        - kubevirt </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="setting-velero-cpu-and-memory-resource-allocations" tabindex="-1"><a class="header-anchor" href="#setting-velero-cpu-and-memory-resource-allocations"><span>Setting Velero CPU and memory resource allocations</span></a></h4><p>You can set the CPU and memory resource allocations for the Velero pod by editing the DataProtectionApplication custom resource (CR) manifest.</p><p><strong>Prerequisites</strong></p><ul><li>You must have the OpenShift API for Data Protection (OADP) Operator installed.</li></ul><p><strong>Procedure</strong></p><ul><li>Edit the values in the spec.configuration.velero.podConfig.ResourceAllocations block of the DataProtectionApplication CR manifest, as in the following example:</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">apiVersion: oadp.openshift.io/v1alpha1 </span>
<span class="line">kind: DataProtectionApplication </span>
<span class="line">metadata: </span>
<span class="line">  name: <span class="token operator">&lt;</span>dpa_sample<span class="token operator">&gt;</span> </span>
<span class="line">spec: </span>
<span class="line"><span class="token comment"># ... </span></span>
<span class="line">  configuration: </span>
<span class="line">    velero: </span>
<span class="line">      podConfig: </span>
<span class="line">        nodeSelector: <span class="token operator">&lt;</span>node_selector<span class="token operator">&gt;</span>  </span>
<span class="line">        resourceAllocations:  </span>
<span class="line">          limits: </span>
<span class="line">            cpu: <span class="token string">&quot;1&quot;</span> </span>
<span class="line">            memory: 1024Mi </span>
<span class="line">          requests: </span>
<span class="line">            cpu: 200m </span>
<span class="line">            memory: 256Mi </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Specify the node selector to be supplied to Velero podSpec.</p><p>The resourceAllocations listed are for average usage.</p><h4 id="backup-process" tabindex="-1"><a class="header-anchor" href="#backup-process"><span>Backup process:</span></a></h4><ul><li><p>Goto Installed Operators -&gt; OADP Operator -&gt; backup -&gt; create backup</p></li><li><p>Provide name and required details:</p></li></ul><p><img src="`+i+'" alt=""></p><p><img src="'+l+`" alt=""></p><p><strong>Figure 60.</strong> Creating a backup using OADP</p><ul><li>Click create</li></ul><h2 id="airgap-deployment" tabindex="-1"><a class="header-anchor" href="#airgap-deployment"><span><strong>AirGap Deployment</strong></span></a></h2><h4 id="deploy-openshift-container-platform-using-airgap-method" tabindex="-1"><a class="header-anchor" href="#deploy-openshift-container-platform-using-airgap-method"><span><strong>Deploy OpenShift Container Platform using Airgap Method</strong></span></a></h4><p>This sections of documents describes about deploying the OpenShift Container Platform through disconnected environment.</p><ol><li><p>Create YUM repo server</p></li><li><p>Create Mirror registry</p></li><li><p>OpenShift Deployment</p></li></ol><ul><li><strong>Prerequisites:</strong></li></ul><p>we will be using one server for all the below services and which will be having internet access to download the images.</p><ul><li><p>Download server</p></li><li><p>YUM server</p></li><li><p>Mirror Registry</p></li></ul><h4 id="download-yum-mirror-registry-server-requirements" tabindex="-1"><a class="header-anchor" href="#download-yum-mirror-registry-server-requirements"><span><strong>Download/YUM/Mirror registry server requirements</strong></span></a></h4><p>a) Recommended Operating system RHEL 9.4</p><p>b) At least 500 GB disk space (especially in the &quot;/&quot; partition), 4 CPU cores and 16GB RAM.</p><p>c) OS disk: 2x 1.6 TB ; Data disk: ~2 TB</p><p>d) Provide the required values in input.yaml file (vi /opt/hpe-solutions-openshift/DL-LTI-Openshift/input.yaml )</p><p>e) Setup the Download server to configure the nginx, development tools and other python packages required for LTI installation.</p><p>Navigate to the directory, cd /opt/hpe-solutions-openshift/DL-LTI-Openshift/ and run the below command.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">  &#39;sh setup.sh&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>As part of setup.sh script it will create nginx service, so user must download and copy rhel 9.4 DVD ISO to /usr/share/nginx/html/</p><ol><li>Create Yum Repo server</li></ol><p>a) Navigate to /opt/hpe-solutions-openshift/DL-LTI-Openshift/ folder and update the hosts file with the yumrepo server details.</p><p>b) Navigate to yum folder</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">cd /opt/hpe-solutions-openshift/DL-LTI-Openshift/airgap/yum</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>c) Run the below command to create yum repo server</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">ansible-playbook <span class="token parameter variable">-i</span> /opt/hpe-solutions-openshift/DL-LTI-Openshift/hosts playbooks/create_local_yum_repo.yaml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>Mirror Registry</li></ol><p>a) Navigate to folder &quot;/opt/hpe-solutions-openshift/DL-LTI-Openshift/&quot;.</p><p>For airgap deployment provide the below values in input.yaml file</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">vi</span> /opt/hpe-solutions-openshift/DL-LTI-Openshift/input.yaml</span>
<span class="line"></span>
<span class="line"><span class="token comment"># fill the below values for the airgap deployment</span></span>
<span class="line">is_environment_airgap: <span class="token string">&#39;yes&#39;</span></span>
<span class="line">mirror_registry_ip:</span>
<span class="line">mirror_registry_fqdn:</span>
<span class="line">LOCAL_REGISTRY:</span>
<span class="line">LOCAL_REPOSITORY:</span>
<span class="line">ARCHITECTURE:</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>b) Navigate to mirror_registry folder</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">cd /opt/hpe-solutions-openshift/DL-LTI-Openshift/airgap/mirror_registry</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>c) Download and install the mirror registry</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">ansible-playbook playbooks/download_mirror_registry_package.yaml</span>
<span class="line">ansible-playbook playbooks/install_mirror_registry.yaml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>generate ssl certificates</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">  ansible-playbook playbooks/generate_ssl_certs.yaml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>run the below commands to copy the above generated ssl certs</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">  <span class="token function">cp</span> certs/ssl.key quay-install/quay-config/</span>
<span class="line">  <span class="token function">cp</span> certs/ssl.cert quay-install/quay-config/</span>
<span class="line">  <span class="token function">cat</span> certs/rootCA.pem <span class="token operator">&gt;&gt;</span> quay-install/quay-config/ssl.cert</span>
<span class="line">  <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/containers/certs.d/<span class="token operator">&lt;</span>mirror_registry_fqdn<span class="token operator">&gt;</span>        <span class="token comment"># Here provide you mirror registryg fqdn</span></span>
<span class="line">  <span class="token function">cp</span> certs/rootCA.pem  /etc/containers/certs.d/<span class="token operator">&lt;</span>mirror_registry_fqdn<span class="token operator">&gt;</span>/ca.crt</span>
<span class="line">  <span class="token function">cp</span> certs/rootCA.pem /etc/pki/ca-trust/source/anchors/</span>
<span class="line">  <span class="token function">sudo</span> update-ca-trust extract</span>
<span class="line">  systemctl restart quay-app</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>d) execute the playbook site.yaml</p><p>site.yaml file contains the following playbooks</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">    - import_playbook: playbooks/download_openshift_components.yaml  # it will download ocp related images, client and installer</span>
<span class="line">    - import_playbook: playbooks/create_json_pull_secret.yaml</span>
<span class="line">    - import_playbook: playbooks/update_json_pull_secret.yaml</span>
<span class="line">    - import_playbook: playbooks/mirroring_ocp_image_repository.yaml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>For OpenShift Solution Deployment follow the existing process listed for <a href="https://github.com/HewlettPackard/hpe-solutions-openshift/blob/master/DL-LTI-Openshift/Readme.md" target="_blank" rel="noopener noreferrer">OpenShift Deployment</a></li></ol><h2 id="red-hat-advanced-cluster-management-for-kubernetes" tabindex="-1"><a class="header-anchor" href="#red-hat-advanced-cluster-management-for-kubernetes"><span>Red Hat Advanced Cluster Management for Kubernetes</span></a></h2><h4 id="introduction-1" tabindex="-1"><a class="header-anchor" href="#introduction-1"><span>Introduction</span></a></h4><p>Red Hat Advanced Cluster Management for Kubernetes provides end-to-end management visibility and control to manage your Kubernetes environment. Take control of your application modernization program with management capabilities for cluster creation, application lifecycle, and provide security and compliance for all of them across data centers and hybrid cloud environments. Clusters and applications are all visible and managed from a single console, with built-in security policies Run your operations from anywhere that Red Hat OpenShift Container Platform runs, and manage your Kubernetes clusters.</p><p>With Red Hat Advanced Cluster Management for Kubernetes:</p><ul><li><p>Work across a range of environments, including multiple data centers, private clouds and public clouds that run Kubernetes clusters.</p></li><li><p>Easily create OpenShift Container Platform Kubernetes clusters and manage cluster lifecycle in a single console.</p></li><li><p>Enforce policies at the target clusters using Kubernetes-supported custom resource definitions.</p></li><li><p>Deploy and maintain day two operations of business applications distributed across your cluster landscape.</p></li></ul><p>Figure 19 shows Architecture of Advanced Cluster Management for Kubernetes</p><p><img src="`+r+'" alt=""></p><p><strong>Figure 61.</strong> Multi-Cluster Management with Red Hat Advanced Cluster Management</p><h4 id="installing-red-hat-advanced-cluster-management-from-the-console" tabindex="-1"><a class="header-anchor" href="#installing-red-hat-advanced-cluster-management-from-the-console"><span>Installing Red Hat Advanced Cluster Management from the console</span></a></h4><div class="hint-container warning"><p class="hint-container-title">Prerequisites</p><ul><li><p>Hub Cluster</p><p>OpenShift Container Platform 4.x successfully deployed.</p><p>Operator Hub availability.</p></li><li><p>Managed Clusters</p><p>OpenShift 4.x on from public cloud providers (Amazon Web Services, Google Cloud, IBM and Microsoft Azure) or Private clouds (Openstack, OpenShift).</p></li></ul></div><h4 id="flow-diagram" tabindex="-1"><a class="header-anchor" href="#flow-diagram"><span>Flow Diagram</span></a></h4><p><img src="'+o+'" alt=""></p><p><strong>Figure 62.</strong> RedHat Advanced Cluster Management Solution Flow Diagram</p><h4 id="installation-1" tabindex="-1"><a class="header-anchor" href="#installation-1"><span>Installation</span></a></h4><p>Following steps needs to perform prior to installing Advanced Cluster Management from the OpenShift Console.</p><ul><li><p>Create Namespace</p></li><li><p>Create Pull Secrets</p></li></ul><p>Follow below steps to creating namespace.</p><ol><li><p>Create a hub cluster namespace for the operator requirements:</p><ul><li><p>In the OpenShift Container Platform console navigation, select Administration -&gt; Namespaces.</p></li><li><p>Select create Namespace.</p></li></ul></li><li><p>Provide a name for your namespace. This is the namespace that you use throughout the installation process.</p><div class="hint-container tip"><p class="hint-container-title">NOTE</p><p>The value for namespace might be referred to as Project in the OpenShift Container Platform environment.</p></div></li></ol><p>Follow below steps to create secrets.</p><ol><li><p>Switch your project namespace to the one that you created in step 1. This ensures that the steps are completed in the correct namespace. Some resources are namespace specific.</p><p>I. In the OpenShift Container Platform console navigation, select Administration -&gt; Namespaces.</p><p>II. Select the namespace that you created in step 1 from the list.</p></li><li><p>Create a pull secret that provides the entitlement to the downloads.</p><p>I. Copy your OpenShift Container Platform pull secret from cloud.redhat.com</p><p>II. In the OpenShift Container Platform console navigation, select Workloads -&gt; Secrets.</p><p>III. Select Create -&gt; Image Pull Secret.</p><p>IV. Enter a name for your secret.</p><p>V. Select Upload Configuration File as the authentication type.</p><p>VI. In the Configuration file field, paste the pull secret that you copied from cloud.redhat.com.</p><p>VII. Select Create to create the pull secret.</p></li></ol><h4 id="installing-advanced-cluster-management-operator" tabindex="-1"><a class="header-anchor" href="#installing-advanced-cluster-management-operator"><span>Installing Advanced Cluster Management Operator</span></a></h4><ol><li><p>In the OpenShift Container Platform console navigation, select Operators -&gt; OperatorHub.</p></li><li><p>Select Red Hat Advanced Cluster Management.</p></li><li><p>Select Install.</p><p><img src="'+p+'" alt=""></p><p><strong>Figure 63.</strong> RedHat Advanced Cluster Management Operator deployment</p></li><li><p>Update the values, if necessary.</p><p><img src="'+c+'" alt=""></p><p><strong>Figure 64.</strong> RedHat Advanced Cluster Management Operator</p></li><li><p>Select specific namespace on the cluster for the Installation Mode option.</p><p>I. Select open-cluster-management namespace from the drop down menu.</p></li><li><p>selected by default for the Update Channel option.</p></li><li><p>Select an Approval Strategy:</p><p>I. Automatic specifies that you want OpenShift Container Platform to upgrade Advanced Cluster Management for kubernetes Operator.</p><p>II. Manual specifies that you want to have control to upgrade Advanced Cluster Management for kubernetes Operator manually</p></li><li><p>Select Install.</p><p><img src="'+d+`" alt=""></p><p><strong>Figure 65.</strong> Deployed RedHat ACM Operator</p></li><li><p>The Installed Operators page is displayed with the status of the operator.</p></li></ol><h4 id="create-the-multiclusterhub-custom-resource" tabindex="-1"><a class="header-anchor" href="#create-the-multiclusterhub-custom-resource"><span>Create the MultiClusterHub custom resource</span></a></h4><ol><li><p>In the OpenShift Container Platform console navigation, select Installed Operators -&gt; Advanced Cluster Management for Kubernetes.</p></li><li><p>Select the MultiClusterHub tab.</p></li><li><p>Select Create MultiClusterHub.</p></li><li><p>Update the values, according to your needs.</p></li><li><p>Tip: You can edit the values in the YAML file by selecting YAML View. Some of the values are only available in the YAML view. The following example shows some sample data in the YAML view:</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> operator.open<span class="token punctuation">-</span>cluster<span class="token punctuation">-</span>management.io/v1</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> MultiClusterHub</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">namespace</span><span class="token punctuation">:</span> &lt;&lt; newly created namespace<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">name</span><span class="token punctuation">:</span> multiclusterhub</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">imagePullSecret</span><span class="token punctuation">:</span> &lt;secret<span class="token punctuation">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Add the pull secret that you created to the imagePullSecret field on the console. In t he YAML View, confirm that the namespace is your project namespace.</p></li><li><p>Select Create to initialize the custom resource. It can take up to 10 minutes for the hub to build and start.</p><p>After the hub is created, the status for the operator is Running on the Installed Operators page.</p></li></ol><h4 id="access-the-advanced-cluster-management-console-for-the-hub" tabindex="-1"><a class="header-anchor" href="#access-the-advanced-cluster-management-console-for-the-hub"><span>Access the Advanced Cluster Management console for the hub</span></a></h4><ol><li><p>In the OpenShift Container Platform console navigation, select Networking -&gt; Routes.</p><p><img src="`+u+'" alt=""></p><p><strong>Figure 66.</strong> Routes for the ACM console</p></li><li><p>Click the URL for Advanced Cluster Management console hub in the list and navigate it to access the console for Advanced Cluster Management console hub using your Hub openshift console username and password.</p><p><img src="'+h+'" alt=""></p><p><strong>Figure 67.</strong> ACM console</p></li><li><p>To create/ import an existing cluster from Advanced Cluster Management console, click on Go to Cluster.</p></li></ol><h4 id="import-an-existing-cluster-using-advanced-cluster-management-console" tabindex="-1"><a class="header-anchor" href="#import-an-existing-cluster-using-advanced-cluster-management-console"><span>Import an existing Cluster using Advanced Cluster Management console</span></a></h4><ol><li><p>Navigate to Add cluster, Click Import an existing cluster.</p></li><li><p>It displays a window as below, there you can provide Cluster name, Cloud (public or on-premise), Environment and labels are optional.</p><p><img src="'+m+'" alt=""></p><p><strong>Figure 68.</strong> Importing existing cluster to ACM</p></li><li><p>Once you provide all the details, Click on Generate Command.</p><p><img src="'+g+'" alt=""></p><p><strong>Figure 69.</strong> Generated command from ACM</p></li><li><p>Copy the command generated, Run it on imported cluster.</p></li><li><p>After running the command, we should navigate to <strong>Advanced Cluster Management console</strong> there we can find the status of imported cluster details in <strong>cluster</strong> option as per below snap.</p><p><img src="'+v+'" alt=""></p><p><strong>Figure 70.</strong> Imported cluster details to ACM Console</p></li></ol><h2 id="red-hat-advanced-cluster-security-for-kubernetes" tabindex="-1"><a class="header-anchor" href="#red-hat-advanced-cluster-security-for-kubernetes"><span>Red Hat Advanced Cluster security for Kubernetes</span></a></h2><p>Red Hat Advanced Cluster Security (RHACS) for Kubernetes is the pioneering Kubernetes-native security platform, equipping organizations to build, deploy, and run cloud-native applications more securely. The solution helps protect containerized Kubernetes workloads in all major clouds and hybrid platforms. Central services include the user interface (UI), data storage, RHACS application programming interface (API), and image scanning capabilities. RHACS Cloud Service allows you to secure self-managed clusters that communicate with a Central instance. The clusters you secure, called Secured Clusters.</p><p><strong>Prerequisites</strong></p><ol><li>Access to a Red Hat OpenShift Container Platform cluster using an account with Operator installation permissions.</li><li>Red Hat OpenShift Container Platform 4.16 or later. For more information, see Red Hat Advanced Cluster Security for Kubernetes Support Policy</li></ol><p><strong>Install the Red Hat Advanced Cluster Security Operator</strong></p><ol><li><p>Navigate in the web console to the Operators &gt; OperatorHub page.</p></li><li><p>If Red Hat Advanced Cluster Security for Kubernetes is not displayed, enter Advanced Cluster Security into the Filter by keyword box to find the Red Hat Advanced Cluster Security for Kubernetes Operator.</p></li><li><p>Select the Red Hat Advanced Cluster Security for Kubernetes Operator to view the details page.</p></li><li><p>Read the information about the Operator, and then click Install.</p></li><li><p>On the Install Operator page:</p><p>a. Keep the default value for Installation mode as All namespaces on the cluster.</p><p>b. Choose a specific namespace in which to install the Operator for the Installed namespace field. Install the Red Hat Advanced Cluster Security for Kubernetes Operator in the rhacs-operator namespace.</p><p>c. Select automatic or manual updates for Update approval.</p></li><li><p>Click Install.</p></li></ol><p><strong>Verification:</strong> After the installation completes, navigate to Operators &gt; Installed Operators to verify that the Red Hat Advanced Cluster Security for Kubernetes Operator is listed with the status of Succeeded.</p><p><img src="'+f+'" alt=""></p><p><strong>Figure 71.</strong> Red Hat ACS Operator Installation Install the Central Red Hat Advanced Cluster Security</p><ol><li>On the Red Hat OpenShift Container Platform web console, navigate to the Operators &gt; Installed Operators page.</li><li>Select the Red Hat Advanced Cluster Security for Kubernetes Operator from the list of installed Operators.</li><li>If you have installed the Operator in the recommended namespace, OpenShift Container Platform lists the project as rhacs-operator, Select Project: rhacs-operator → Click Create project.</li><li>Enter the new project name (stackrox) and click Create. Red Hat recommends that you use stackrox as the project name.</li><li>Under the Provided APIs section, select Central. Click Create Central.</li></ol><p><img src="'+b+'" alt=""></p><p><strong>Figure 72.</strong> Central Red Hat Advanced Cluster Security (ACS) Installation   6. Configure via yaml view, keep default values, and click create. 7. In stackrox-central-services details we will find Admin credentials information.</p><p><img src="'+y+'" alt=""><img src="'+C+'" alt=""></p><p><strong>Figure 73.</strong> Stackrox-central-services details</p><ol start="8"><li><p>Click central-htpasswd below Admin Password Secret Reference to find the central login credentials and note the htpasswd username(admin) and password.</p></li><li><p>Navigate to Networking &gt; Routes to find the central url. <img src="'+k+'" alt=""><br><strong>Figure 74.</strong> Stackrox central url</p></li><li><p>Log in to the central console using htpasswd credentials. <img src="'+A+'" alt=""><br><strong>Figure 75.</strong> Central console dashboard Create init bundle using RHACS portal</p></li><li><p>On the RHACS portal, navigate to Platform Configuration &gt; Integrations.</p></li><li><p>Navigate to the Authentication Tokens section and click Cluster Init Bundle. <img src="'+S+`" alt=""><br><strong>Figure 76.</strong> Create init bundle</p></li><li><p>Click Create bundle.</p></li><li><p>Enter a name for the cluster init bundle and click Download. Apply the init bundle by creating a resource on the secured cluster Before installing secured clusters, we must use the init bundle to create the required resources on the cluster that will allow the services on the secured clusters to communicate with Central. Use any one of the following methods.</p></li><li><p>Method 1: Using the CLI</p><p>a. Run the following commands to create the resources:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">oc create namespace stackrox</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>b. (Specify the file name of the init bundle containing the secrets)</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">oc create -f &lt;init_bundle.yaml&gt; -n &lt;stackrox&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>c. Specify the name of the project where secured cluster services will be installed</p></li><li><p>Method 2 : using the web console</p><p>a. In the OpenShift Container Platform web console on the cluster that you are securing, in the top menu, click + to open the Import YAML page. You can drag the init bundle file or copy and paste its contents into the editor, and then click Create.</p></li></ol><p><img src="`+I+'" alt=""><br><strong>Figure 77.</strong> Resource creation on secured cluster</p><p><strong>Install secured cluster services within same cluster</strong></p><p><strong>Prerequisites</strong></p><ol><li>If using OpenShift Container Platform, ensure the installation of version 4.16 or later.</li><li>Installation of the RHACS Operator and generation of an init bundle that is applied to the cluster. Procedure</li><li>On the OpenShift Container Platform web console, navigate to the Operators &gt; Installed Operators page and select the RHACS Operator.</li><li>Click Secured Cluster from the central navigation menu in the Operator details page.</li><li>Click Create Secured Cluster.</li><li>Select one of the following options in the Configure via field: either Form view or Yaml view.</li><li>Enter the new project name by accepting or editing the default name. The default value is stackrox-secured-cluster-services.</li><li>Keep all values default for stackrox-secured-cluster-services for same cluster.</li><li>Now the stackrox-secured-cluster-services are ready to perform activity. <img src="'+O+'" alt=""><br><strong>Figure 78.</strong> Secured Cluster installation</li></ol><h2 id="red-hat-quay" tabindex="-1"><a class="header-anchor" href="#red-hat-quay"><span>Red Hat Quay</span></a></h2><p>Red Hat Quay is an enterprise-quality container registry. Use Red Hat Quay to build and store container images, then make them available to deploy across your enterprise. The Red Hat Quay Operator provides a simple method to deploy and manage Red Hat Quay on an OpenShift cluster.</p><div class="hint-container tip"><p class="hint-container-title">Note</p><p>This section is required to executed only if user has selected Red Hat OpenShift Data Foundation (ODF) as storage option. Skip this section if HPE Alletra is the storage option.</p></div><p>This section explains configuring Red Hat Quay v3.11 container registry on existing OpenShift Container Platform 4.16 using the Red Hat Quay Operator.</p><h4 id="installation-of-red-hat-quay-operator" tabindex="-1"><a class="header-anchor" href="#installation-of-red-hat-quay-operator"><span>Installation of Red Hat Quay Operator</span></a></h4><ol><li><p>Log in to Red Hat OpenShift Container Platform console, select Operators → OperatorHub.</p></li><li><p>In the search box, type Red Hat Quay and select the official Red Hat Quay Operator provided by Red Hat. This directs you to the Installation page, which outlines the features, prerequisites, and deployment information.</p></li><li><p>Select Install. This directs you to the Operator Installation page.</p></li></ol><p><img src="'+w+'" alt=""><br><strong>Figure 79.</strong> Red Hat Quay operator installation</p><ol start="4"><li>Update the details for Update channel, Installation mode, Installed Namespace, and update approval as shown in the following figure.</li></ol><p><img src="'+_+'" alt=""><br><strong>Figure 80.</strong> Red Hat Quay operator installation details</p><ol start="5"><li><p>Select Install.</p></li><li><p>After installation you can view the operator in the Installed Operators tab.</p></li></ol><p><img src="'+x+'" alt=""><br><strong>Figure 81.</strong> Red Hat Quay operator installed successfully</p><h4 id="create-the-red-hat-quay-registry" tabindex="-1"><a class="header-anchor" href="#create-the-red-hat-quay-registry"><span>Create the Red Hat Quay Registry</span></a></h4><ol><li>Click the Quay Registry tab → Create QuayRegistry.</li></ol><p><img src="'+R+'" alt=""><br><strong>Figure 82.</strong> Red Hat Quay registry creation</p><ol start="2"><li>Provide details like name and click create.</li></ol><p><img src="'+D+'" alt=""></p><p><strong>Figure 83.</strong> Red Hat Quay registry creation yaml details</p><ol start="3"><li>Quay registry is created and appears as shown in the following figure.</li></ol><p><img src="'+M+'" alt=""></p><p><strong>Figure 84.</strong> Red Hat Quay registry created successfully</p><ol start="4"><li>Click Create Quay Registry to see registry information.</li></ol><p><img src="'+P+`" alt=""></p><p><strong>Figure 85.</strong> Red Hat Quay registry created details</p><ol start="5"><li>Click Registry Endpoint to open registry dashboard.</li></ol><p>If dashboard is not accessible add the entry of registry url to /etc/hosts as follows.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">haproxy-ip  &lt;Registry Endpoint URL&gt;</span>
<span class="line">haproxy-ip example-registry-quay-openshift-operators.apps.ocp.ocpdiv.local</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>Quay registry dashboard login page appears as shown in the following figure.</li></ol><p><img src="`+H+'" alt=""></p><p><strong>Figure 86.</strong> Red Hat Quay account login page</p><ol start="7"><li><p>Enter details as shown and click Create Account.</p></li><li><p>Click sign in and enter details provided while creating the account.</p></li></ol>',144)]))}const Q=a(T,[["render",L],["__file","OADP-AirGap-ACM-ACS-QUAY.html.vue"]]),j=JSON.parse('{"path":"/Additional-Features-and-Functionality/OADP-AirGap-ACM-ACS-QUAY.html","title":"Additional Features and Functionality","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"OpenShift API Data Protection","slug":"openshift-api-data-protection","link":"#openshift-api-data-protection","children":[]},{"level":2,"title":"AirGap Deployment","slug":"airgap-deployment","link":"#airgap-deployment","children":[]},{"level":2,"title":"Red Hat Advanced Cluster Management for Kubernetes","slug":"red-hat-advanced-cluster-management-for-kubernetes","link":"#red-hat-advanced-cluster-management-for-kubernetes","children":[]},{"level":2,"title":"Red Hat Advanced Cluster security for Kubernetes","slug":"red-hat-advanced-cluster-security-for-kubernetes","link":"#red-hat-advanced-cluster-security-for-kubernetes","children":[]},{"level":2,"title":"Red Hat Quay","slug":"red-hat-quay","link":"#red-hat-quay","children":[]}],"git":{},"filePathRelative":"Additional-Features-and-Functionality/OADP-AirGap-ACM-ACS-QUAY.md"}');export{Q as comp,j as data};
