(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{352:function(e,t,s){e.exports=s.p+"assets/img/figure6.11040a94.png"},383:function(e,t,s){"use strict";s.r(t);var a=s(28),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"preparing-the-execution-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preparing-the-execution-environment"}},[e._v("#")]),e._v(" Preparing the execution environment")]),e._v(" "),a("p",[e._v("This section provides a detailed overview and steps to configure the components deployed for this solution.")]),e._v(" "),a("h2",{attrs:{id:"installer-machine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installer-machine"}},[e._v("#")]),e._v(" Installer machine")]),e._v(" "),a("p",[e._v("This document assumes that a server running Red Hat Enterprise Linux (RHEL) 7.6 exists within the deployment environment and is accessible to the installation user to be used as an installer machine. This server must have internet connectivity. In this solution, a virtual machine is used to act as an installer machine and the same host is utilized as an Ansible Engine host.")]),e._v(" "),a("h2",{attrs:{id:"non-root-user-access"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#non-root-user-access"}},[e._v("#")]),e._v(" Non-root user access")]),e._v(" "),a("p",[e._v("The best practice of security industry-wide is to avoid the use of root user account for administration of Linux-based servers. However, certain operations require root user privileges to perform tasks. In those cases, it is best to use the sudo command to obtain the necessary privilege escalation on a short-term basis. The sudo command allows programs and commands to be run with the security privileges of another user (Root is the default user) and can restrict the permission to specific groups, users, and individual commands.")]),e._v(" "),a("p",[e._v("The root user is not active by default in RHCOS. Instead, log in as the core user.")]),e._v(" "),a("p",[e._v("Use the following steps to create a non-root user for the OpenShift installation process:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Login to the installer VM as root. Refer to the "),a("a",{attrs:{href:"#installer-machine"}},[e._v("Installer machine")]),e._v(" section  in this document for more details about the installer VM.")])]),e._v(" "),a("li",[a("p",[e._v("Execute the following command to create a non-root user.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# adduser openshift_admin")]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Execute the following command to set password for the non-root user.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# passwd openshift_admin")]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Add non-root user's group in sudoers file.")])]),e._v(" "),a("li",[a("p",[e._v("Edit the sudoers file and use the following command to add the entry of non-root user's group in the sudoers file.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# visudo")]),e._v("\n")])])]),a("p",[e._v("Add a non-root user's group entry in sudoers file as follows.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# Allow the following commands to run anywhere in non-root user environment\nopenshift_admin\tALL=(ALL) /usr/bin/chmod, /bin/yum, /usr/bin/yum-config-manager, /sbin/subscription-manager, /usr/bin/git, /bin/>>vi, /bin/vim, /bin/mkdir, /usr/bin/cat, /usr/bin/echo, /usr/bin/python, /usr/bin/sed, /usr/bin/chown, /bin/sh, /bin/cp, /bin/ansible-vault, /usr/bin/scp, /usr/bin/rpm, /usr/sbin/chkconfig, /usr/bin/systemctl, /usr/bin/journalctl, /usr/bin/curl, /usr/bin/tar,  /usr/bin/genisoimage, /usr/bin/mount , /usr/bin/umount, /usr/bin/rsync, /usr/bin/find, /usr/bin/mv, /usr/bin/nano, /usr/sbin/dnsmasq, /usr/sbin/setsebool\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Execute the following command to change the user (non-root user).")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# su openshift_admin")]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Register the host and execute the following command to attach the host pool with Red Hat.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" yum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" subscription-manager\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" subscription-manager register --username"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("username"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --password"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("password"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --auto-attach\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" subscription-manager attach --pool"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("pool_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Disable all repositories and enable only the repositories required for the installer VM.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" yum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" yum-utils\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" yum-config-manager --disable *\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" subscription-manager repos --disable"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*"')]),e._v(" \n--enable"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"rhel-7-server-rpms"')]),e._v(" \n--enable"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"rhel-7-server-extras-rpms"')]),e._v(" \n--enable"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"rhel-7-server-optional-rpms"')]),e._v(" \n--enable"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"--enable rhel-server-rhscl-7-rpms"')]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Use the following command to install Ansible.")])])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("   $ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" yum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" ansible\n")])])]),a("ol",{attrs:{start:"10"}},[a("li",[e._v("Use the following command to install Git package on installer VM for performing Git-related operations.")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("   $ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" yum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v("\n")])])]),a("ol",{attrs:{start:"11"}},[a("li",[a("p",[e._v("Execute the following commands to download the hpe-solutions-openshift repository.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" -p /opt/hpe/solutions/ocp\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" /opt/hpe/solutions/ocp\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("https://github.com/HewlettPackard/hpe-solutions-openshift.git"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("chown")]),e._v(" -R openshift_admin:openshift_admin /opt/hpe/solutions/ocp\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Create an environment variable BASE_DIR and point it to the following path.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("BASE_DIR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/opt/hpe/hpe-solutions-openshift/synergy/scalable\n")])])])]),e._v(" "),a("li",[a("p",[e._v("After the hpe-solutions-openshift repository is downloaded, navigate to the path "),a("em",[e._v("/etc/ansible/hpe-solutions-openshift/synergy/scalable/installer/playbooks")]),e._v(". The scripts within this directory assists in configuring the prerequisites for the environment. The details of the scripts are as follows:")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("     python_env.sh : This script installs Python 3.\n    \n     ansible_env.sh : This script creates a Python 3 virtual environment and installs Ansible within the virtual environment.\n    \n     download_oneview_packages.sh : This script installs the prerequisite modules such as HPE oneview-ansible, HPE oneview-python and VMware pyVmomi within the virtual environment.\n")])])]),a("ol",{attrs:{start:"14"}},[a("li",[a("p",[e._v("Steps to configure the prerequisite environment are as follows.")]),e._v(" "),a("p",[e._v("a. Change the directory to /etc/ansible/hpe-solutions-openshift/synergy/scalable/installer/playbooks")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$BASE_DIR")]),e._v("/installer/playbooks\n")])])]),a("p",[e._v("b. Execute the following command to setup the python environment.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ yum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" @development\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sh")]),e._v(" python_env.sh\n")])])]),a("p",[e._v("c. Execute the following command to enable python 3.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("   $ scl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("enable")]),e._v(" rh-python36 "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("bash")]),e._v("\n")])])]),a("p",[e._v("d. Execute the following command to configure the Ansible environment.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ $ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sh")]),e._v(" ansible_env.sh\n")])])]),a("p",[e._v("e. Execute the following command to download the HPE OneView packages.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sh")]),e._v(" download_oneview_packages.sh\n")])])])])]),e._v(" "),a("p",[e._v("​ f. Enable the virtual environment with the following command.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("source")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v("/ocp_venv/bin/activate\n")])])]),a("p",[e._v("g. Execute the following command to set the environment variables.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ANSIBLE_LIBRARY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$BASE_DIR")]),e._v("/installer/library/oneview-ansible/library\n\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ANSIBLE_MODULE_UTILS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$BASE_DIR")]),e._v("/installer/library/oneview-ansible/library/module_utils\n    \n")])])]),a("h2",{attrs:{id:"kubernetes-manifests-and-ignition-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-manifests-and-ignition-files"}},[e._v("#")]),e._v(" Kubernetes manifests and ignition files")]),e._v(" "),a("p",[e._v("Manifests and ignition files define the master node and worker node configuration and are key components of the Red Hat OpenShift Container Platform 4 installation.")]),e._v(" "),a("p",[e._v("Before creating the manifest files and ignition files, it is necessary to download the Red Hat OpenShift 4 packages. Execute the following command on the installer VM to download the required packages.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$BASE_DIR")]),e._v("/installer\n\n$ ansible-playbook playbooks/download_ocp_package.yml\n")])])]),a("p",[e._v("The OpenShift packages downloaded after executing the "),a("em",[e._v("download_ocp_package.yml")]),e._v(" playbook can be found on the installer VM at "),a("em",[e._v("/etc/ansible/hpe-solutions-openshift/synergy/scalable/installer/library/openshift_components")]),e._v(". To execute any OpenShift related adhoc commands, it is advised to execute them from within this folder.")]),e._v(" "),a("p",[e._v("To create the manifest files and the ignition files, edit the "),a("em",[e._v("install-config.yaml")]),e._v(" file provided in the directory "),a("em",[e._v("/etc/ansible/hpe-solutions-openshift/synergy/scalable/installer/ignitions")]),e._v(" to include the following details:")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("baseDomain : Base domain of the DNS which hosts Red Hat OpenShift Container Platform.")])]),e._v(" "),a("li",[a("p",[e._v("name : Name of the OpenShift cluster. This is same as the new domain created in DNS.")])]),e._v(" "),a("li",[a("p",[e._v("replicas : Update this field to reflect the corresponding number of master or worker instances required for the OpenShift cluster as per the installation environment requirements. It is recommended to have a minimum of 3 master nodes and 2 worker nodes per OpenShift cluster.")])]),e._v(" "),a("li",[a("p",[e._v("clusterNetworks : This field is pre-populated by Red Hat. Update this field only if a custom cluster network is to be used.")])]),e._v(" "),a("li",[a("p",[e._v("pullSecret : Update this field with the pull secret for the Red Hat account. Login to Red Hat account "),a("a",{attrs:{href:"https://cloud.redhat.com/openshift/install/metal/user-provisioned",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://cloud.redhat.com/openshift/install/metal/user-provisioned"),a("OutboundLink")],1),e._v(" and retrieve the pull secret.")])]),e._v(" "),a("li",[a("p",[e._v("sshKey : Update this field with the sshKey of the installer VM and copy the SSH key in install-config.yaml file. Generate the SSH key with following command.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ ssh-keygen\n")])])]),a("p",[e._v("A sample "),a("em",[e._v("install-config.yaml")]),e._v(" file appears as follows. Update the fields to suit the installation environment.")]),e._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[e._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" v1\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("baseDomain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[e._v("&lt")]),e._v(";name of the base domain"),a("span",{pre:!0,attrs:{class:"token important"}},[e._v("&gt")]),e._v(";\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("compute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("hyperthreading")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Enabled\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" worker\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("replicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("controlPlane")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("hyperthreading")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Enabled\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" master\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("replicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[e._v("&lt")]),e._v(";name of the cluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" same as the new domain under the base domain created"),a("span",{pre:!0,attrs:{class:"token important"}},[e._v("&gt")]),e._v(";\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("networking")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("clusterNetworks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("cidr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" 12.128.0.0/14\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("hostPrefix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("23")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("networkType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" OpenShiftSDN\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("serviceNetwork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" 172.30.0.0/16\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("platform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("none")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("pullSecret")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ‘pull secret provided as per the Red Hat account’\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("sshKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ‘ ssh key of the installer VM ’\n\n")])])]),a("p",[e._v("Execute the following command on the installer VM to create the manifest files and the ignition files required to install Red Hat OpenShift.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$BASE_DIR")]),e._v("/installer\n$ ansible-playbook playbooks/create_manifest_ignitions.yml\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("chmod")]),e._v(" +r installer/igninitions/*.ign\n")])])])])]),e._v(" "),a("p",[e._v("The ignition files are generated on the installer VM within the folder "),a("em",[e._v("/etc/ansible/hpe-solutions-openshift/synergy/scalable/installer/ignitions")]),e._v(".")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),a("p",[e._v("The ignition files have a time-out period of 24 hours and it is critical that the clusters are created within 24 hours of generating the ignition files. If it crosses 24 hours, then regenerate the ignition files again by clearing up the files from the directory where the ignition files were saved.")])]),e._v(" "),a("h2",{attrs:{id:"os-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#os-deployment"}},[e._v("#")]),e._v(" OS deployment")]),e._v(" "),a("h3",{attrs:{id:"pxe-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pxe-server"}},[e._v("#")]),e._v(" PXE server")]),e._v(" "),a("p",[e._v("In this solution, a PXE server is used for OS deployment and is configured on CentOS (version: CentOS Linux release 7.6.1810 (Core)). The PXE server uses the FTP service for file distribution but can be altered to support HTTP or NFS.")]),e._v(" "),a("p",[e._v("This section highlights the steps to configure a PXE server:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Login to the CentOS server to be configured as a PXE server as a user that can run commands as root via sudo.")])]),e._v(" "),a("li",[a("p",[e._v("Install packages such as DHCP, TFTP server, vSFTPD (FTP server) and xinetd using the following command.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" dhcp tftp tftp-server syslinux vsftpd xinetd\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Update the DHCP configuration file at "),a("em",[e._v("/etc/dhcp/dhcpd.conf")]),e._v(" with the MAC addresses, IP addresses, DNS, and routing details of the installation environment. Domain search is optional. A sample DHCP configuration file is shown as follows.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('ddns-update-style interim;\nignore client-updates;\nauthoritative;\nallow booting;\nallow bootp;\n\n# internal subnet for my DHCP Server\nsubnet 20.0.x.x netmask 255.0.0.0 {\nrange 20.0.x.x 20.0.x.x;\ndeny unknown-clients;\noption domain-name-servers 20.x.x.x;\noption domain-name "twentynet.local";\noption routers 20.x.x.x;\noption broadcast-address 20.255.255.255;\ndefault-lease-time 600;\nmax-lease-time 7200;\nnext-server 20.x.x.x;\nfilename "pxelinux.0";\n}\n\n#######################################\nhost bootstrap {\nhardware ethernet 00:50:56:xx:98:df;\nfixed-address 20.0.x.x;\n}\nhost master01 {\nhardware ethernet 00:50:56:95:xx:82;\nfixed-address 20.0.x.x;\n}\nhost worker01 {\nhardware ethernet 00:50:56:xx:ab:82;\nfixed-address 20.0.x.x;\n}\n')])])])]),e._v(" "),a("li",[a("p",[e._v("Trivial File Transfer Protocol (TFTP) is used to transfer files from data server to clients without any kind of authentication. TFTP is used for ignition file loading in PXE based environments. To configure the TFTP server, edit the configuration file "),a("em",[e._v("/etc/xinetd.d/tftp")]),e._v(". Change the parameter ‘disable = yes’ to ‘disable = no’ and leave the other parameters as is. To edit the "),a("em",[e._v("/etc/xinetd.d/tftp")]),e._v(" file, execute the following command.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("vi")]),e._v("  /etc/xinetd.d/tftp\n")])])]),a("p",[e._v("The TFTP configuration file is shown as follows.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("service tftp\n   {\n\n        socket_type = dgram\n        protocol = udp\n        wait = yes\n        user = root\n        server = /usr/sbin/in.tftpd\n        server_args = -s /var/lib/tftpboot\n        disable = no\n        per_source = 11\n        cps = 100 2\n        flags = IPv4\n    }\n")])])]),a("p",[e._v("Network boot related files must be placed in the tftp root directory "),a("em",[e._v("/var/lib/tftpboot")]),e._v(". Run the following commands to copy the required network boot files to "),a("em",[e._v("/var/lib/tftpboot/")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" –v /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" –v /usr/share/syslinux/menu.c32 /var/lib/tftpboot\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" –v /usr/share/syslinux/memdisk /var/lib/tftpboot\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" –v /usr/share/syslinux/mboot.c32 /var/lib/tftpboot\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" –v /usr/share/syslinux/chain.c32 /var/lib/tftpboot\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" /var/lib/tftpboot/pxelinux.cfg\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" /var/lib/tftpboot/networkboot\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Copy the RHCOS 4 and RHEL 7.6 ISO files to the PXE server. Mount it to the "),a("em",[e._v("/mnt/")]),e._v(" directory and then copy the contents of the ISO to the local FTP server using the following commands.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mount")]),e._v(" –o loop "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v("lt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("OS "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v("gt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" /mnt/\n\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" /mnt/\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" –av * /var/ftp/pub/\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Copy the kernel file (vmlinuz) and initrd file from "),a("em",[e._v("/mnt")]),e._v(" to "),a("em",[e._v("/var/lib/tftpboot/networkboot/")]),e._v(" using the following commands.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" /mnt/images/pxeboot/vmlinuz /var/lib/tftpboot/networkboot/\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" /mnt/images/pxeboot/initrd.img /var/lib/tftpboot/networkboot\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Unmount the ISO files using the following command.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" unmount /mnt/\n")])])])]),e._v(" "),a("li",[a("p",[e._v("For RHEL nodes, create and utilize a new kickstart file under the folder "),a("em",[e._v("/var/ftp/pub")]),e._v(" with the name “"),a("em",[e._v("rhel7.cfg")]),e._v("” using the following command.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("vi")]),e._v(" /var/ftp/pub/rhel7.cfg\n")])])]),a("p",[e._v("An example kickstart file is shown as follows. The installation user should create a kickstart file to meet the requirements of their installation environment.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('firewall --disabled\n# Install OS instead of upgrade\ninstall\n# Use FTP installation media\nurl --url="ftp://&lt;FTP_server_IP_address&gt;/pub/rhel76/"\n# Root password\n# root password can be plaintext as shown below\n# rootpw –plaintext &lt;password&gt;\n# root password is encrypted using the command “openssl passwd -1 &lt;password&gt;” and resultant output is provided for rootpw as shown below\nrootpw --iscrypted $6$uiq8l/7xEWsYXhrvaEgan4N21yhLa8K.U7UA12Th3PD11GOXvEcI40gp\n# System authorization information\nauth useshadow passalgo=sha512\n# Use graphical install\ngraphical\nfirstboot disable\n# System keyboard, timezone, language\nkeyboard us\ntimezone Europe/Amsterdam\nlang en_US\n# SELinux configuration\nselinux disabled\n# Installation logging level\nlogging level=info\n# System bootloader configuration\nbootloader location=mbr\nclearpart --all --initlabel\npart swap --asprimary --fstype="swap" --size=1\npart /boot --fstype xfs --size=300\npart pv.01 --size=1 --grow\nvolgroup root_vg01 pv.01\nlogvol / --fstype xfs --name=lv_01 --vgname=root_vg01 --size=1 --grow\n%packages\n@^minimal\n@core\n%end\n%addon com_redhat_kdump --disable --reserve-mb=\'auto\'\n%end\n')])])])]),e._v(" "),a("li",[a("p",[e._v("Create a PXE menu.")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Create a PXE menu file at the location "),a("em",[e._v("/var/lib/tftpboot/pxelinux.cfg/default")]),e._v(" using the following command.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("vi")]),e._v(" /var/lib/tftpboot/pxelinux.cfg/default\n")])])])]),e._v(" "),a("li",[a("p",[e._v("For each of the OS boot options, provide the following details:")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("MENU LABEL : Custom name of the respective menu label.")])]),e._v(" "),a("li",[a("p",[e._v("KERNEL : Kernel details of the operating system.")])]),e._v(" "),a("li",[a("p",[e._v("APPEND : Path of bootloader file along with path of cfg or ignition files (in case of RHCOS) or configuration file (in case of RHEL).")])])])])]),e._v(" "),a("p",[e._v("A sample PXE menu is as follows.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("default menu.c32\n\nprompt 0\n\ntimeout 30\n\nMENU TITLE LinuxTechi.com PXE Menu\n\nLABEL rhel76\n\nMENU LABEL RHEL76-Buedata\n\nKERNEL /rhel76/vmlinuz\n\nAPPEND initrd=/rhel76/initrd.img inst.repo=ftp://&lt;FTP_server_IP_address&gt;/pub/rhel76 ks=ftp://&lt;FTP_server_IP_address&gt;/pub/rhel76-hcp.cfg\n\nLABEL rhcos-bootstrap\n\nMENU LABEL Install RHCOS4.3 sec-Bootstrap\n\nKERNEL /networkboot/rhcos-4.3.0-x86_64-installer-kernel\n\nAPPEND ip=dhcp rd.neednet=1 initrd=/networkboot/rhcos-4.3.0-x86_64-installer-initramfs.img console=tty0 console=ttyS0 coreos.inst=yes coreos.inst.install_dev=sda coreos.inst.image_url= ftp://&lt;FTP_server_IP_address&gt;/pub/rhcos-4.3.0-x86_64-metal-bios.raw.gz coreos.inst.ignition_url= ftp://&lt;FTP_server_IP_address&gt;/pub/sec/bootstrap.ign\n\nLABEL rhcos-master\n\nMENU LABEL Install RHCOS4.2 sec-Master\n\nKERNEL /networkboot/rhcos-4.3.0-x86_64-installer-kernel\n\nAPPEND ip=dhcp rd.neednet=1 initrd=/networkboot/rhcos-4.3.0-x86_64-installer-initramfs.img console=tty0 console=ttyS0 coreos.inst=yes coreos.inst.install_dev=sda coreos.inst.image_url= ftp://&lt;FTP_server_IP_address&gt;/pub/rhcos-4.3.0-x86_64-metal-bios.raw.gz coreos.inst.ignition_url=ftp://&lt;FTP_server_IP_address&gt;/pub/sec/master.ign\n\nLABEL rhcos-worker\n\nMENU LABEL Install RHCOS4.2 sec-Worker\n\nKERNEL /networkboot/rhcos-4.3.0-x86_64-installer-kernel\n\nAPPEND ip=dhcp rd.neednet=1 initrd=/networkboot/rhcos-4.3.0-x86_64-installer-initramfs.img console=tty0 console=ttyS0 coreos.inst=yes coreos.inst.install_dev=sda coreos.inst.image_url= ftp://&lt;FTP_server_IP_address&gt;/pub/rhcos-4.3.0-x86_64-metal-bios.raw.gz coreos.inst.ignition_url=ftp://&lt;FTP_server_IP_address&gt;/pub/sec/worker.ign\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Start and enable xinetd, dhcpd and vsftpd using the following commands.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("    $ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl start xinetd\n\n    $ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("enable")]),e._v(" xinetd\n\n    $ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl start dhcpd.service\n\n    $ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("enable")]),e._v(" dhcpd.service\n\n    $ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl start vsftpd\n\n    $ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("enable")]),e._v(" vsftpd\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Configure SELinux for FTP.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" setsebool –P allow_ftpd_full_access "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Open ports in the firewall using the following firewall-cmd commands.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" firewall-cmd --add-service-ftp --permanent\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" firewall-cmd --add-service-dhcp --permanent\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" firewall-cmd –reload\n")])])])])]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),a("p",[e._v("It is crucial to generate ignition files, copy them to the TFTP server, and update the path in the PXE default file. For more information about generating the ignition files, refer to the "),a("a",{attrs:{href:"#kubernetes-manifests-and-ignition-files"}},[e._v("Kubernetes manifests and ignition files")]),e._v(" section in this document.")])]),e._v(" "),a("h3",{attrs:{id:"ipxe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ipxe"}},[e._v("#")]),e._v(" iPXE")]),e._v(" "),a("p",[e._v("This repository contains the playbooks to configure RHEL 7.x server used to perform an unattended installation of Red Hat Enterprise Linux CoreOS (RHCOS) for non-esxi VMs and Bare metal servers. The playbooks deploy open source tools such as dnsmasq, Ipxe etc. to achive its objectives.")]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("Prerequisites")]),e._v(" "),a("ul",[a("li",[e._v("A RHEL 7.x VM preferably or could be baremetal server with the following minimium configuration.")]),e._v(" "),a("li",[e._v("At least 200 GB disk space")]),e._v(" "),a("li",[e._v("Two (2) CPU cores")]),e._v(" "),a("li",[e._v("8 GB RAM")]),e._v(" "),a("li",[e._v("/var has at least 15GB disk space allocated while partitioning.")]),e._v(" "),a("li",[e._v("Static IP should be on the same network as the RHCOS server")]),e._v(" "),a("li",[e._v("Internet access - generate")])])]),e._v(" "),a("p",[e._v("Use the following command to disable Selinux.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'s/enforcing/disabled/g'")]),e._v(" /etc/selinux/config \n")])])]),a("p",[e._v("Reboot the RHEL machine.")]),e._v(" "),a("p",[e._v("Check selinux status using the following command.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("  getenforce\n")])])]),a("p",[e._v("Ansible Engine is configured the version is 2.9.x.")]),e._v(" "),a("p",[e._v("Browse to the following directory on the Ansible Engine.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" BASE_DIR/os_deployment/deploy_rhcos/\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),a("p",[e._v("Refer to "),a("a",{attrs:{href:"#installer-machine"}},[e._v("Ansible Engine Installation")]),e._v(' section  to know the "BASE_DIR" path.')])]),e._v(" "),a("p",[e._v("Copy Openshift 4.x and higher versions of install files to the folder preferably under /tmp/ eg. /tmp/image/")]),e._v(" "),a("p",[e._v("Update variable file. The variable file is located in "),a("em",[e._v("BASE_DIR/os_deployment/deploy_rhcos/secrets.yml")])]),e._v(" "),a("h4",{attrs:{id:"understanding-the-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#understanding-the-variables"}},[e._v("#")]),e._v(" Understanding the variables")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('    # interface_name: eth0 # interface name of the interface with the static IP address. This can be obtained by running "ip a" on the CentOS server. \n\n    # This is static IP address assigned to the above interface. Example: ansible_engine_ip: 192.168.2.161\n  ansible_engine_ip: <ansible_engine_ip> \n\n\t# base DNS domain of your enviroment, Example: base_domain: contoso.local\n\tbase_domain: contoso.local\n\t\n\tapp_domain: app.contoso.local \n    # Openshift sub domain where all OpenShift services will be deployed \n\n\tgateway: 192.168.42.254 \n    # This is network router IP address of the NAT device to be used for internet access \n\n\tdns_server: 192.168.42.252 \n    # This network dns/nameserver server where all the DNS records reside for both base_domain and app_domain\n\n\tdhcp_range: 192.168.43.10,192.168.43.20,24h \n    # This is dhcp range that  is to be used for the Openshift nodes and 24h duration of dhcp lease \n\n\tnet_mask: 255.255.240.0 \n    # This is the network mask for OpenShift nodes \n')])])]),a("h5",{attrs:{id:"openshift-node-network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#openshift-node-network"}},[e._v("#")]),e._v(" OpenShift node network")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("   master1_mac: 08:00:27:36:0A:01 \n   # This is tha mac address of master node 1 using this mac this server will boot up as a master node\n\n\tmaster1_ip: 192.168.43.11\n    # mac ip address to assigned to master node 1\n\n\tmaster2_mac: 08:00:27:36:0A:02 \n    # This is tha mac address of master node 2. Using this mac, this server will boot up as a master node.\n\n\tmaster2_ip: 192.168.43.12 \n    # mac ip address to assigned to master node 2\n\n\tmaster3_mac: 08:00:27:36:0A:03 \n    # This is tha mac address of master node 3. Using this mac, this server will boot up as a master node.\n\n\tmaster3_ip: 192.168.43.13 \n    # mac ip address to assigned to master node 3\n\n\tworker1_mac: 08:00:27:36:0A:04 \n    # This is tha mac address of worker node 1. Using this mac, this server will boot up as a worker node.\n\n\tworker1_ip: 192.168.43.14 \n    # mac ip address to assigned to worker node 1\n\n\tworker2_mac: 08:00:27:36:0A:05 \n    # This is tha mac address of worker node 2. Using this mac, this server will boot up  as a worker node.\n\n\tworker2_ip: 192.168.43.15 \n    # mac ip address to assigned to worker node 2\n\n\tworker3_mac: 08:00:27:36:0A:06 \n    # This is tha mac address of worker node 3. Using this mac, this server will boot up as a worker node.\n\n\tworker3_ip: 192.168.43.16 \n    # mac ip address to assigned to worker node 3\n\n\tbootstrap_mac: 00:15:5D:8d:1B:18 \n    # This is tha mac address of bootstrap node. Using this mac, this server will boot up as a bootstraping node.\n\n\tbootstrap_ip: 192.168.43.10 \n    # mac ip address to assigned to bootstrap node \n")])])]),a("h5",{attrs:{id:"install-media-details"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-media-details"}},[e._v("#")]),e._v(" Install media details")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\timage_location: /tmp/image/  \n    # location of the relevant Openshift install files on local CentOS server\n\n\tinitramfs_name: rhcos-4.2.0-x86_64-installer-initramfs.img\n\n\tkernel_name: rhcos-4.2.0-x86_64-installer-kernel\n\n\tbios_uefi_name: rhcos-4.2.0-x86_64-metal-bios.raw.gz\n")])])]),a("p",[e._v("After updating the above varibles, run the following Ansible playbook")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\nansible-playbook -i hosts master.yml --ask-vault-pass\n")])])]),a("p",[e._v("Test Setup with Mac address curl http://localhost:8080/ipxe?mac=08:00:27:36:0A:01")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\tcurl http://192.168.42.200:8080/ignition?mac=08:00:27:36:0A:01\n")])])]),a("h2",{attrs:{id:"esxi-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#esxi-deployment"}},[e._v("#")]),e._v(" ESXi deployment")]),e._v(" "),a("p",[e._v("This section outlines the steps to programmatically deploy ESXi on all the bare metal nodes.")]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("Prerequisites")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("RHEL 7.6 Installer machine with the following configuration is essential to initiate the OS deployment process.")])]),e._v(" "),a("li",[a("p",[e._v("ESXi ISO image is present in the HTTP file path within the installer machine.")])])])]),e._v(" "),a("h2",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Enable Python 3 and Ansible environment as mentioned in "),a("a",{attrs:{href:"#installer-machine"}},[e._v("Installer machine")]),e._v(" section of deployment guide.")])]),e._v(" "),a("li",[a("p",[e._v("Execute the following command on the installer VM to point to the ESXi deployment directory.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ cd $BASE_DIR/os_deployment/deploy_esxi\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Use the following command to install requirements.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ sudo sh setup.sh \n")])])])]),e._v(" "),a("li",[a("p",[e._v("Edit input files using the following command.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ sudo ansible-vault edit input_files/config.yml\n$ Enter the password\n")])])])])]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),a("p",[e._v("The default password for the Ansible vault file is "),a("em",[e._v("changeme")]),e._v(".")])]),e._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[a("p",[e._v("Update the input_files/config.yml file with the details of web server and operating system to be installed.")]),e._v(" "),a("p",[e._v("Example values for the input configuration is as follows:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("config:\n  HTTP_server_base_url: http://10.0.x.x/\n  HTTP_file_path: /usr/share/nginx/html/\n  OS_type: esxi67\n  OS_image_name: <ISO_image_name>.iso\n  base_kickstart_filepath: kickstart_files/ks_esxi67.cfg\n\n")])])])])]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),a("p",[e._v('Acceptable values for "OS_type" variable is "esxi67" for ESXi 6.7.')])]),e._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[a("p",[e._v("Update the input_files or server_details.yml file with the details of servers on which ESXi is to be installed.")]),e._v(" "),a("p",[e._v("Example values for the input configuration for deploying ESXi 6.7 is as follows:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("servers:\n   -  Server_serial_number: MXxxxxxDP\n      ILO_Address: 10.0.x.x\n      ILO_Username: username\n      ILO_Password: password\n      Hostname: vsphere01.twentynet.local\n      Host_IP: 20.x.x.x\n      Host_Username: root\n      Host_Password: Password\n      Host_Netmask: 255.x.x.x\n      Host_Gateway: 20.x.x.x\n      Host_DNS: 20.x.x.x\n   - Server_serial_number: MXxxxxxDQ\n      ILO_Address: 10.0.x.x\n      ILO_Username: username\n      ILO_Password: password\n      Hostname: vsphere02.twentynet.local\n      Host_IP: 20.0.x.x\n      Host_Username: root\n      Host_Password: Password\n      Host_Netmask: 255.x.x.x\n      Host_Gateway: 20.x.x.x\n      Host_DNS: 20.x.x.x\n")])])])])]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v(' It is recommended to provide a complex password for the "Host_Password" variable.\n Provide administrative privileged iLO account username and password.\n')])])])]),e._v(" "),a("ol",{attrs:{start:"7"}},[a("li",[a("p",[e._v("Run playbook to deploy ESXi.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ ansible-playbook deploy.yml --ask-vault-pass\n")])])])])]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("In the process of ESXi deployment, ISO image contents will be forcefully moved to inside $BASE_DIR/deploy_esxi/files folder and it needs to be deleted in case of space issues.")])]),e._v(" "),a("li",[a("p",[e._v("BASE_DIR is defined in "),a("a",{attrs:{href:"#installer-machine"}},[e._v("Installer machine")]),e._v(" section.")])])])]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),a("p",[e._v("Generic settings done as part of kickstart file for ESXi are as follows. It is recommended that the user reviews and modifies the kickstart file (kickstart_files/ks_esxi67.cfg) to suit their requirements.")]),e._v(" "),a("ul",[a("li",[e._v("Accept End User License Agreement (EULA)")]),e._v(" "),a("li",[e._v("clearpart --alldrives --overwritevmfs")]),e._v(" "),a("li",[e._v("install --firstdisk --overwritevmfs")]),e._v(" "),a("li",[e._v("%firstboot --interpreter=busybox")]),e._v(" "),a("li",[e._v("One standard switch vswitch0 is created with uplinks vmnic0 and vmnic1. it is assigned with the Host_IP defined in the input_files/server_details.yml input file.")]),e._v(" "),a("li",[e._v("NIC teaming is performed with vmnic0 being the active uplink and vmnic1 being the standby uplink.")]),e._v(" "),a("li",[e._v("NIC failover policy is set to --failback yes --failure-detection link --load-balancing mac --notify-switches yes.")])])]),e._v(" "),a("h2",{attrs:{id:"load-balancer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#load-balancer"}},[e._v("#")]),e._v(" Load balancer")]),e._v(" "),a("p",[e._v("Red Hat OpenShift Container Platform 4 uses an external load balancer to communicate from outside the cluster with services running inside the cluster. This section assumes that there is a load balancer available within the deployment environment and is available for use. This solution was developed using "),a("strong",[e._v("HA Proxy")]),e._v(", an open source solution with one (1) virtual machine for load balancing functionality. This section covers its configuration. In a production environment, Hewlett Packard Enterprise recommends the use of enterprise load balancing such as F5 Networks Big-IP and its associated products.")]),e._v(" "),a("p",[e._v("The following entries are made in the haproxy.cfg file.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Sample haproxy.cfg file\n#---------------------------------------------------------------------\n# static backend for serving up images, stylesheets and such\n#---------------------------------------------------------------------\n#backend static\n# balance roundrobin\n# server static 127.0.0.1:4331 check\n#---------------------------------------------------------------------\n# round robin balancing between the various backends\n#---------------------------------------------------------------------\nbackend ocp4-kubernetes-api-server\n    mode tcp\n    balance source\n    server bootstrap bootstrap.ocp.pxelocal.local:6443 check\n    server master01 master01.ocp.pxelocal.local:6443 check\n    server master02 master02.ocp.pxelocal.local:6443 check\n    server master03 master03.ocp.pxelocal.local:6443 check\n\nbackend ocp4-machine-config-server\n    balance source\n    mode tcp\n    server bootstrap bootstrap.ocp.pxelocal.local:22623 check\n    server master01 master01.ocp.pxelocal.local:22623 check\n    server master02 master02.ocp.pxelocal.local:22623 check\n    server master03 master03.ocp.pxelocal.local:22623 check\n\nbackend ocp4-router-http\n    balance source\n    mode tcp\n    server worker03 worker03.ocp.pxelocal.local:80 check\n    server worker04 worker04.ocp.pxelocal.local:80 check\n    server worker01 worker01.ocp.pxelocal.local:80 check\n    server worker02 worker02.ocp.pxelocal.local:80 check\n\n# if creating a cluster with only master nodes to begin with and later adding the worker nodes, master nodes should be added in this section instead of worker nodes. After all the worker nodes are added into the cluster, this configuration needs to be updated with the worker nodes.\n    # server master01 master01.ocp.pxelocal.local:80 check\n    # server master02 master02.ocp.pxelocal.local:80 check\n    # server master03 master03.ocp.pxelocal.local:80 check\n\n    backend ocp4-router-https\n        balance source\n        mode tcp\n        server worker03 worker03.ocp.pxelocal.local:443 check\n        server worker04 worker04.ocp.pxelocal.local:443 check\n        server worker01 worker01.ocp.pxelocal.local:443 check\n        server worker01 worker02.ocp.pxelocal.local:443 check\n\n# if creating a cluster with only master nodes to begin with and later adding the worker nodes, master nodes should be added in this section instead of worker nodes. After all the worker nodes are added into the cluster, this configuration needs to be updated with the worker nodes.\n    # server master01 master01.ocp.pxelocal.local:443 check\n    # server master02 master02.ocp.pxelocal.local:443 check\n    # server master03 master03.ocp.pxelocal.local:443 check\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),a("p",[e._v("The load balancer configuration should contain values that are aligned to the installation environment.")])]),e._v(" "),a("h2",{attrs:{id:"user-provisioned-dns-requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#user-provisioned-dns-requirements"}},[e._v("#")]),e._v(" User-provisioned DNS requirements")]),e._v(" "),a("p",[e._v("This section covers the host entries that need to be made in the base domain to enable installation of Red Hat OpenShift Container Platform 4.")]),e._v(" "),a("p",[e._v("Red Hat OpenShift Container Platform 4 uses three types of DNS records (A, CNAME, and SRV). The host names and their types are described in Table 7.")]),e._v(" "),a("p",[a("strong",[e._v("Table 7.")]),e._v(" DNS entries for Red Hat OpenShift Container Platform")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Hosts")]),e._v(" "),a("th",[e._v("DNS Record Types")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("master_nodes")]),e._v(" "),a("td",[e._v("A")])]),e._v(" "),a("tr",[a("td",[e._v("worker_nodes")]),e._v(" "),a("td",[e._v("A")])]),e._v(" "),a("tr",[a("td",[e._v("bootstrap_nodes")]),e._v(" "),a("td",[e._v("A")])]),e._v(" "),a("tr",[a("td",[e._v("installer VM")]),e._v(" "),a("td",[e._v("A")])]),e._v(" "),a("tr",[a("td",[e._v("*, api, api-int, haproxy")]),e._v(" "),a("td",[e._v("A")])]),e._v(" "),a("tr",[a("td",[e._v("etcd")]),e._v(" "),a("td",[e._v("CNAME, SRV")])])])]),e._v(" "),a("p",[e._v("To add the appropriate records, follow these steps:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("‘A’ type resource record [ Host (A) ]. An A record specifies an IPv4 address. Example entries are shown in Table 8. Ensure that these entries are created for all the nodes in the installation environment.")]),e._v(" "),a("p",[a("strong",[e._v("Table 8.")]),e._v(" ‘A’ type DNS entry")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Host (A)")]),e._v(" "),a("th",[e._v("IP Address")]),e._v(" "),a("th",[e._v("Host name")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("master_nodes")]),e._v(" "),a("td",[e._v("master_ip")]),e._v(" "),a("td",[e._v("master_name.cluster_name.baseDomain")])]),e._v(" "),a("tr",[a("td",[e._v("worker_nodes")]),e._v(" "),a("td",[e._v("worker_ip")]),e._v(" "),a("td",[e._v("worker_name.cluster_name.baseDomain")])]),e._v(" "),a("tr",[a("td",[e._v("bootstrap_nodes")]),e._v(" "),a("td",[e._v("bootstrap_ip")]),e._v(" "),a("td",[e._v("bootstrap_name.cluster_name.baseDomain")])]),e._v(" "),a("tr",[a("td",[e._v("installer VM")]),e._v(" "),a("td",[e._v("installer_ip")]),e._v(" "),a("td",[e._v("installer_name.cluster_name.baseDomain")])]),e._v(" "),a("tr",[a("td",[e._v("*")]),e._v(" "),a("td",[e._v("haproxy_ip")]),e._v(" "),a("td",[e._v("*.apps.cluster_name.baseDomain")])]),e._v(" "),a("tr",[a("td",[e._v("api")]),e._v(" "),a("td",[e._v("haproxy_ip")]),e._v(" "),a("td",[e._v("api.cluster_name.baseDomain")])]),e._v(" "),a("tr",[a("td",[e._v("api-int")]),e._v(" "),a("td",[e._v("haproxy_ip")]),e._v(" "),a("td",[e._v("api-int.cluster_name.baseDomain")])]),e._v(" "),a("tr",[a("td",[e._v("haproxy")]),e._v(" "),a("td",[e._v("haproxy_ip")]),e._v(" "),a("td",[e._v("haproxy_name.cluster_name.baseDomain")])])])])]),e._v(" "),a("li",[a("p",[e._v("Create a CNAME resource record [ Alias (CNAME) ] in DNS. Example entries are shown in Table 9. Ensure that these entries are created for all of the master nodes.")]),e._v(" "),a("p",[a("strong",[e._v("Table 9.")]),e._v(" DNS entries for Red Hat OpenShift Container Platform")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Host (CNAME)")]),e._v(" "),a("th",[e._v("Target host name")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("etcd-0")]),e._v(" "),a("td",[e._v("*master01_name.cluster_name.baseDomain")])]),e._v(" "),a("tr",[a("td",[e._v("etcd-1")]),e._v(" "),a("td",[e._v("*master02_name.cluster_name.baseDomain")])]),e._v(" "),a("tr",[a("td",[e._v("etcd-2")]),e._v(" "),a("td",[e._v("*master03_name.cluster_name.baseDomain")])])])])])]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("Replace the italicized components in the examples above with the actual values that align to the installation environment.\n")])])])]),e._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[e._v("For each master node, Red Hat OpenShift Container Platform also requires a Service Location (SRV) DNS record for the etcd server on that machine with priority 0, weight 10, and port 2380. The SRV record is used to identify computers that host specific services. Figure 6 shows the creation of a SRV record.")]),e._v(" "),a("p",[a("img",{attrs:{src:s(352),alt:""}})])])]),e._v(" "),a("p",[a("strong",[e._v("Figure 6.")]),e._v(" Creating a SRV record")])])}),[],!1,null,null,null);t.default=n.exports}}]);