(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{265:function(e,t,a){"use strict";a.r(t);var n=a(28),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"validating-openshift-container-platform-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validating-openshift-container-platform-deployment"}},[e._v("#")]),e._v(" Validating OpenShift Container Platform deployment")]),e._v(" "),a("p",[e._v("After the cluster is up and running with OpenShift Local Storage Operator, the cluster configuration is validated by deploying a MongoDB pod with persistent volume and Yahoo Cloud Service Benchmarking (YCSB). This section covers the steps to validate the OpenShift Container Platform deployment.")]),e._v(" "),a("h2",{attrs:{id:"deploying-mongodb-application"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploying-mongodb-application"}},[e._v("#")]),e._v(" Deploying MongoDB application")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Login to the installer VM.")])]),e._v(" "),a("li",[a("p",[e._v("Download the Red Hat scripts specific to the MongoDB application at "),a("a",{attrs:{href:"https://github.com/red-hat-storage/SAWORF",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/red-hat-storage/SAWORF"),a("OutboundLink")],1),e._v(" using the following command.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("https://github.com/red-hat-storage/SAWORF.git"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("  \n")])])])]),e._v(" "),a("li",[a("p",[e._v("From within the red-hat-storage repository, navigate to the folder SAWORF/OCS3/MongoDB/blog2.")])]),e._v(" "),a("li",[a("p",[e._v("Update the "),a("em",[e._v("create_and_load.sh")]),e._v(" script with "),a("strong",[e._v("glusterfs")]),e._v(" in place of "),a("strong",[e._v("local-sc")]),e._v(" content. Example is shown as follows.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("mongodb_ip")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("$(")]),e._v("oc get svc -n "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${PROJECT_NAME}")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" -v **glusterfs** "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" mongodb "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("awk")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'{print "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$3")]),e._v("}'")]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Create MongoDB and YCSB pods and load the sample data.")]),e._v(" "),a("p",[e._v("Update the following command with appropriate values for the command line parameters and execute the command to create the MongoDB and YCSB pods and also to load the sample data.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("./create_and_load_mongodb "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$PROJECT_NAME")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$OCP_TEMPLATE")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$MONGODB_MEMORY_LIMIT")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$PV_SIZE")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$MONGODB_VERSION")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$YCSB_WORKLOAD")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$YCSB_DISTRIBUTION")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$YCSB_RECORDCOUNT")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$YCSB_OPERATIONCOUNT")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$YCSB_THREADS")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$LOG_DIR")]),e._v("\n")])])]),a("p",[e._v("Example command is shown as follows.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" ./create_and_load_mongodb dbtest mongodb-persistent 4Gi 10Gi "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3.6")]),e._v(" workloadb uniform "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4000")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4000")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("8")]),e._v(" root /mnt/data/\n")])])]),a("p",[e._v("The output should look similar to the following.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v('```\n> Deploying template "openshift/mongodb-persistent" to project dbtest\n\n    MongoDB\n\n---------\n\n> MongoDB database service, with persistent storage. For more information about using this template, including OpenShift considerations, see documentation in the upstream repository: https://github.com/sclorg/mongodb-container.\n\nNOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.\n\nThe following service(s) have been created in your project: mongodb.\n\nUsername: redhat\n\nPassword: redhat\n\nDatabase Name: redhatdb\n\nConnection URL: mongodb://redhat:redhat@mongodb/redhatdb\n\nFor more information about using this template, including OpenShift considerations, see documentation in the upstream repository: https://github.com/sclorg/mongodb-container.\n\nWith parameters:\n\n        * Memory Limit=4Gi\n\n        * Namespace=openshift\n\n        * Database Service Name=mongodb\n\n        * MongoDB Connection Username=redhat\n\n        * MongoDB Connection Password=redhat\n\n        * MongoDB Database Name=redhatdb\n\n        * MongoDB Admin Password=redhat\n\n        * Volume Capacity=10Gi\n\n        * Version of MongoDB Image=3.6\n\n> Creating resources ...\n\n    secret "mongodb" created\n\n    service "mongodb" created\n\n    error: persistentvolumeclaims "mongodb" already exists\n\n    deploymentconfig.apps.openshift.io "mongodb" created\n\n> Failed\n\npod/ycsb-pod created\n\n```\n')])])])]),e._v(" "),a("li",[a("p",[e._v("Execute the following command to run the check_db_size script.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" ./check_db_size "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$PROJECT_NAME")]),e._v("\n")])])]),a("p",[e._v("The output should look similar to the following.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v('```\n\nMongoDB shell version v3.6.12\n\nconnecting to: mongodb://172.x.x.x:27017/redhatdb?gssapiServiceName=mongodb\n\nImplicit session: session {"id" : UUID("c0a76ddc-ea0b-4fc-88fd-045d0f98b2") }\n\nMongoDB server version: 3.6.3\n\n{\n\n              "db" : "redhatdb",\n\n              "collections" : 1,\n\n              "views" : 0,\n\n              "objects" : 4000,\n\n              "avgObjSize" : 1167.877,\n\n              "dataSize" : 0.004350680857896805,\n\n              "storageSize" : 0.00446319580078125,\n\n              "numExtents" : 0,\n\n              "indexes" : 1,\n\n              "indexSize" : 0.0001068115234375,\n\n              "fsUsedSize" : 1.0311393737792969,\n\n              "fsTotalSize" : 99.951171875,\n\n              "ok" : 1\n\n}\n\n```\n')])])])])]),e._v(" "),a("h2",{attrs:{id:"verifying-mongodb-pod-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#verifying-mongodb-pod-deployment"}},[e._v("#")]),e._v(" Verifying MongoDB pod deployment")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Execute the following command to verify the persistent volume associated with MongoDB pods.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("pv")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" mongodb\n")])])]),a("p",[e._v("The output should look similar to the following.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("```\nlocal-pv-e7f10f65 100Gi RWO Delete Bound dbtest/mongodb local-sc 26h\n```\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Execute the following command to verify the persistent volume claim associated with MongoDB pods.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get pvc \n")])])]),a("p",[e._v("The output should look similar to the following.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("```\nlocal-pv-e7f10f65 100Gi RWO Delete Bound dbtest/mongodb local-sc 26h\n```\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Execute the following command to ensure MongoDB and YCSB pods are up and running.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get pod\n")])])]),a("p",[e._v("The output should look similar to the following.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\nNAME               READY   STATUS      RESTARTS   AGE\n\nmongodb-1-deploy   0/1     Completed   0          3m40s\n\nmongodb-1-skbwq    1/1     Running     0          3m36s\n\nycsb-pod           1/1     Running     0          3m41s\n\n")])])])])]),e._v(" "),a("p",[a("strong",[e._v("NOTE")])]),e._v(" "),a("p",[e._v("For more information about deploying MongoDB application along with YCSB, refer to the Red Hat documentation at "),a("a",{attrs:{href:"https://www.redhat.com/en/blog/multitenant-deployment-mongodb-using-openshift-container-storage-and-using-ycsb-test-performance",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.redhat.com/en/blog/multitenant-deployment-mongodb-using-openshift-container-storage-and-using-ycsb-test-performance"),a("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=s.exports}}]);