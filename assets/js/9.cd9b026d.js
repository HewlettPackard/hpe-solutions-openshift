(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{252:function(e,t,s){e.exports=s.p+"assets/img/figure9.4dd71c02.png"},275:function(e,t,s){"use strict";s.r(t);var a=s(28),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"red-hat-openshift-container-platform-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#red-hat-openshift-container-platform-deployment"}},[e._v("#")]),e._v(" Red Hat OpenShift Container Platform deployment")]),e._v(" "),a("p",[e._v("This section describes the process to deploy Red Hat OpenShift Container Platform 4.")]),e._v(" "),a("h2",{attrs:{id:"deploying-an-openshift-cluster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploying-an-openshift-cluster"}},[e._v("#")]),e._v(" Deploying an OpenShift Cluster")]),e._v(" "),a("p",[e._v("This section covers the steps to deploy a Red Hat OpenShift Container Platform 4 cluster with master nodes and worker nodes running RHCOS. After the operating system is installed on the nodes, verify the installation and then perform the following steps:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Login to the installer VM.")])]),e._v(" "),a("li",[a("p",[e._v("Execute the following command to bootstrap the nodes.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /etc/ansible/hpe-solutions-openshift/synergy/scalable/installer/library/openshift_components/openshift-install wait-for bootstrap-complete --log-level"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("debug\n")])])]),a("p",[a("strong",[e._v("RESULT")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("DEBUG OpenShift Installer v4.3\n\nDEBUG Built from commit 425e4ff0037487e32571258640b39f56d5ee5572\n\nINFO Waiting up to 30m0s for the Kubernetes API at https://api.ocp.pxelocal.local:6443...\n\nINFO API v1.14.6+76aeb0c up\n\nINFO Waiting up to 30m0s for bootstrapping to complete...\n\nDEBUG Bootstrap status: complete\n\nINFO It is now safe to remove the bootstrap resources\n")])])]),a("p",[a("strong",[e._v("NOTE")])]),e._v(" "),a("p",[e._v("You can shut down or remove the bootstrap node after the completion of step 1 and step 2.")])]),e._v(" "),a("li",[a("p",[e._v("Run the following command to append the kubeconfig path to environment variables.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("KUBECONFIG")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/ansible/hpe-solutions-openshift/synergy/scalable/installer/ignitions/auth/kubeconfig\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Run the following command to append the oc utility path to environment variables.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),e._v(":/etc/ansible/hpe-solutions-openshift/synergy/scalable/installer/library/openshift_components\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Provide the PV storage for the registry. Execute the following command to set the image registry storage to an empty directory.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc patch configs.imageregistry.operator.openshift.io cluster --type merge --patch "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'{"spec":{"storage":{"emptyDir":{}}}}\'')]),e._v(" \n")])])])]),e._v(" "),a("li",[a("p",[e._v("Execute the following command to complete the RedHat OpenShift Container Platform 4 cluster installation.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /etc/ansible/hpe-solutions-openshift/synergy/scalable/installer/library/openshift_components/openshift-install wait-for install-complete --log-level"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("debug\n")])])]),a("p",[e._v("The result should appear like what appears below.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("DEBUG OpenShift Installer v4.3\n\nDEBUG Built from commit 6ed04f65b0f6a1e11f10afe658465ba8195ac459 \n\nINFO Waiting up to 30m0s for the cluster at https://api.rrocp.pxelocal.local:6443 to initialize... \n\nDEBUG Still waiting for the cluster to initialize: Working towards 4.3: 99% complete \n\nDEBUG Still waiting for the cluster to initialize: Working towards 4.3: 99% complete, waiting on authentication, console, image-registry \n\nDEBUG Still waiting for the cluster to initialize: Working towards 4.3: 99% complete \n\nDEBUG Still waiting for the cluster to initialize: Working towards 4.3: 100% complete, waiting on image-registry \n\nDEBUG Still waiting for the cluster to initialize: Cluster operator image-registry is still updating \n\nDEBUG Still waiting for the cluster to initialize: Cluster operator image-registry is still updating \n\nDEBUG Cluster is initialized \n\nINFO Waiting up to 10m0s for the openshift-console route to be created... \n\nDEBUG Route found in openshift-console namespace: console \n\nDEBUG Route found in openshift-console namespace: downloads \n\nDEBUG OpenShift console route is created \n\nINFO Install complete! \n\nINFO To access the cluster as the system:admin user when using 'oc', run 'export KUBECONFIG=/root/ocp42-8/auth/kubeconfig' \n\nINFO Access the OpenShift web-console here: https://console-openshift-console.apps.ocp.pxelocal.local \n\nINFO Login to the console with user: kubeadmin, password: a6hKv-okLUA-Q9p3q-UXLc3 \n")])])]),a("p",[a("strong",[e._v("NOTE")])]),e._v(" "),a("p",[e._v("Make a note of the cluster URL and the username for future access.")]),e._v(" "),a("p",[e._v("If the password is lost or forgotten, view the file kubeadmin-password located in the installer machine at "),a("em",[e._v("/etc/ansible/hpe-solutions-openshift/synergy/scalable/installer/library/ignitions/auth/.")])])])]),e._v(" "),a("p",[a("strong",[e._v("Figure 9")]),e._v(" shows the OpenShift Container Platform console view upon successful deployment.")]),e._v(" "),a("p",[a("img",{attrs:{src:s(252),alt:"OpenShift Web Console login screen"}})]),e._v(" "),a("p",[a("strong",[e._v("Figure 9.")]),e._v(" OpenShift Web Console login screen")]),e._v(" "),a("h2",{attrs:{id:"adding-red-hat-coreos-worker-nodes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adding-red-hat-coreos-worker-nodes"}},[e._v("#")]),e._v(" Adding Red Hat CoreOS worker nodes")]),e._v(" "),a("p",[e._v("This section covers the steps to add RHCOS worker nodes to an existing OpenShift Container Platform 4 cluster.")]),e._v(" "),a("h3",{attrs:{id:"prerequisites"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("A Red Hat OpenShift Container Platform 4 cluster is available within the deployment environment.")])]),e._v(" "),a("li",[a("p",[e._v("A worker node ignition file is generated along with the bootstrap and master ignition files. Refer to the section "),a("RouterLink",{attrs:{to:"/Preparing the execution environment/Preparing the execution environment.html#kubernetes-manifests-and-ignition-files"}},[e._v("Kubernetes manifests and ignition files")]),e._v(" in this document for details on generating manifest and ignition files.")],1),e._v(" "),a("p",[a("strong",[e._v("NOTE")])]),e._v(" "),a("p",[e._v("It is important to use the "),a("em",[e._v("worker.ign")]),e._v(" ignition file generated along with the "),a("em",[e._v("master.ign")]),e._v(" file used to create the OpenShift cluster. If this is not the case, then “certificate signing requests” in OpenShift will not recognize these worker nodes.")])]),e._v(" "),a("li",[a("p",[e._v("A working node is available that needs to be attached to the existing OpenShift cluster and used as the worker node.")])])]),e._v(" "),a("h3",{attrs:{id:"procedure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#procedure"}},[e._v("#")]),e._v(" Procedure")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Login to the installer VM.")])]),e._v(" "),a("li",[a("p",[e._v("Execute the following command to get the nodes associated with the OpenShift cluster.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("KUBECONFIG")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/ansible/hpe-solutions-openshift/synergy/scalable/installer/ignitions/auth/kubeconfig \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),e._v(":/etc/ansible/hpe-solutions-openshift/synergy/scalable/installer/library/openshift_components\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get nodes\n")])])]),a("p",[e._v("The output is as follows.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("NAME STATUS ROLES AGE VERSION\n\nmaster1.ocp.twentynet.local Ready master,worker 5d v1.14.6+888f9c630\n\nmaster2.ocp.twentynet.local Ready master,worker 5d v1.14.6+888f9c630\n\nmaster3.ocp.twentynet.local Ready master,worker 5d v1.14.6+888f9c630\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Since the worker node is booted with the existing worker ignition file, the node is recognized by the current OpenShift cluster. However, the certificate signing request is pending. Execute the following command to get the certificate signing requests.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get csr\n")])])]),a("p",[e._v("The output is as follows.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("NAME AGE REQUESTOR CONDITION\n\ncsr-8pj6k 28m system:node:worker1.ocp.twentynet.local Pending\n\ncsr-9pj7c 28m system:node:worker2.ocp.twentynet.local Pending\n\ncsr-9pj1s 28m system:node:worker3.ocp.twentynet.local Pending\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Execute the following command to approve all of the pending certificate signing requests and to add the worker nodes to the cluster.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get csr "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("awk")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'{print "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$1")]),e._v("}'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("while")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("read")]),e._v(" line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v(" ./oc adm certificate approve "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$line")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("done")]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Verify that the certificate signing requests for the worker nodes are approved using the following command.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get csr\n")])])]),a("p",[e._v("The output is as follows.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("NAME AGE REQUESTOR CONDITION\n\ncsr-8pj6k 28m system:node:worker1.ocp.twentynet.local Approved,Issued\n\ncsr-9pj7c 28m system:node:worker2.ocp.twentynet.local Approved,Issued\n\ncsr-9pj1s 28m system:node:worker3.ocp.twentynet.local Approved,Issued\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Verify that the worker nodes are added to the cluster using the following command.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get nodes\n")])])]),a("p",[e._v("The output is as follows.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("NAME STATUS ROLES AGE VERSION\n\nmaster1.ocp.twentynet.local Ready master,worker 5d v1.14.6+888f9c630\n\nmaster2.ocp.twentynet.local Ready master,worker 5d v1.14.6+888f9c630\n\nmaster3.ocp.twentynet.local Ready master,worker 5d v1.14.6+888f9c630\n\nworker1.ocp.twentynet.local Ready worker 5d v1.14.6+888f9c630\n\nworker2.ocp.twentynet.local Ready worker 5d v1.14.6+888f9c630\n\nworker3.ocp.twentynet.local Ready worker 5d v1.14.6+888f9c630\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Execute the following command to set the parameter "),a("em",[e._v("mastersSchedulable")]),e._v(" parameter as "),a("em",[e._v("false")]),e._v(", so that master nodes will not be used to schedule pods.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc edit scheduler\n")])])]),a("p",[e._v("The output is as follows.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('apiVersion: config.openshift.io/v1 \n\nkind: Scheduler \n\nmetadata: \n\n  creationTimestamp: "2019-12-13T10:34:48Z" \n\n  generation: 2 \n\n  name: cluster \n\n  resourceVersion: "1748652" \n\n  selfLink: /apis/config.openshift.io/v1/schedulers/cluster \n\n  uid: 30245db9-1d94-11ea-8066-000c29c3ee8e \n\nspec: \n\n  **mastersSchedulable: false **\n\n  policy: \n\n    name: "" \n\nstatus: {} \n')])])])]),e._v(" "),a("li",[a("p",[e._v("Execute the following command to verify the master roles have been reset.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get nodes\n")])])]),a("p",[e._v("The output is as follows.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("NAME STATUS ROLES AGE VERSION\n\nmaster1.ocp.twentynet.local Ready master 5d v1.14.6+888f9c630\n\nmaster2.ocp.twentynet.local Ready master 5d v1.14.6+888f9c630\n\nmaster3.ocp.twentynet.local Ready master 5d v1.14.6+888f9c630\n\nworker1.ocp.twentynet.local Ready worker 5d v1.14.6+888f9c630\n\nworker2.ocp.twentynet.local Ready worker 5d v1.14.6+888f9c630\n\nworker3.ocp.twentynet.local Ready worker 5d v1.14.6+888f9c630\n")])])])])]),e._v(" "),a("h2",{attrs:{id:"adding-rhel-7-6-worker-nodes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adding-rhel-7-6-worker-nodes"}},[e._v("#")]),e._v(" Adding RHEL 7.6 worker nodes")]),e._v(" "),a("p",[e._v("This section covers the steps to add RHEL 7.6 worker nodes to an existing Red Hat OpenShift Container Platform 4 cluster.")]),e._v(" "),a("h3",{attrs:{id:"prerequisites-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites-2"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Ensure the required packages are installed and any necessary configuration is performed on the installer VM. Refer to the section "),a("RouterLink",{attrs:{to:"/Preparing the execution environment/Preparing the execution environment.html#installer-machine"}},[e._v("Installer machine")]),e._v(" of this document for details on the prerequisites and configuration steps.")],1)]),e._v(" "),a("li",[a("p",[e._v("RHEL nodes are prepared for installation. Refer to the section "),a("RouterLink",{attrs:{to:"/Physical node configuration/Physical node configuration.html#preparing-worker-nodes-with-rhel"}},[e._v("Preparing worker nodes with RHEL")]),e._v(" of this document for details on preparing the RHEL 7.6 worker nodes.")],1)])]),e._v(" "),a("h3",{attrs:{id:"procedure-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#procedure-2"}},[e._v("#")]),e._v(" Procedure")]),e._v(" "),a("p",[e._v("Perform the following steps on the installer VM:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Download the Red Hat OpenShift Container Platform 4 Ansible package to enable the addition of RHEL 7.6 worker nodes to an existing OpenShift cluster.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" openshift-ansible openshift-clients jq\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Create an Ansible inventory file exclusively for adding RHEL worker nodes that is named "),a("em",[e._v("<path>/inventory/hosts")]),e._v(" that defines your compute machine nodes and required variables as listed.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("all:vars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Username that runs the Ansible tasks on the remote compute machines")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# ansible_user=root")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# If you do not specify root for the ansible_user,")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# you must set ansible_become to True and assign the user sudo permissions.")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ansible_become")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("True\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Path to the kubeconfig file for your cluster")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("openshift_kubeconfig_path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"~/.kube/config"')]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# FQDN of each RHEL machine to add to the cluster")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("new_workers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n\nworker-0.example.com\n\nworker-1.example.com\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Execute the following commands to run the playbook which adds RHEL 7.6 worker nodes to the existing cluster.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" /usr/share/ansible/openshift-ansible\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" ansible-playbook -i "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v("lt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("path to inventory hosts "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v("gt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" playbooks/scaleup.yml\n")])])])])]),e._v(" "),a("h3",{attrs:{id:"approving-the-certificate-signing-requests-for-your-machines"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#approving-the-certificate-signing-requests-for-your-machines"}},[e._v("#")]),e._v(" Approving the certificate signing requests for your machines")]),e._v(" "),a("p",[e._v("When new machines are added to the cluster, pending certificate signing requests (CSRs) are generated for each machine that is added. Confirm these CSRs are approved. You can also approve the CSR if necessary.")]),e._v(" "),a("h4",{attrs:{id:"prerequisites-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites-3"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),a("ul",[a("li",[e._v("jq package is installed.")])]),e._v(" "),a("h3",{attrs:{id:"procedure-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#procedure-3"}},[e._v("#")]),e._v(" Procedure")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Confirm that the cluster recognizes the machines by executing the following command. The output lists all of the machines that have been created.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get nodes\n\nNAME STATUS ROLES AGE VERSION\n\nmaster-0 Ready master 63m v1.14.6+c4799753c\n\nmaster-1 Ready master 63m v1.14.6+c4799753c\n\nmaster-2 Ready master 64m v1.14.6+c4799753c\n\nworker-0 NotReady worker 76s v1.14.6+c4799753c\n\nworker-1 NotReady worker 70s v1.14.6+c4799753c\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Review the pending CSRs and ensure that there is a client and server request with Pending or Approved status for each machine added to the cluster.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get csr\n\nNAME AGE REQUESTOR CONDITION\n\ncsr-8b2br 15m system:serviceaccount:openshift-machine-config-operator:node-bootstrapper Pending\n\ncsr-8vnps 15m system:serviceaccount:openshift-machine-config-operator:node-bootstrapper Pending\n\ncsr-bfd72 5m26s system:node:ip-10-0-50-126.us-east-2.compute.internal Pending\n\ncsr-c57lv 5m26s system:node:ip-10-0-95-157.us-east-2.compute.internal Pending\n")])])]),a("p",[e._v("Since the CSRs rotate automatically, it is important to approve the CSRs within an hour of adding the machines to the cluster. If the CSRs are not approved within an hour, the certificates will rotate, and more than two certificates will be present for each node. All certificates must be approved. After the initial CSRs are approved, the subsequent node client CSRs are automatically approved by the cluster kube-controller-manager.")]),e._v(" "),a("p",[e._v("To approve CSRs individually, run the following command for each valid CSR. In this example, <csr_name> is the name of a CSR from the list of current CSRs.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc adm certificate approve "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v("lt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("csr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v("gt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("If all CSRs are valid, approve all of them by running the following command.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get csr -ojson "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" jq -r "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'.items\\[\\] | select(.status == {} ) | .metadata.name'")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("xargs")]),e._v(" oc adm certificate approve\n")])])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);