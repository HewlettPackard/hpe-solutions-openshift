###
## Copyright (2018) Hewlett Packard Enterprise Development LP
##
## Licensed under the Apache License, Version 2.0 (the "License");
## You may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##Â http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
####


---
- name: Make directory for the images in RHVM
  file:
    path: /var/images
    state: directory
    mode: 0755

- name: Download the qcow image
  hosts: rhvm
  get_url:
    url: "{{ qcow_url }}"
    dest: "{{ image_path }}"
    force: "{{ not image_cache_download }}"
  register: downloaded
  tags:
    - ovirt-template-image

- name: Check file type
  command: "/usr/bin/file {{ image_path | quote }}"
  changed_when: false
  register: filetype
  msg: "{{ filetype }}"
  tags:
   - ovirt-template-image

- name: Fail if image is not qcow
  fail:
    msg: "The downloaded file is not valid QCOW file."
  when: '"QCOW" not in filetype.stdout'
  tags:
    - ovirt-template-image

- name: Calculate image size in GiB
  set_fact:
    qcow2_size: "{{ filetype.stdout_lines[0].split()[5] | int // 2**30 }}GiB"

- block:
  - name: Login to oVirt
    ovirt_auth:
      url: "{{ engine_url | default(omit) }}"
      username: "{{ vault_engine_user | default(omit) }}"
      password: "{{ vault_engine_password | default(omit) }}"
      ca_file: "{{ engine_cafile | default(omit) }}"
      insecure: "{{ engine_insecure | default(true) }}"
#    when: ovirt_auth is undefined
#    register: loggedin
#    tags:
#      - always
  - name: Fetch storages
    ovirt_storage_domains_facts:
      auth: "{{ ovirt_auth }}"
    when: template_disk_storage is undefined
    tags:
      - ovirt-template-image

  - name: Find data domain
    set_fact:
      disk_storage_domain: "{{ ovirt_storage_domains|json_query(the_query)|list|first}}"
    when: template_disk_storage is undefined
    vars:
      the_query: "[?type=='data']"
    tags:
      - ovirt-template-image

  - name: Check if template already exists
    ovirt_templates_facts:
      auth: "{{ ovirt_auth }}"
      pattern: "name={{ template_name }}"
    tags:
      - ovirt-template-image

  - name: Deploy the qcow image to oVirt engine
    ovirt_disk:
      auth: "{{ ovirt_auth }}"
      name: "{{ template_disk_name | default(template_name) }}"
      size: "{{ qcow2_size }}"
      format: "{{ template_disk_format | default(omit) }}"
      image_path: "{{ image_path }}"
      storage_domain: "{{ template_disk_storage | default(disk_storage_domain.name) }}"
      force: "{{ ovirt_templates | length == 0 }}"
    register: ovirt_disk
    when: ovirt_templates | length == 0
    tags:
      - ovirt-template-image

  - name: Create vm
    ovirt_vms:
      auth: "{{ ovirt_auth }}"
      name: "{{ vm_name }}"
      state: stopped
      cluster: "{{ cluster }}"
      memory: "{{ template_memory | default(omit) }}"
      memory_guaranteed: "{{ template_memory_guaranteed | default(omit) }}"
      memory_max: "{{ template_memory_max | default(omit) }}"
      cpu_cores: "{{ template_cpu }}"
      operating_system: "{{ template_operating_system }}"
      type: "{{ template_type | default(omit) }}"
      disks:
        - id: "{{ ovirt_disk.id }}"
          bootable: true
          interface: "{{ template_disk_interface }}"
      nics: "{{ template_nics }}"
    when: ovirt_templates | length == 0
    tags:
      - ovirt-template-image

  - block:
    - name: Resize disk if smaller than template_disk_size
      ovirt_disk:
        id: "{{ ovirt_disk.id }}"
        vm_name: "{{ vm_name }}"
        auth: "{{ ovirt_auth }}"
        size: "{{ template_disk_size }}"

    - name: Wait for 10 Sec before resize check
      wait_for:
        timeout: 10

    - name: Wait for resize
      ovirt_disk:
        id: "{{ ovirt_disk.id }}"
        auth: "{{ ovirt_auth }}"
      register: resized_disk
      until: resized_disk.disk.provisioned_size != ovirt_disk.disk.provisioned_size
      retries: 20
      delay: 10
    when:
      - (template_disk_size | regex_replace('GiB') | int) > (qcow2_size | regex_replace('GiB') | int)
      - ovirt_templates | length == 0


  - name: Add second disk to the VM
    ovirt_disk:
      auth: "{{ ovirt_auth }}"
      name: "{{ template_name }}_2"
      vm_name: "{{ vm_name }}"
      bootable: false
      size: "{{ template_disk_size_2 }}"
      interface: "{{ template_disk_interface }}"
      format: cow
      storage_domain: "{{ template_disk_storage | default(disk_storage_domain.name)}}"
    when: ovirt_templates | length == 0
    tags:
      - ovirt-template-image

  - name: Wait for 10 Sec before converting to template
    wait_for:
      timeout: 10

  - name: Create template
    ovirt_templates:
      auth: "{{ ovirt_auth }}"
      name: "{{ template_name }}"
      vm: "{{ vm_name }}"
      timeout: "{{ template_timeout }}"
    when: ovirt_templates | length == 0
    tags:
      - ovirt-template-image

  always:
    - name: Remove downloaded image
      file:
        path: "{{ image_path }}"
        state: absent
      when:  not image_cache_download

    - name: Remove vm
      ovirt_vms:
        auth: "{{ ovirt_auth }}"
        state: absent
        name: "{{ vm_name }}"
      when: ovirt_templates | length == 0
      tags:
        - ovirt-template-image

    - name: Logout from oVirt
      ovirt_auth:
        state: absent
        ovirt_auth: "{{ ovirt_auth }}"
      tags:
        - always



