###
## Copyright (2020) Hewlett Packard Enterprise Development LP
##
## Licensed under the Apache License, Version 2.0 (the "License");
## You may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
## http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
####
---
- name: End the tasks for validation of iLO settings.
  debug:
        msg: "End the tasks for validation of iLO settings. Reason: User has chosen not to apply iLO security settings via Server profile. In input.yml the value of varibale 'manageilo' is set to 'false'"
  when: manageBios == false
  
- block:
    - name: Gather facts about the user specified Server Profiles
      oneview_server_profile_facts:
        hostname: "{{ oneview_ip }}"
        username: "{{ oneview_username }}"
        password: "{{ oneview_password }}"
        api_version: "{{ oneview_api_version }}"
        name: "{{ server_profile_name }}" 
      delegate_to: localhost
      register: result

    - debug: var=server_profiles

    - name: Inform user server profile creation failed in last step.
      fail:
        msg: "Server profile creation has failed for the server hardware {{ server_hardware }}"
      with_indexed_items: "{{ result.ansible_facts.server_profiles }} "
      when: item.1.state == "CreateFailed"

    - name: Inform user server profile is not in normal state.
      fail:
        msg: "Server profile state is not normal for the server hardware {{ server_hardware }}"
      with_indexed_items: "{{ result.ansible_facts.server_profiles }} "
      when: item.1.state != "Normal"

    - name: Variable initialization
      set_fact:
        ilo_login=""

    - name: Login to iLO.
      redfish_info:
        baseuri: "{{ ilo_ip }}"
        username: "{{ ilo_username }}"
        password: "{{ ilo_password }}"
      delegate_to: localhost
      register: result

    - name: Verify successful login to iLO
      set_fact:
        ilo_login="Success"
      with_dict: "{{ result.redfish_facts.system.entries.0[1] }} "
      when: item.key == "SystemType" and item.value == "Physical"

    - name: Inform user if login to ilo fails
      fail:
        msg: "Not able to login to iLO with the credentials defined in Server profile."
      when: ilo_login != "Success"

    - name: Inform user if login to ilo is a success
      debug:
        msg: "Able to login to iLO with the credentials defined in Server profile."
      when: ilo_login == "Success"

    - name: Wait time in seconds
      wait_for: timeout=30
  when: manageBios == true
  always:
     - debug:
         msg: "If iLO settings validation is succesful then value of ilo_login is success. Current value of ilo_login is {{ ilo_login }}"