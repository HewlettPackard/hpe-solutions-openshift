###
## Copyright (2019) Hewlett Packard Enterprise Development LP
##
## Licensed under the Apache License, Version 2.0 (the "License");
## You may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
## http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
####
---
server_profile:
  name: "{{ server_profile_name }}"
  description: Ansible Server Profile
  type: ServerProfileV10
  serverHardwareName: "{{ server_hardware }}"
  serverHardwareTypeName: "{{ server_hardware_type }}"
  enclosureGroupName: "{{ enclosure_group }}"
  serialNumberType: Virtual
  iscsiInitiatorNameType: AutoGenerated
  macType: Virtual
  wwnType: Virtual
  affinity: Bay
  connectionSettings:
    connections:
    - id: 1
      name: Deployment Network A
      functionType: Ethernet
      portId: Auto
      requestedMbps: '2500'
      networkName: "{{ deployment_network_name }}"
      mac: 
      wwpn: ''
      wwnn: ''
      requestedVFs: Auto
      ipv4:
        ipAddress: 
      boot:
        priority: Primary
        ethernetBootType: iSCSI
        iscsi:
          initiatorNameSource: ProfileInitiatorName
          firstBootTargetIp: 
          secondBootTargetIp: ''
          secondBootTargetPort: ''
          initiatorName: 
          bootTargetName: 
          bootTargetLun: 
    - id: 2
      name: Deployment Network B
      functionType: Ethernet
      portId: Auto
      requestedMbps: '2500'
      networkName: "{{ deployment_network_name }}"
      mac: 
      wwpn: ''
      wwnn: ''
      requestedVFs: Auto
      ipv4:
        ipAddress: 
      boot:
        priority: Secondary
        ethernetBootType: iSCSI
        iscsi:
          initiatorNameSource: ProfileInitiatorName
          firstBootTargetIp: 
          secondBootTargetIp: ''
          secondBootTargetPort: ''
          initiatorName: 
          bootTargetName: 
          bootTargetLun: 
    - id: 3
      name: Management Network A
      functionType: Ethernet
      portId: Auto
      requestedMbps: '2500'
      networkName: "{{ management_network_name }}"
      lagName: 
      isolatedTrunk: false
      mac: 
      wwpn: 
      wwnn: 
      requestedVFs: '0'
      ipv4: {}
      boot:
        priority: NotBootable
        iscsi: {}
    - id: 4
      name: Management Network B
      functionType: Ethernet
      portId: Auto
      requestedMbps: '2500'
      networkName: "{{ management_network_name }}"
      lagName: 
      isolatedTrunk: false
      mac: 
      wwpn: 
      wwnn: 
      requestedVFs: '0'
      ipv4: {}
      boot:
        priority: NotBootable
        iscsi: {}
    - id: 5
      name: Datacenter Network A
      functionType: Ethernet
      portId: Auto
      requestedMbps: '2500'
      networkName: "{{ datacenter_network_name }}"
      lagName: 
      isolatedTrunk: false
      mac: 
      wwpn: 
      wwnn: 
      requestedVFs: '0'
      ipv4: {}
      boot:
        priority: NotBootable
        iscsi: {}
    - id: 6
      name: Datacenter Network B
      functionType: Ethernet
      portId: Auto
      requestedMbps: '2500'
      networkName: "{{ datacenter_network_name }}"
      lagName: 
      isolatedTrunk: false
      mac: 
      wwpn: 
      wwnn: 
      requestedVFs: '0'
      ipv4: {}
      boot:
        priority: NotBootable
        iscsi: {}
    - id: 7
      name: iSCSI A
      functionType: Ethernet
      portId: Auto
      requestedMbps: '2500'
      networkName: "{{ iSCSI_A_network_name }}"
      lagName: 
      isolatedTrunk: false
      mac: 
      wwpn: 
      wwnn: 
      requestedVFs: '0'
      ipv4: {}
      boot:
        priority: NotBootable
        iscsi: {}
    - id: 8
      name: iSCSI B
      functionType: Ethernet
      portId: Auto
      requestedMbps: '2500'
      networkName: "{{ iSCSI_B_network_name }}"
      lagName: 
      isolatedTrunk: false
      mac: 
      wwpn: 
      wwnn: 
      requestedVFs: '0'
      ipv4: {}
      boot:
        priority: NotBootable
        iscsi: {}
  boot:
    manageBoot: true
    order:
    - HardDisk
  bootMode:
    manageMode: true
    mode: UEFIOptimized
    secureBoot: Disabled
    pxeBootPolicy: Auto
  firmware:
    manageFirmware: false
    firmwareBaselineUri: ''
    forceInstallFirmware: false
    firmwareInstallType: 
    firmwareScheduleDateTime: ''
    firmwareActivationType: Immediate
  bios:
    manageBios: false
    overriddenSettings: []
  managementProcessor:
    manageMp: false
    mpSettings: []
  hideUnusedFlexNics: true
  iscsiInitiatorName: ''
  serverProfileTemplateName: "{{ server_profile_template_name }}"
  osDeploymentSettings:
    osDeploymentPlanName: "{{ deployment_plan_name }}"
    osCustomAttributes: 
    - name: DomainName
      value: "{{ domain_name }}"
      constraints: '{"helpText":""}'
      type: fqdn
    - name: Hostname
      value: "{{ vsphere_hostname }}"
      constraints: '{"helpText":""}'
      type: hostname
    - name: ManagementNIC.connectionid
      value: '3'
    - name: ManagementNIC.dns1
      value: "{{ dns_ip }}"
    - name: ManagementNIC.dns2
      value: "{{ dns_ip }}"
    - name: ManagementNIC.gateway
      value: "{{ gateway }}"
    - name: ManagementNIC.ipaddress
      value: "{{ vsphere_ip }}"
    - name: ManagementNIC.netmask
      value: "{{ subnet_mask }}"
    - name: ManagementNIC.networkuri
      value: "{{ management_network_uri }}"
    - name: ManagementNIC.constraint
      value: userspecified
    - name: ManagementNIC.vlanid
      value: '0'
    - name: ManagementNIC2.connectionid
      value: '4'
    - name: ManagementNIC2.networkuri
      value: "{{ management_network_uri }}"
    - name: ManagementNIC2.constraint
      value: userspecified
    - name: ManagementNIC2.vlanid
      value: '0'
    - name: Password
      value: 
    - name: SSH
      value: enabled
      constraints: '{"options":["enabled","disabled"]}'
      type: option
    osVolumeUri: 
    forceOsDeployment: false
  localStorage:
    sasLogicalJBODs: []
    controllers: []
  sanStorage: 
  initialScopeUris: []
