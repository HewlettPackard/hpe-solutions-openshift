###
##Copyright (2019) Hewlett Packard Enterprise Development LP
##
## Licensed under the Apache License, Version 2.0 (the "License");
## You may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
## http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
#### 

---
- name: Check if golang is already installed
  command: 'go version'
  register: goinstallcheck
  ignore_errors: True

- name: Enable the repository for installing golang
  command: 'subscription-manager repos "--enable=rhel-7-server-optional-rpms"'
  register: repoenablecheck
  when: 'goinstallcheck.rc != 0'

- name: Wait for Seconds before proceeding
  wait_for: timeout=60

- name: install the latest version of golang
  yum:
    name: golang
    state: present
  register: yumgolangcheck
  when: 'repoenablecheck.rc == 0'

- name: Wait for Seconds before proceeding
  wait_for: timeout=120

- name: Check if golang is installed
  command: 'go version'
  register: gocheck
  when: 'yumgolangcheck.rc == 0'

- name: Wait for Seconds before proceeding
  wait_for: timeout=10

- name: Install kube-bench package from github in golang
  command: 'go get github.com/aquasecurity/kube-bench'
  register: gitkubecheck
  when: 'gocheck.rc == 0'

- name: Wait for Seconds before proceeding
  wait_for: timeout=240

- name: Install golang dependencies from github
  command: 'go get github.com/golang/dep/cmd/dep'
  register: gitgocheck
  when: 'gitkubecheck.rc == 0'

- name: Wait for Seconds before proceeding
  wait_for: timeout=240

- name: This command will generate Gopkg.toml
  command: /root/go/bin/dep init
  args:
    chdir: /root/go/src/github.com/aquasecurity/kube-bench/
  register: godepinitcheck
  when: 'gitkubecheck.rc == 0'

- name: Wait for Seconds before proceeding
  wait_for: timeout=120
  
- name: This command will change the working directory and then run the go dependencies utility
  command: /root/go/bin/dep ensure -vendor-only
  args:
    chdir: /root/go/src/github.com/aquasecurity/kube-bench/
  register: godepcheck
  when: 'godepinitcheck.rc == 0'

- name: Wait for Seconds before proceeding
  wait_for: timeout=10
      
- name: Install Kube-Bench on the node under test
  command: 'go build -o kube-bench'
  args:
    chdir: /root/go/src/github.com/aquasecurity/kube-bench/
  register: buildkubebenchcheck
  when: 'godepcheck.rc == 0'

- name: Wait for Seconds before proceeding
  wait_for: timeout=10

- name: Run Kube-Bench on Master node
  shell: ./kube-bench master --version ocp-3.10 >> /root/kube-bench-"{{inventory_hostname}}"
  args:
    chdir: /root/go/src/github.com/aquasecurity/kube-bench/
  when: 'inventory_hostname in groups["masters"]|default([]) and buildkubebenchcheck.rc == 0'

- name: Wait for Seconds before proceeding
  wait_for: timeout=30

- name: Run Kube-Bench on Worker node
  shell: ./kube-bench node --version ocp-3.10 >> /root/kube-bench-"{{inventory_hostname}}"
  args:
    chdir: /root/go/src/github.com/aquasecurity/kube-bench/
  when: 'inventory_hostname in groups["workers"]|default([]) and buildkubebenchcheck.rc == 0'

- name: Wait for Seconds before proceeding
  wait_for: timeout=30

- name: Run Kube-Bench on Infra node
  shell: ./kube-bench node --version ocp-3.10 >> /root/kube-bench-"{{inventory_hostname}}"
  args:
    chdir: /root/go/src/github.com/aquasecurity/kube-bench/
  when: 'inventory_hostname in groups["infra"]|default([]) and buildkubebenchcheck.rc == 0'

- name: Wait for Seconds before proceeding
  wait_for: timeout=30

# Specifying a destination path
- fetch:
    src: /root/kube-bench-{{ inventory_hostname }}
    dest: /tmp/
    flat: yes
    fail_on_missing: yes

- name: Wait for Seconds before proceeding
  wait_for: timeout=30