###
## Copyright (2018) Hewlett Packard Enterprise Development LP
##
## Licensed under the Apache License, Version 2.0 (the "License");
## You may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##Â http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
#### 

---
#- hosts: masters
#  gather_facts: False
#  tasks: 
  - name: Connect to the default NameSpace/Project
    command: oc project default
    run_once: true

  - name: Check if Docker Registry pod is running
    shell: 'oc project default'
    shell: oc get pods |grep -E "docker-registry-*.*Running"|awk '{print $1}'
    run_once: true
    register: regpod
    ignore_errors: yes

  - name: Check if the Docker Registry pod has persistent storage
    shell: oc describe pod "{{ regpod.stdout }}" | grep -e "ClaimName"|awk '{print $2}'
    run_once: true
    register: regpv
    ignore_errors: yes
    when: regpod.stderr != 'No resources found'

  - debug:
        msg: "Docker Registry pod is running with persistent storage in namespace default"
    run_once: true
    when: regpv.stdout == 'volreg'

  - name: End Play since Registry pod is running with Persistent storage
    meta: end_play
    when: regpv.stdout == 'volreg'


  - name: Check if the Storage Class already exists
    shell: oc get sc | grep -E registry| awk '{print $1}'
    register: scregresult
    run_once: true
    ignore_errors: yes

  - name: Create Registry Storage Class
    import_tasks: sc-create-reg.yaml
    run_once: true
    when: scregresult.stdout != 'registry'

  - name: Check if the PVC already exists
    shell: oc get pvc | grep -E volreg| awk '{print $1}'
    register: pvcregresult
    run_once: true
    ignore_errors: yes

  - debug:
        msg: "PVC by name volreg already exists in namespace default, can not continue. "
    run_once: true
    when: pvcregresult.stdout == 'volreg'

  - name: End Play since PVC by name volreg already exists in namespace default
    meta: end_play
    when: pvcregresult.stdout == 'volreg'
  
  - name: Create a Persistent volume claim for Docker Registry
    import_tasks: pvc-create-reg.yaml
    run_once: true
    when: pvcregresult.stdout != 'volreg'

  - name: Check if Docker Registry pod is running
    shell: 'oc project default'
    shell: oc get pods |grep -E "docker-registry-*.*Running"|awk '{print $1}'
    run_once: true
    register: regpod
    ignore_errors: yes

  - name: Create Docker Registry pod 
    shell: oc adm registry
    run_once: true
    when: regpod.stdout == ""
    ignore_errors: yes

  - name: Wait for Seconds before proceeding
    wait_for: timeout=30
    when: regpod.stdout == ""

  - name: Check if the Docker Registry pod has started 
    shell: 'oc project default'
    shell: oc get pods |grep -E "docker-registry-*.*Running"|awk '{print $1}'
    run_once: true
    register: regpodnew
    ignore_errors: yes

  - name: Use existing PVC to mount persistent storage on Docker Registry pod
    shell: oc volume deploymentconfigs/docker-registry --add --name=registry-storage -t pvc --claim-name=volreg --overwrite
    run_once: true
    ignore_errors: yes
    when: regpodnew.stdout != ""

  - name: Wait for Seconds before proceeding
    wait_for: timeout=60
    when: regpv.stdout == ""

  - name: Check if Docker Registry pod is running 
    shell: oc get pods |grep -E "docker-registry-*.*Running" |awk '{print $1}'
    register: podresult
    run_once: true
    ignore_errors: yes

  - name: Check if the docker Registery is running with Persistent Storage
    shell: oc describe pod "{{ podresult.stdout }}" | grep -e "ClaimName"|awk '{print $2}'
    register: claimresult
    run_once: true
    ignore_errors: yes
  
  - name: Check if the docker Registry is running
    shell: oc describe pod "{{ podresult.stdout }}" | grep -e "State"|awk '{print $2}'
    register: runresult
    run_once: true
    ignore_errors: yes
    
  - debug:
       msg: "Successfully deployed Docker Registry with Persistent Storage, Registry pod name is {{ podresult.stdout }}"
    when: 
     - claimresult.stdout == "volreg" and runresult.stdout == "Running"
    run_once: true
       
  - debug:
       msg: "Failed to create Docker Registry with Persistent Storage"
    when: 
     - claimresult.stdout != "volreg" and runresult.stdout != "Running"
    run_once: true
