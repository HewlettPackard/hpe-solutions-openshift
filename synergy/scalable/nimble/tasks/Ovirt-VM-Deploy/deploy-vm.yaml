###
## Copyright (2018) Hewlett Packard Enterprise Development LP
##
## Licensed under the Apache License, Version 2.0 (the "License");
## You may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##Â http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
#### 

---
- name: Deploy Master and Worker VMs on RHVM
  hosts: rhvm
  gather_facts: false

  vars_files: 
    - vars-vm.yaml

  pre_tasks:
  - name: Log in
    ovirt_auth:
      url: "{{ engine_url }}"
      username: "{{ username }}"
      password: "{{ password }}"
      ca_file: "{{ engine_cafile }}"
    tags:
      - always

  tasks:
  - name: ensure Datacenter "{{ datacenter }}" is existing
    ovirt_datacenter:
      auth: "{{ ovirt_auth }}"
      name: "{{ datacenter }}"
      comment: "Our primary DC"
      compatibility_version: 4.2
      quota_mode: disabled
      local: False

  - name: Ensure Cluster "{{ cluster }}" is existing
    ovirt_cluster:
      auth: "{{ ovirt_auth }}"
      name: "{{ cluster }}"
      data_center: "{{ datacenter }}"
      description: "Default Cluster 1"
      cpu_type: "Intel Haswell-noTSX Family"
      switch_type: legacy
      compatibility_version: 4.2
      gluster: false
      ballooning: false
      ha_reservation: true
      memory_policy: server
      rng_sources:
        - random

  - name: Ensure logical network exists
    ovirt_networks:
      auth: "{{ ovirt_auth }}"
      data_center: "{{ datacenter }}"
      name: "{{network}}"
      clusters:
        - name: "{{ cluster }}"
          assigned: True
          required: False
   
  - name: Create Ovirt VM for Infra and Master nodes
    ovirt_vms:
      auth: "{{ ovirt_auth }}"
      name: "{{ item.key }}"
      template: "{{ vmtemplate }}"
      type: server
      cluster: "{{ cluster }}"
      memory: "{{ item.value.mem }}"
      memory_guaranteed: "{{ item.value.mem }}"
      operating_system: rhel_7x64
      state: running
      cloud_init_nics:
        - nic_name: eth0
          nic_boot_protocol: static
          nic_ip_address: "{{ item.value.ip }}"
          nic_netmask: "{{ item.value.mask }}"
          nic_gateway: "{{ item.value.gateway }}"
          nic_on_boot: true
        - nic_name: eth1
          nic_boot_protocol: static
          nic_ip_address: "{{ item.value.ip2 }}"
          nic_netmask: "{{ item.value.mask2 }}"
          nic_on_boot: true
        - nic_name: eth2
          nic_boot_protocol: static
          nic_ip_address: "{{ item.value.ip3 }}"
          nic_netmask: "{{ item.value.mask3 }}"
          nic_on_boot: true
      cloud_init:
        dns_servers: "{{item.value.nameserver}}"
        dns_search: "{{item.value.domainsearch}}"
        nic_on_boot: true
        host_name: "{{ item.key }}"
        user_name: root
        root_password: "{{ ansible_ssh_pass }}"
        custom_script: |
           write_files:
           - content: |
                network: {config: disabled}
             path: /etc/cloud/cloud.cfg.d/10_miq_cloud.cfg 
             content: |
                sed -i '/nameserver 192.168.122.1/d' /etc/resolv.conf
             path: /tmp/resol.sh
             permissions: '0755'
           runcmd:
             - /tmp/resol.sh      
    with_dict: "{{ vms_3nics  }}"
    
  - name: Create Ovirt VM for etcd node
    ovirt_vms:
      auth: "{{ ovirt_auth }}"
      name: "{{ item.key }}"
      template: "{{ vmtemplate }}"
      type: server
      cluster: "{{ cluster }}"
      memory: "{{ item.value.mem }}"
      memory_guaranteed: "{{ item.value.mem }}"
      operating_system: rhel_7x64
      state: running
      cloud_init:
        nic_name: eth0
        nic_boot_protocol: static
        nic_ip_address: "{{ item.value.ip }}"
        nic_netmask: "{{ item.value.mask }}"
        nic_gateway: "{{ item.value.gateway }}"
        nic_on_boot: true
        dns_servers: "{{item.value.nameserver}}"
        dns_search: "{{item.value.domainsearch}}"
        nic_on_boot: true
        host_name: "{{ item.key }}"
        user_name: root
        root_password: "{{ ansible_ssh_pass }}"
        custom_script: |
           write_files:
           - content: |
                network: {config: disabled}
             path: /etc/cloud/cloud.cfg.d/10_miq_cloud.cfg
             content: |
                sed -i '/nameserver 192.168.122.1/d' /etc/resolv.conf
             path: /tmp/resol.sh
             permissions: '0755'
           runcmd:
             - /tmp/resol.sh
    with_dict: "{{ vms_1nics  }}"
     
  - name: Create Ovirt VM for HA-Proxy nodes
    ovirt_vms:
      auth: "{{ ovirt_auth }}"
      name: "{{ item.key }}"
      template: "{{ vmtemplate }}"
      type: server
      cluster: "{{ cluster }}"
      memory: "{{ item.value.mem }}"
      memory_guaranteed: "{{ item.value.mem }}"
      operating_system: rhel_7x64
      state: running
      cloud_init_nics:
        - nic_name: eth0
          nic_boot_protocol: static
          nic_ip_address: "{{ item.value.ip }}"
          nic_netmask: "{{ item.value.mask }}"
          nic_gateway: "{{ item.value.gateway }}"
          nic_on_boot: true
        - nic_name: eth3
          nic_boot_protocol: static
          nic_ip_address: "{{ item.value.ip2 }}"
          nic_netmask: "{{ item.value.mask2 }}"
          nic_gateway: "{{ item.value.gateway2 }}"
          nic_on_boot: true
      cloud_init:
        dns_servers: "{{item.value.nameserver}}"
        dns_search: "{{item.value.domainsearch}}"
        nic_on_boot: true
        host_name: "{{ item.key }}"
        user_name: root
        root_password: "{{ ansible_ssh_pass }}"
        custom_script: |
           write_files:
           - content: |
                network: {config: disabled}
             path: /etc/cloud/cloud.cfg.d/10_miq_cloud.cfg
             content: |
                sed -i '/nameserver 192.168.122.1/d' /etc/resolv.conf
             path: /tmp/resol.sh
             permissions: '0755'
           runcmd:
             - /tmp/resol.sh
    with_dict: "{{ vms_2nics  }}"

  post_tasks: 
  - name: Logout from oVirt
    ovirt_auth:
      state: absent
      ovirt_auth: "{{ ovirt_auth }}"
    tags:
      - always
