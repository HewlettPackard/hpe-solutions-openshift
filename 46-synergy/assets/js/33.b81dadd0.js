(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{543:function(t,e,s){"use strict";s.r(e);var a=s(42),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"operating-system-deployment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#operating-system-deployment"}},[t._v("#")]),t._v(" Operating system deployment")]),t._v(" "),s("p",[t._v("This section includes,")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Deploying ESXI on multiple machines in an automated fashion")])]),t._v(" "),s("li",[s("p",[t._v("Deploying Red Hat CoreOS using iPXE server")])]),t._v(" "),s("li",[s("p",[t._v("Deploying RHEL using PXE server")])])]),t._v(" "),s("p",[t._v("What is PXE boot?")]),t._v(" "),s("p",[t._v("Preboot Execution Environment (PXE) is a client-server interface that\nallows computers in a network to be booted from the server before\ndeploying the obtained OS image in local and remote offices, for PXE\nenabled clients. PXE network boot is performed using client-server\nprotocols like DHCP (Dynamic Host Configuration Protocol) and TFTP\n(Trivial File Transfer Protocol).")]),t._v(" "),s("h2",{attrs:{id:"esxi-deployment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#esxi-deployment"}},[t._v("#")]),t._v(" ESXi deployment")]),t._v(" "),s("p",[t._v("This section outlines the steps to programmatically deploy ESXi on all\nthe bare-metal nodes.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("PREREQUISITES")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("ESXi ISO image is present in the HTTP file path within the installer\nmachine.")])]),t._v(" "),s("li",[s("p",[t._v("iLO account with administrative privileges required on servers for\nconfiguring ESXi via automation.")])])])]),t._v(" "),s("h3",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Enable Python 3 and Ansible environment as mentioned in "),s("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#installer-machine"}},[t._v("installer\nmachine")]),t._v(" section of deployment guide.")],1)]),t._v(" "),s("li",[s("p",[t._v("Execute the following command on the installer VM to point to the\nESXi deployment directory.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$BASE_DIR")]),t._v("/os_deployment/deploy_esxi\n")])])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("BASE_DIR is defined in "),s("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#installer-machine"}},[t._v("installer machine")]),t._v(" section in deployment guide.")],1)]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("Installing requirements")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" setup.sh \n")])])])]),t._v(" "),s("li",[s("p",[t._v("Update the input_files/config.yml file with web server details for\nESXi installation.")])]),t._v(" "),s("li",[s("p",[t._v("Use the following command to edit input files/config.yml file.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ansible-vault edit input_files/config.yml\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Example values for the input configuration is as follows:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("config:\n  HTTP_server_base_url: http://10.0.x.x/\n  HTTP_file_path: /usr/share/nginx/html/\n  OS_type: esxi67\n  OS_image_name: <ISO_image_name>.iso\n  base_kickstart_filepath: kickstart_files/ks_esxi67.cfg\n")])])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("The default password for the Ansible vault file is "),s("code",[t._v("changeme")]),t._v(".")]),t._v(" "),s("p",[t._v('Acceptable values for "OS_type" variable is "esxi67" for ESXi 6.7.')])]),t._v(" "),s("ol",{attrs:{start:"7"}},[s("li",[s("p",[t._v("Update the input_files/server_details.yml file with server details\nfor ESXi installation.")])]),t._v(" "),s("li",[s("p",[t._v("Use the following command to edit input files/server_details.yml\nfile.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ansible-vault edit input_files/server_details.yml\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Example values for the input configuration for deploying ESXi 6.7 is\nas follows:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("servers:\n- Server_serial_number: MXxxxxxDP\n    ILO_Address: 10.0.x.x\n    ILO_Username: username\n    ILO_Password: password\n    Hostname: vsphere01.twentynet.local\n    Host_IP: 20.x.x.x\n    Host_Username: root\n    Host_Password: Password\n    Host_Netmask: 255.x.x.x\n    Host_Gateway: 20.x.x.x\n    Host_DNS: 20.x.x.x\n- Server_serial_number: MXxxxxxDQ\n    ILO_Address: 10.0.x.x\n    ILO_Username: username\n    ILO_Password: password\n    Hostname: vsphere02.twentynet.local\n    Host_IP: 20.0.x.x\n    Host_Username: root\n    Host_Password: Password\n    Host_Netmask: 255.x.x.x\n    Host_Gateway: 20.x.x.x\n    Host_DNS: 20.x.x.x\n")])])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("The default password for the Ansible vault file is "),s("code",[t._v("changeme")]),t._v(".")]),t._v(" "),s("p",[t._v('It is recommended to provide a complex password for the\n"Host_Password" variable.')]),t._v(" "),s("p",[t._v("Provide administrative privileged iLO account username and password.")])]),t._v(" "),s("ol",{attrs:{start:"10"}},[s("li",[t._v("Run playbook to deploy ESXi."),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ansible-playbook deploy.yml --ask-vault-pass\n")])])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("In the process of ESXi deployment, ISO image contents will be forcefully\nmoved to "),s("code",[t._v("BASE_DIR/os_deployment/deploy_esxi/files")]),t._v(" folder and it needs\nto be deleted in case of space issues.")]),t._v(" "),s("p",[s("code",[t._v("BASE_DIR")]),t._v(" is defined in "),s("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#installer-machine"}},[t._v("installer machine")]),t._v(" section\nin deployment guide.")],1)]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("Generic settings done as part of kickstart file for ESXi are as follows.\nIt is recommended that the user reviews and modifies the kickstart file\n(kickstart_files/ks_esxi67.cfg) to suit their requirements.")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Accept End User License Agreement (EULA).")])]),t._v(" "),s("li",[s("p",[t._v("clearpart --alldrives --overwritevmfs")])]),t._v(" "),s("li",[s("p",[t._v("install --firstdisk --overwritevmfs")])]),t._v(" "),s("li",[s("p",[t._v("%firstboot --interpreter=busybox")])]),t._v(" "),s("li",[s("p",[t._v("One standard switch vswitch0 is created with uplinks vmnic0 and\nvmnic1. it is assigned with the Host_IP defined in the\ninput_files/server_details.yml input file.")])]),t._v(" "),s("li",[s("p",[t._v("NIC teaming is performed with vmnic0 being the active uplink and\nvmnic1 being the standby uplink.")])]),t._v(" "),s("li",[s("p",[t._v("NIC failover policy is set to --failback yes --failure-detection link\n--load-balancing mac --notify-switches yes.")])])])]),t._v(" "),s("h2",{attrs:{id:"red-hat-coreos-deployment-using-ipxe-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#red-hat-coreos-deployment-using-ipxe-server"}},[t._v("#")]),t._v(" Red Hat CoreOS deployment using iPXE server")]),t._v(" "),s("p",[t._v("In this solution, an iPXE Server setup is used for Red Hat Enterprise\nLinux CoreOS (RHCOS) deployment. This section explains in detail the\nplaybooks required to configure iPXE server on an RHEL 7.6 VM to perform\nan unattended installation of Red Hat Enterprise Linux CoreOS (RHCOS)\nfor non-ESXi VMs and bare metal servers.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("PREREQUISITES")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("RHEL Ansible engine VM with Ansible 2.9.x and Python 3.6.x.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("Ansible Engine is configured as mentioned in the "),s("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#installer-machine"}},[t._v("installer machine")]),t._v(" section of this deployment guide.")],1)])]),t._v(" "),s("li",[s("p",[t._v("If the user wishes to setup the iPXE server on a separate RHEL 7.6\nVM (other than the Ansible engine VM) preferably or could be bare\nmetal server, they need to have the following minimum configuration:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("At least 200 GB disk space")])]),t._v(" "),s("li",[s("p",[t._v("Two (2) CPU cores")])]),t._v(" "),s("li",[s("p",[t._v("8 GB RAM")])]),t._v(" "),s("li",[s("p",[t._v("/var has at least 15 GB disk space allocated while partitioning")])]),t._v(" "),s("li",[s("p",[t._v("Static IP on the same network as the RHCOS server")])]),t._v(" "),s("li",[s("p",[t._v("Internet access")])])])]),t._v(" "),s("li",[s("p",[t._v("​ Disable Selinux using following steps:")]),t._v(" "),s("ul",[s("li",[t._v("Check the status of SELINUX using command /etc/selinux/config")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" getenforce\n")])])]),s("ul",[s("li",[t._v("Disable SELINUX")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" -i "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/permissive/disabled/g'")]),t._v(" /etc/selinux/config /etc/selinux/config\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v('If the current state of "selinux" is "enforcing," replace the keyword\n"permissive" in the above command with "enforcing" and then run it.')])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Reboot the RHEL machine.")])]),t._v(" "),s("li",[s("p",[t._v("Check the status of SELINUX using command /etc/selinux/config")])])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" getenforce\n")])])])])])]),t._v(" "),s("h3",{attrs:{id:"automated-installation-and-configuration-of-ipxe-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#automated-installation-and-configuration-of-ipxe-server"}},[t._v("#")]),t._v(" Automated Installation and Configuration of iPXE Server")]),t._v(" "),s("p",[t._v("Perform the steps listed below to execute the playbooks for installing\nand configuring iPXE server")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Browse to the following directory on the Ansible engine.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$BASE_DIR")]),t._v("/os_deployment/deploy_rhcos/\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("Refer to "),s("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#installer-machine"}},[t._v("installer machine")]),t._v(' section of this\ndeployment guide to know the "BASE_DIR" path.')],1)])]),t._v(" "),s("li",[s("p",[t._v("Copy Red Hat OpenShift 4.x above install files to directory,\npreferably under /tmp/ Example: /tmp/image/")])]),t._v(" "),s("li",[s("p",[t._v('Update the inventory file "hosts" with the RHEL machine IP on which\nthe user is trying to setup the iPXE server.')]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[ansible_host]\n20.x.x.x\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Update the secrets.yml file located in\nBASE_DIR/os_deployment/deploy_rhcos/secrets.yml.")])]),t._v(" "),s("li",[s("p",[t._v("Use the following command to edit secrets.yml file.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ansible-vault edit "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$BASE_DIR")]),t._v("/os_deployment/deploy_rhcos/secrets.yml\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("Refer to "),s("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#installer-machine"}},[t._v("installer machine")]),t._v(' section of this\ndeployment guide to know the "BASE_DIR" .')],1),t._v(" "),s("p",[t._v("The default password for the Ansible vault file is "),s("em",[t._v("changeme.")])])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#####################################################################")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Details of Ansible User Credentials required to set-up the iPXE")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###Common Networking")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Interface Name Example: interface_name: enp0s10f0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("interface_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <interface_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Ansible Host IP Example: ansible_engine_ip: 20.0.15.115")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ansible_engine_ip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <ansible_engine_ip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# base DNS domain, Example: base_domain: ocp42.local")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("base_domain")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <base_domain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Openshift sub domain, Example:app_domain: apps.ocp42.local")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app_domain")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <app_domain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Network router IP Example: gateway: 192.168.42.254")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gateway")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <gateway"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Network DNS server Example: dns_server: 192.168.42.252")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dns_server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <dns_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# DHCP range that is used for OCP nodes Example: dhcp_range: 192.168.42.204,192.168.42.210,24h")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dhcp_range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <dhcp_range"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Subnet Mask Example: net_mask: 255.255.240.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("net_mask")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <net_mask"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## OpenShift node network")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mac address of master node 1 Example: master1_mac: 08:00:27:36:0A:01")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("master1_mac")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <master1_mac"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# master node 1 IP address Example: master1_ip: 192.168.42.204")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("master1_ip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <master1_ip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# master node 2 mac address Example: master2_mac: 08:00:27:36:0A:02")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("master2_mac")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <master2_mac"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# master node 2 IP address Example: master2_ip: 192.168.42.205")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("master2_ip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <master2_ip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# master node 3 mac address Example: master3_mac: 08:00:27:36:0A:03")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("master3_mac")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <master3_mac"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# master node 3 IP address Example: master3_ip: 192.168.42.206")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("master3_ip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <master3_ip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# worker node 1 mac address Example: worker1_mac: 08:00:27:36:0A:04")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("worker1_mac")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <worker1_mac"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# worker node 1 IP address Example: worker1_ip: 192.168.42.207")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("worker1_ip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <worker1_ip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# worker node 2 mac address Example: worker2_mac: 08:00:27:36:0A:05")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("worker2_mac")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <worker2_mac"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# worker node 1 IP address Example: worker2_ip: 192.168.42.208")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("worker2_ip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <worker2_ip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# worker node 3 mac address Example: worker3_mac: 08:00:27:36:0A:06")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("worker3_mac")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <worker3_mac"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# worker node 3 IP address Example: worker3_ip: 192.168.42.209")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("worker3_ip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <worker3_ip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bootstrap mac address Example: bootstrap_mac: 08:00:27:36:0A:08")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bootstrap_mac")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <bootstrap_mac"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bootstrap IP address Example: bootstrap_ip: 192.168.42.210")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bootstrap_ip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <bootstrap_ip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# install media details Example: image_location: "/tmp/image/"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image_location")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <image_location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example: rhcos-4.6.1-x86_64-live-initramfs.x86_64.img")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("live_initramfs_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <live_initramfs_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example: rhcos-4.6.1-x86_64-live-kernel-x86_64")]),t._v("\nlive_kernel_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("<live_kernel_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example: rhcos-4.6.1-x86_64-live-rootfs.x86_64.img")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("live_rootfs_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <live_rootfs_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Run the following Ansible playbook to configure the iPXE server.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ansible-playbook -i hosts master.yml --ask-vault-pass\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Test the setup with MAC address by running the following command")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" http://localhost:8080/ipxe?mac"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("08:00:27:36:0A:xx\n")])])])]),t._v(" "),s("li",[s("p",[t._v('Copy the ignition files in " /var/lib/matchbox/ignition " and\nverify the status of ignition file by using MAC address of all\nnodes.')]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" http://192.168.42.200:8080/ignition?mac"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("08:00:27:36:0A:xx\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Boot the VM/Bare Metal using iPXE.")])])]),t._v(" "),s("h2",{attrs:{id:"rhel-deployment-using-pxe-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rhel-deployment-using-pxe-server"}},[t._v("#")]),t._v(" RHEL deployment using PXE Server")]),t._v(" "),s("p",[t._v("In this solution, a PXE Server is used for RHEL 7.x OS deployment and is\nconfigured on CentOS (version: CentOS Linux release 7.6.1810 (Core)).\nThe PXE server uses the FTP service for file distribution but can be\naltered to support HTTP or NFS. This section highlights the steps to\nconfigure a PXE server.")]),t._v(" "),s("h3",{attrs:{id:"procedure-for-setting-up-pxe-server-and-deploying-rhel-os"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#procedure-for-setting-up-pxe-server-and-deploying-rhel-os"}},[t._v("#")]),t._v(" Procedure for setting up PXE server and deploying RHEL OS")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Login to the CentOS server to be configured as a PXE server as a\nuser that can run commands as root via sudo.")])]),t._v(" "),s("li",[s("p",[t._v("Install packages such as DHCP, TFTP-server, vSFTPD (FTP server), and\nxinetd using the following command.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" dhcp tftp tftp-server syslinux vsftpd xinetd\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Update the DHCP configuration file at "),s("em",[t._v("/etc/dhcp/dhcpd.conf")]),t._v(" with\nthe MAC addresses, IP addresses, DNS, and routing details of the\ninstallation environment. Domain search is optional. A sample DHCP\nconfiguration file is shown as follows.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('ddns-update-style interim;\nignore client-updates;\nauthoritative;\nallow booting;\nallow bootp;\n\n# internal subnet for my DHCP Server\nsubnet 20.0.x.x netmask 255.0.0.0 {\nrange 20.0.x.x 20.0.x.x;\ndeny unknown-clients;\noption domain-name-servers 20.x.x.x;\noption domain-name "twentynet.local";\noption routers 20.x.x.x;\noption broadcast-address 20.255.255.255;\ndefault-lease-time 600;\nmax-lease-time 7200;\nnext-server 20.x.x.x;\nfilename "pxelinux.0";\n}\n\n#######################################\nhost bootstrap {\nhardware ethernet 00:50:56:xx:98:df;\nfixed-address 20.0.x.x;\n}\nhost master01 {\nhardware ethernet 00:50:56:95:xx:82;\nfixed-address 20.0.x.x;\n}\nhost worker01 {\nhardware ethernet 00:50:56:xx:ab:82;\nfixed-address 20.0.x.x;\n}\n')])])])]),t._v(" "),s("li",[s("p",[t._v("Trivial File Transfer Protocol (TFTP) is used to transfer files from\ndata server to clients without any kind of authentication. TFTP is\nused for ignition file loading in PXE-based environment. To\nconfigure the TFTP server, edit the configuration file\n"),s("em",[t._v("/etc/xinetd.d/tftp")]),t._v(". Change the parameter 'disable = yes' to\n'disable = no' and leave the other parameters as is. To edit the\n"),s("em",[t._v("/etc/xinetd.d/tftp")]),t._v(" file, execute the following command.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v("  /etc/xinetd.d/tftp\n")])])]),s("p",[t._v("The TFTP configuration file is shown below.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("service tftp\n    {\n\n        socket_type = dgram\n        protocol = udp\n        wait = yes\n        user = root\n        server = /usr/sbin/in.tftpd\n        server_args = -s /var/lib/tftpboot\n        disable = no\n        per_source = 11\n        cps = 100 2\n        flags = IPv4\n    }\n")])])]),s("p",[t._v("Network boot related files must be placed in the tftp root directory\n"),s("em",[t._v("/var/lib/tftpboot")]),t._v(". Run the following commands to copy the required\nnetwork boot files to "),s("em",[t._v("/var/lib/tftpboot/")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" –v /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" –v /usr/share/syslinux/menu.c32 /var/lib/tftpboot\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" –v /usr/share/syslinux/memdisk /var/lib/tftpboot\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" –v /usr/share/syslinux/mboot.c32 /var/lib/tftpboot\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" –v /usr/share/syslinux/chain.c32 /var/lib/tftpboot\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /var/lib/tftpboot/pxelinux.cfg\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /var/lib/tftpboot/networkboot\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Copy the RHEL 7.6 (or above) ISO files to the PXE server. Mount it\nto the "),s("em",[t._v("/mnt/")]),t._v(" directory and then copy the contents of the ISO to\nthe local FTP server using the following commands.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mount")]),t._v(" -o loop OS "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" name /mnt/\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /mnt/\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" –av * /var/ftp/pub/\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Copy the kernel file (vmlinuz) and initrd file from "),s("em",[t._v("/mnt")]),t._v(" to\n"),s("em",[t._v("/var/lib/tftpboot/networkboot/")]),t._v(" using the following commands.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" /mnt/images/pxeboot/vmlinuz /var/lib/tftpboot/networkboot/\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" /mnt/images/pxeboot/initrd.img /var/lib/tftpboot/networkboot\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Unmount the ISO files using the following command.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" unmount /mnt/\n")])])])]),t._v(" "),s("li",[s("p",[t._v("For RHEL nodes, create and utilize a new kickstart file under the\nfolder "),s("em",[t._v("/var/ftp/pub")]),t._v(' with the name "'),s("em",[t._v("rhel7.cfg")]),t._v('" using the\nfollowing command.')]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /var/ftp/pub/rhel7.cfg\n")])])]),s("p",[t._v("A sample kickstart file is shown as follows. The installation user\nshould create a kickstart file to meet the requirements of their\ninstallation environment.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('firewall --disabled\n\n# Install OS instead of upgrade\ninstall\n\n# Use FTP installation media\nurl --url="ftp://&lt;FTP_server_IP_address&gt;/pub/rhel76/"\n\n# Root password\n# root password can be plaintext as shown below\n# rootpw –plaintext password\n# root password is encrypted using the command “openssl passwd -1 password” and resultant output is provided for rootpwas shown below\nrootpw --iscrypted $6$uiq8l/7xEWsYXhrvaEgan4N21yhLa8K.U7UA12Th3PD11GOXvEcI40gp\n\n# System authorization information\nauth useshadow passalgo=sha512\n\n# Use graphical install\ngraphical\nfirstboot disable\n\n# System keyboard, timezone, language\nkeyboard us\ntimezone Europe/Amsterdam\nlang en_US\n\n# SELinux configuration\nselinux disabled\n\n# Installation logging level\nlogging level=info\n\n# System bootloader configuration\nbootloader location=mbr\nclearpart --all --initlabel\npart swap --asprimary --fstype="swap" --size=1\npart /boot --fstype xfs --size=300\npart pv.01 --size=1 --grow\nvolgroup root_vg01 pv.01\nlogvol / --fstype xfs --name=lv_01 --vgname=root_vg01 --size=1 --grow\n%packages\n@^minimal\n@core\n%end\n%addon com_redhat_kdump --disable --reserve-mb=\'auto\'\n%end\n')])])])]),t._v(" "),s("li",[s("p",[t._v("Create a PXE menu:")]),t._v(" "),s("ul",[s("li",[t._v("Create a PXE menu file at the location\n"),s("em",[t._v("/var/lib/tftpboot/pxelinux.cfg/default")]),t._v(" using the command.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /var/lib/tftpboot/pxelinux.cfg/default\n")])])]),s("ul",[s("li",[s("p",[t._v("For each of the OS boot options, provide the following details:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("MENU LABEL -- Custom name of the respective menu label.")])]),t._v(" "),s("li",[s("p",[t._v("KERNEL -- Kernel details of the operating system.")])]),t._v(" "),s("li",[s("p",[t._v("APPEND - Path of bootloader file along with path of cfg or\nconfiguration file (in case of RHEL).")])])])])])])]),t._v(" "),s("ul",[s("li",[t._v("A sample PXE menu is shown as follows."),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("default menu.c32\n\nprompt 0\n\ntimeout 30\n\nMENU TITLE LinuxTechi.com PXE Menu\n\nLABEL rhel76\n\nMENU LABEL RHEL76-Buedata\n\nKERNEL /rhel76/vmlinuz\n\nAPPEND initrd=/rhel76/initrd.img inst.repo=ftp://<FTP_server_IP_address>/pub/rhel76 ks=ftp://>FTP_server_IP_address>/pub/rhel76-hcp.cfg\n\nLABEL rhcos-bootstrap\n\nMENU LABEL Install RHCOS4.3 sec-Bootstrap\n\nKERNEL /networkboot/rhcos-4.3.0-x86_64-installer-kernel\n\nAPPEND ip=dhcp rd.neednet=1 initrd=/networkboot/rhcos-4.3.0-x86_64-installer-initramfs.img console=tty0 console=ttyS0 coreos.inst=yes coreos.inst.install_dev=sda coreos.inst.image_url= ftp://<FTP_server_IP_address>/pub/rhcos-4.3.0-x86_64-metal-bios.raw.gz coreos.inst.ignition_url= ftp://<FTP_server_IP_address>/pub/sec/bootstrap.ign\n\nLABEL rhcos-master\n\nMENU LABEL Install RHCOS4.2 sec-Master\n\nKERNEL /networkboot/rhcos-4.3.0-x86_64-installer-kernel\n\nAPPEND ip=dhcp rd.neednet=1 initrd=/networkboot/rhcos-4.3.0-x86_64-installer-initramfs.img console=tty0 console=ttyS0 coreos.inst=yes coreos.inst.install_dev=sda coreos.inst.image_url= ftp://<FTP_server_IP_address>/pub/rhcos-4.3.0-x86_64-metal-bios.raw.gz coreos.inst.ignition_url=ftp://<FTP_server_IP_address>/pub/sec/master.ign\n\nLABEL rhcos-worker\n\nMENU LABEL Install RHCOS4.2 sec-Worker\n\nKERNEL /networkboot/rhcos-4.3.0-x86_64-installer-kernel\n\nAPPEND ip=dhcp rd.neednet=1 initrd=/networkboot/rhcos-4.3.0-x86_64-installer-initramfs.img console=tty0 console=ttyS0 coreos.inst=yes coreos.inst.install_dev=sda coreos.inst.image_url= ftp://<FTP_server_IP_address>/pub/rhcos-4.3.0-x86_64-metal-bios.raw.gz coreos.inst.ignition_url=ftp://<FTP_server_IP_address>/pub/sec/worker.ign\n")])])])])]),t._v(" "),s("ol",{attrs:{start:"10"}},[s("li",[t._v("Start and enable xinetd, dhcpd and vsftpd using the following\ncommands."),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start xinetd\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" xinetd\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start dhcpd.service\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" dhcpd.service\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start vsftpd\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" vsftpd\n")])])])]),t._v(" "),s("li",[t._v("Configure SELinux for FTP."),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" setsebool –P allow_ftpd_full_access "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("Open ports in the firewall using the following firewall-cmd\ncommands.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" firewall-cmd --add-service-ftp --permanent\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" firewall-cmd --add-service-dhcp --permanent\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" firewall-cmd –reload\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("It is crucial to generate ignition files, copy them to the TFTP server,\nand update the path in the PXE default file. For more information about\ngenerating the ignition files, refer to the section "),s("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#kubernetes-manifests-and-ignition-files"}},[t._v("Kubernetes\nmanifests and ignition files")]),t._v("\nin this document.")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);