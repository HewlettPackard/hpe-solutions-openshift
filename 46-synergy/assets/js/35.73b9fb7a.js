(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{544:function(s,t,e){"use strict";e.r(t);var a=e(42),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"preparing-the-execution-environment"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#preparing-the-execution-environment"}},[s._v("#")]),s._v(" Preparing the execution environment")]),s._v(" "),e("p",[s._v("This section provides a detailed overview and steps to configure the\ncomponents deployed for this solution..")]),s._v(" "),e("h2",{attrs:{id:"installer-machine"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installer-machine"}},[s._v("#")]),s._v(" Installer machine")]),s._v(" "),e("p",[s._v("This document assumes that a server running Red Hat Enterprise Linux\n(RHEL) 7.6 exists within the deployment environment and is accessible to\nthe installation user to be used as an installer machine. This server\nmust have internet connectivity. In this solution, a virtual machine is\nused to act as an installer machine and the same host is utilized as an\nAnsible Engine host.")]),s._v(" "),e("h2",{attrs:{id:"non-root-user-access"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#non-root-user-access"}},[s._v("#")]),s._v(" Non-root user access")]),s._v(" "),e("p",[s._v("The industry-wide security best practice is to avoid the use of root\nuser account for administration of Linux-based servers. However, certain\noperations require root user privileges to perform tasks. In those\ncases, it is best to use the sudo command to obtain the necessary\nprivilege escalation on a short-term basis. The sudo command allows\nprograms and commands to be run with the security privileges of another\nuser (Root is the default user) and can restrict the permission to\nspecific groups, users, and individual commands.")]),s._v(" "),e("p",[s._v("The root user is not active by default in RHCOS. Instead, log in as the\ncore user.")]),s._v(" "),e("p",[s._v("Use the following steps to create a non-root user for the OpenShift\ninstallation process:")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("Login to the installer VM as root. Refer to the section "),e("a",{attrs:{href:"#installer-machine"}},[s._v("Installer\nmachine")]),s._v(" in this document for more details about\nthe installer VM.")])]),s._v(" "),e("li",[e("p",[s._v("Execute the following command to create a non-root user.")])])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" adduser openshift_admin\n")])])]),e("ul",[e("li",[s._v("Execute the following command to set password for the non-root user.")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" openshift_admin\n")])])]),e("ul",[e("li",[s._v("Add non-root user's group in sudoers file and use the following\ncommand to find non-root user's group.")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" -Gn openshift_admin\n  openshift_admin\n")])])]),e("ul",[e("li",[s._v("Edit the sudoers file and use the following command to add the entry\nof non-root user's group in the sudoers file.")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" visudo\n")])])]),e("ul",[e("li",[s._v("Add a non-root user's group entry in sudoers file as follows.")])]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# Allow the following commands to run anywhere in non-root user environment\n\nopenshift_admin ALL=(ALL) NOPASSWD: /usr/bin/chmod, /usr/bin/yum,\n/usr/bin/yum-config-manager, /usr/sbin/subscription-manager,\n/usr/bin/git, /usr/bin/vi, /usr/bin/vim, /usr/bin/mkdir, /usr/bin/cat,\n/usr/bin/echo, /usr/bin/python, /usr/bin/sed, /usr/bin/chown,\n/usr/bin/sh, /usr/bin/cp, /usr/bin/ansible-vault, /usr/bin/scp,\n/usr/bin/rpm, /usr/sbin/chkconfig, /usr/bin/systemctl,\n/usr/bin/journalctl, /usr/bin/curl, /usr/bin/tar,\n/usr/bin/genisoimage, /usr/bin/mount, /usr/bin/umount, /usr/bin/rsync,\n/usr/bin/find, /usr/bin/mv, /usr/bin/nano, /usr/sbin/dnsmasq,\n/usr/sbin/setsebool\n")])])]),e("ul",[e("li",[s._v("Execute the following command to change the user (non-root user).")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" openshift_admin\n")])])]),e("ul",[e("li",[s._v("Register the host and execute the following command to attach the\nhost pool with Red Hat.")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" subscription-manager\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" subscription-manager register --username"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("username"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --password"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("password"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --auto-attach\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" subscription-manager attach --pool"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pool_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("ul",[e("li",[s._v("Disable all repositories and enable only the repositories required\nfor the installer VM.")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" yum-utils\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum-config-manager --disable "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("*\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" subscription-manager repos --disable"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --enable"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rhel-7-server-rpms"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --enable"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rhel-7-server-extras-rpms"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --enable"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rhel-7-server-optional-rpms"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --enable"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rhel-server-rhscl-7-rpms"')]),s._v("\n")])])]),e("ul",[e("li",[s._v("Use the following command to install Ansible.")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" ansible\n")])])]),e("ul",[e("li",[s._v("Install Git package on installer VM for performing Git- related\noperations.")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v("\n")])])]),e("ul",[e("li",[s._v("Execute the following commands to download the\nhpe-solutions-openshift repository.")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/hpe/solutions/ocp\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/hpe/solutions/ocp\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("https://github.com/HewlettPackard/hpe-solutions-openshift.git"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" -R openshift_admin:openshift_admin /opt/hpe/solutions/ocp\n")])])]),e("ul",[e("li",[s._v("Create an environment variable BASE_DIR and point it to the\nfollowing path.")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("BASE_DIR")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/ opt/hpe/solutions/ocp/hpe-solutions-openshift/synergy/scalable\n")])])]),e("ul",[e("li",[e("p",[s._v("After the hpe-solutions-openshift repository is downloaded, navigate\nto the path\n/opt/hpe/solutions/ocp*/hpe-solutions-openshift/synergy/scalable/installer/playbooks*.\nThe scripts within this directory assists in configuring the\nprerequisites for the environment. The details of the scripts are as\nfollows:")]),s._v(" "),e("ul",[e("li",[s._v("python_env.sh – this script installs Python 3.")]),s._v(" "),e("li",[s._v("ansible_env.sh – this script creates a Python 3 virtual environment and installs Ansible within the virtual environment.")]),s._v(" "),e("li",[s._v("download_oneview_packages.sh – this script installs the prerequisite modules such as HPE oneview-ansible, HPE oneview-python and VMware PyVmomi within the virtual environment.")])])]),s._v(" "),e("li",[e("p",[s._v("Steps to configure the prerequisite environment are as follows:")]),s._v(" "),e("ul",[e("li",[s._v("Change the directory to  /opt/hpe/solutions/ocp/hpe-solutions-openshift/synergy/scalable/installer/playbooks")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$BASE_DIR")]),s._v("/installer/playbooks\n")])])]),e("ul",[e("li",[s._v("Execute the following command to setup prerequisite Python environment.")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" @development\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" python_env.sh\n")])])]),e("ul",[e("li",[s._v("Execute the following command to enable Python 3.")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" scl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" rh-python36 "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])])]),e("ul",[e("li",[s._v("Execute the following command to configure the Ansible environment.")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" ansible_env.sh\n")])])]),e("ul",[e("li",[s._v("Execute the following command to download the HPE OneView packages.")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" download_oneview_packages.sh\n")])])]),e("ul",[e("li",[s._v("Enable the virtual environment with the following command.")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/ocp_venv/bin/activate\n")])])]),e("ul",[e("li",[s._v("Execute the following command to set the environment variables.")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ANSIBLE_LIBRARY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$BASE_DIR")]),s._v("/installer/library/oneview-ansible/library\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ANSIBLE_MODULE_UTILS")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$BASE_DIR")]),s._v("/installer/library/oneview-ansible/library/module_utils\n")])])])])]),s._v(" "),e("h2",{attrs:{id:"kubernetes-manifests-and-ignition-files"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-manifests-and-ignition-files"}},[s._v("#")]),s._v(" Kubernetes manifests and ignition files")]),s._v(" "),e("p",[s._v("Manifests and ignition files define the master node and worker node\nconfiguration and are key components of the Red Hat OpenShift Container\nPlatform 4 installation.")]),s._v(" "),e("p",[s._v("Before creating the manifest files and ignition files, it is necessary\nto download the Red Hat OpenShift 4 packages. Execute the following\ncommand on the installer VM to download the required packages.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$BASE_DIR")]),s._v("/installer\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ansible-playbook playbooks/download_ocp_package.yml\n")])])]),e("p",[s._v("The OpenShift packages downloaded after executing the\n"),e("em",[s._v("download_ocp_package.yml")]),s._v(" playbook can be found on the installer VM at\n/opt/hpe/solutions/ocp/"),e("em",[s._v("hpe-solutions-openshift/synergy/scalable/installer/library/openshift_components")]),s._v(".\nTo execute any OpenShift related adhoc commands, it is advised to\nexecute them from within this folder.")]),s._v(" "),e("p",[s._v("To create the manifest files and the ignition files, edit the\n"),e("em",[s._v("install-config.yaml")]),s._v(" file provided in the directory\n/opt/hpe/solutions/ocp/"),e("em",[s._v("hpe-solutions-openshift/synergy/scalable/installer/ignitions")]),s._v("\nto include the following details:")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("baseDomain -- Base domain of the DNS which hosts Red Hat OpenShift\nContainer Platform.")])]),s._v(" "),e("li",[e("p",[s._v("name -- Name of the OpenShift cluster. This is same as the new\ndomain created in DNS.")])]),s._v(" "),e("li",[e("p",[s._v("replicas -- Update this field to reflect the corresponding number of\nmaster or worker instances required for the OpenShift cluster as per\nthe installation environment requirements. It is recommended to have\na minimum of 3 master nodes and 2 worker nodes per OpenShift\ncluster.")])]),s._v(" "),e("li",[e("p",[s._v("clusterNetworks -- This field is pre-populated by Red Hat. Update\nthis field only if a custom cluster network is to be used.")])]),s._v(" "),e("li",[e("p",[s._v("pullSecret -- Update this field with the pull secret for the Red Hat\naccount. Login to Red Hat account\n"),e("a",{attrs:{href:"https://cloud.redhat.com/openshift/install/metal/user-provisioned",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://cloud.redhat.com/openshift/install/metal/user-provisioned"),e("OutboundLink")],1),s._v("\nand retrieve the pull secret.")])]),s._v(" "),e("li",[e("p",[s._v("sshKey -- Update this field with the sshKey of the installer VM and\ncopy the SSH key in install-config.yaml file. Generate the SSH key\nwith following command.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ssh-keygen\n")])])])])]),s._v(" "),e("p",[s._v("An example "),e("em",[s._v("install-config.yaml")]),s._v(" file appears as follows. Update the fields to suit the installation environment.")]),s._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("baseDomain")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 'name of the base domain';\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("compute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hyperthreading")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Enabled\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" worker\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("controlPlane")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hyperthreading")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Enabled\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" master\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 'name of the cluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" same as the new domain under the base domain created';\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networking")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("clusterNetworks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cidr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 12.128.0.0/14\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hostPrefix")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networkType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" OpenShiftSDN\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("serviceNetwork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 172.30.0.0/16\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("platform")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("none")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("pullSecret")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ‘pull secret provided as per the Red Hat account’\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("sshKey")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ‘ ssh key of the installer VM ’\n")])])]),e("p",[s._v("Execute the following command on the installer VM to create the\nmanifest files and the ignition files required to install Red Hat\nOpenShift.")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$BASE_DIR")]),s._v("/installer\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ansible-playbook playbooks/create_manifest_ignitions.yml\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +r installer/ignitions/*.ign\n")])])]),e("p",[s._v("The ignition files are generated on the installer VM within the folder\n/opt/hpe/solutions/ocp/"),e("em",[s._v("hpe-solutions-openshift/synergy/scalable/installer/ignitions")]),s._v(".")]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("NOTE")]),s._v(" "),e("p",[s._v("The ignition files have a time-out period of 24 hours and it is critical\nthat the clusters are created within 24 hours of generating the ignition\nfiles. If it crosses 24 hours, then regenerate the ignition files again\nby clearing up the files from the directory where the ignition files\nwere saved.")])])])}),[],!1,null,null,null);t.default=n.exports}}]);