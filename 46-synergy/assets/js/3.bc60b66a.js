(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{431:function(e,t,s){e.exports=s.p+"assets/img/Figure39.19f92912.png"},432:function(e,t,s){e.exports=s.p+"assets/img/Figure40.12b16f4e.png"},433:function(e,t,s){e.exports=s.p+"assets/img/Figure41.ecbe5310.png"},434:function(e,t,s){e.exports=s.p+"assets/img/Figure42.bfd964a6.png"},435:function(e,t,s){e.exports=s.p+"assets/img/Figure43.d8db9e10.png"},436:function(e,t,s){e.exports=s.p+"assets/img/Figure44.fc7954a8.png"},437:function(e,t,s){e.exports=s.p+"assets/img/Figure45.c9ee1bd1.png"},438:function(e,t,s){e.exports=s.p+"assets/img/Figure46.11599df9.png"},439:function(e,t,s){e.exports=s.p+"assets/img/Figure47.7a078e15.png"},440:function(e,t,s){e.exports=s.p+"assets/img/Figure48.56d835f4.png"},441:function(e,t,s){e.exports=s.p+"assets/img/Figure49.152075a7.png"},442:function(e,t,s){e.exports=s.p+"assets/img/Figure50.5c578a51.png"},443:function(e,t,s){e.exports=s.p+"assets/img/Figure51.cfe6102e.png"},444:function(e,t,s){e.exports=s.p+"assets/img/Figure52.266439d0.png"},445:function(e,t,s){e.exports=s.p+"assets/img/Figure53.f73b8bff.png"},446:function(e,t,s){e.exports=s.p+"assets/img/Figure54.a4f3c538.png"},447:function(e,t,s){e.exports=s.p+"assets/img/Figure55.834a5095.png"},448:function(e,t,s){e.exports=s.p+"assets/img/Figure56.0907656c.png"},449:function(e,t,s){e.exports=s.p+"assets/img/Figure57.a50d99fc.png"},450:function(e,t,s){e.exports=s.p+"assets/img/Figure58.1d48a62e.png"},451:function(e,t,s){e.exports=s.p+"assets/img/Figure59.8a0ee51b.png"},452:function(e,t,s){e.exports=s.p+"assets/img/Figure60.d5eafcde.png"},453:function(e,t,s){e.exports=s.p+"assets/img/Figure61.b466b145.png"},454:function(e,t,s){e.exports=s.p+"assets/img/Figure62.2b2b417c.png"},455:function(e,t,s){e.exports=s.p+"assets/img/Figure63.3a6e6b9e.png"},456:function(e,t,s){e.exports=s.p+"assets/img/Figure64.1d48a62e.png"},457:function(e,t,s){e.exports=s.p+"assets/img/Figure65.8a0ee51b.png"},458:function(e,t,s){e.exports=s.p+"assets/img/Figure66.d5eafcde.png"},459:function(e,t,s){e.exports=s.p+"assets/img/Figure67.81798d1f.png"},460:function(e,t,s){e.exports=s.p+"assets/img/Figure68.827a994b.png"},461:function(e,t,s){e.exports=s.p+"assets/img/Figure69.7aeb04d3.png"},462:function(e,t,s){e.exports=s.p+"assets/img/Figure70.b8666296.png"},463:function(e,t,s){e.exports=s.p+"assets/img/Figure71.1da62899.png"},530:function(e,t,s){"use strict";s.r(t);var a=s(42),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"storage-option"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storage-option"}},[e._v("#")]),e._v(" Storage Option")]),e._v(" "),a("h2",{attrs:{id:"csi-driver-architecture"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csi-driver-architecture"}},[e._v("#")]),e._v(" CSI Driver Architecture")]),e._v(" "),a("p",[e._v("A diagrammatic representation of the CSI driver architecture is\nillustrated in the figure 39.")]),e._v(" "),a("p",[a("img",{attrs:{src:s(431),alt:""}})]),e._v(" "),a("p",[a("strong",[e._v("Figure 39.")]),e._v(" CSI Driver Architecture")]),e._v(" "),a("p",[e._v("The OpenShift Container Platform 4.6 cluster comprises the master and\nworker nodes (physical and virtual) with CoreOS deployed as the\noperating system. The iSCSI interface configured on the host nodes\nestablishes the connection with the HPE 3PAR array to the cluster. Upon\nsuccessful deployment of CSI Driver, the CSI controller, CSI Driver, and\n3PAR CSP gets deployed which communicates with the HPE 3PAR array via\nREST APIs. The associated features on Storage Class such as CSI\nProvisioner, CSI Attacher, and others are configured on the Storage\nClass.")]),e._v(" "),a("h2",{attrs:{id:"configuring-csi-driver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuring-csi-driver"}},[e._v("#")]),e._v(" Configuring CSI Driver")]),e._v(" "),a("p",[e._v("Prior to configuring the HPE CSI driver, the following prerequisites\nneeds to be met.")]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("PREREQUISITES")]),e._v(" "),a("ol",[a("li",[e._v("OpenShift Container Platform 4.6 must be successfully deployed and\nconsole should be accessible.")]),e._v(" "),a("li",[e._v("iSCSI interface should be configured for HPE 3PAR Storage on Host\nserver.")]),e._v(" "),a("li",[e._v("Additional iSCSI network interfaces must be configured on worker\nnodes (physical and virtual).")]),e._v(" "),a("li",[e._v("Deploy scc.yaml file to enable Security Context Constraints (SCC).")])])]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),a("p",[e._v("To get access to the host ports, host network, and to mount the\nhost path volume, the HPE CSI Driver needs to be run in privileged mode.\nPrior to deployment of the CSI operator on OpenShift, createSCC to allow\nCSI driver to run with these privileges. Download SCC yaml file from\nGitHub\n"),a("a",{attrs:{href:"https://raw.githubusercontent.com/hpe-storage/co-deployments/master/operators/hpe-csi-operator/deploy/scc.yaml",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://raw.githubusercontent.com/hpe-storage/co-deployments/master/operators/hpe-csi-operator/deploy/scc.yaml"),a("OutboundLink")],1),e._v("\nand update relevant fields such as project or namespace before running\nthe yaml to deploy SCC.")])]),e._v(" "),a("h2",{attrs:{id:"configuring-iscsi-interface-on-worker-nodes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuring-iscsi-interface-on-worker-nodes"}},[e._v("#")]),e._v(" Configuring iSCSI interface on worker nodes")]),e._v(" "),a("p",[e._v("Additional iSCSI interface needs to be configured on all the worker\nnodes (physical and virtual) for establishing the connection between the\nOCP cluster and HPE 3PAR array. iSCSI_A and iSCSI_B interfaces needs to\nbe configured on the worker nodes for redundancy. Follow the steps as\nlisted to configure the additional interface.")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Create interface configuration files (ifcfg files) on each of the\nworker nodes by specifying the following parameters.")]),e._v(" "),a("p",[e._v("HWADDR=52:4D:1F:20:01:94 (MAC address of the iSCSI connector)\nTYPE=Ethernet\nBOOTPROTO=none\nIPADDR=40.0.17.221\nPREFIX=16\nDNS1= 20.1.1.254\nONBOOT=yes")])]),e._v(" "),a("li",[a("p",[e._v("Reboot the worker nodes after configuring the ifcfg files. The 3PAR\nDiscovery IP should be pingable.")])])]),e._v(" "),a("p",[a("img",{attrs:{src:s(432),alt:""}})]),e._v(" "),a("p",[e._v("For virtual worker nodes, additional network adapters are added and the\ncorresponding network port groups are selected.")]),e._v(" "),a("p",[a("img",{attrs:{src:s(433),alt:""}})]),e._v(" "),a("h3",{attrs:{id:"iscsi-interface-for-physical-worker-nodes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iscsi-interface-for-physical-worker-nodes"}},[e._v("#")]),e._v(" iSCSI Interface for physical worker nodes")]),e._v(" "),a("p",[e._v("For physical worker nodes, the server profile is configured with iSCSI_A\nconnection for storage interface and additional iSCSI_B connection is\nadded to the server profile for redundancy.")]),e._v(" "),a("p",[a("img",{attrs:{src:s(434),alt:""}})]),e._v(" "),a("h3",{attrs:{id:"steps-to-deploy-scc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#steps-to-deploy-scc"}},[e._v("#")]),e._v(" Steps to deploy SCC")]),e._v(" "),a("p",[e._v("The following figure shows the parameters that needs to be edited\n(project name) where the CSI Operator is being deployed.")]),e._v(" "),a("p",[a("img",{attrs:{src:s(435),alt:""}})]),e._v(" "),a("ol",[a("li",[e._v("From the Installer vm, download the scc.yaml file from GitHub from\nthe following path."),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -sL https://raw.githubusercontent.com/hpe-storage/co-deployments/master/operators/hpe-csi-operator/deploy/scc.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" hpe-csi-scc.yaml\n")])])])]),e._v(" "),a("li",[e._v("Edit relevant parameters such as Project name and save the file.")]),e._v(" "),a("li",[e._v("Deploy SCC and check the output"),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc create -f hpe-csi-scc.yaml\n")])])]),e._v("Output:"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("securitycontextconstraints.security.openshift.io/hpe-csi-scc created\n")])])])])]),e._v(" "),a("h3",{attrs:{id:"installing-hpe-csi-driver-on-an-existing-red-hat-openshift-container-platform"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installing-hpe-csi-driver-on-an-existing-red-hat-openshift-container-platform"}},[e._v("#")]),e._v(" Installing HPE CSI Driver on an existing Red Hat OpenShift Container Platform")]),e._v(" "),a("h3",{attrs:{id:"creating-namespace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-namespace"}},[e._v("#")]),e._v(" Creating Namespace")]),e._v(" "),a("p",[e._v("Before installing the CSI Driver from the OpenShift console, create a\nnamespace called HPE-CSI Driver. Perform the following steps to create a\nNamespace.")]),e._v(" "),a("ol",[a("li",[e._v("Click Administration â†’ Namespaces in the left pane of the\nConsole.")]),e._v(" "),a("li",[e._v("Click Create Namespaces.")]),e._v(" "),a("li",[e._v("In the Create Namespace dialog\nbox -> enter HPE- CSI.")]),e._v(" "),a("li",[e._v("Click Create.")])]),e._v(" "),a("h2",{attrs:{id:"installing-red-hat-hpe-csi-driver-operator-using-the-operator-hub"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installing-red-hat-hpe-csi-driver-operator-using-the-operator-hub"}},[e._v("#")]),e._v(" Installing Red Hat HPE CSI Driver Operator using the Operator Hub")]),e._v(" "),a("h3",{attrs:{id:"installing-hpe-csi-driver-operator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installing-hpe-csi-driver-operator"}},[e._v("#")]),e._v(" Installing HPE CSI Driver Operator")]),e._v(" "),a("ol",[a("li",[e._v("Login to the Red Hat OpenShift Container Platform Web Console.")]),e._v(" "),a("li",[e._v("Click Operators â†’ Operator Hub.")]),e._v(" "),a("li",[e._v("Search for HPE CSI Driver Operator from the list of operators and\nclick HPE CSI Driver operator.")]),e._v(" "),a("li",[e._v("On the HPE-CSI Operator page, click Install.")])]),e._v(" "),a("p",[a("img",{attrs:{src:s(436),alt:""}})]),e._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[e._v("On the Create Operator Subscription page, the Installation Mode,\nUpdate Channel and Approval Strategy options are available.")])]),e._v(" "),a("p",[a("img",{attrs:{src:s(437),alt:""}})]),e._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[e._v("Select an Approval Strategy. The available options are:")]),e._v(" "),a("li",[e._v("Automatic: Specifies that the OpenShift Container Platform is\nrequired to upgrade HPE CSI Storage automatically. Select the\nAutomatic option.")]),e._v(" "),a("li",[e._v("Manual: Specifies that you need to upgrade to OpenShift Container\nPlatform manually.")]),e._v(" "),a("li",[e._v("Click "),a("strong",[e._v("Subscribe")]),e._v(".")]),e._v(" "),a("li",[e._v("The Installed Operators page is displayed with the status of the\noperator as shown.")])]),e._v(" "),a("p",[a("img",{attrs:{src:s(438),alt:""}})]),e._v(" "),a("h3",{attrs:{id:"creating-hpe-csi-driver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-hpe-csi-driver"}},[e._v("#")]),e._v(" Creating HPE CSI driver")]),e._v(" "),a("p",[e._v("The HPE CSI Driver allows any vendor or project to develop its own\nContainer Storage Provider by using the "),a("a",{attrs:{href:"https://developer.hpe.com/api/hpe-nimble-csp/",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSP\nspecification"),a("OutboundLink")],1),e._v(". This\nmakes it very easy for third- parties to integrate their storage\nsolution into Kubernetes as all the intricacies are taken care of by the\nHPE CSI Driver.")]),e._v(" "),a("p",[e._v("To create HPE CSI driver, perform the following steps.")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Click Operators â†’ Installed Operators from the left pane of the\nOpenShift Web Console to view the installed operators.")])]),e._v(" "),a("li",[a("p",[e._v("On the Installed Operator page, select HPE CSI Driver from the\nProject drop down list to switch to the HPE-CSI project")])]),e._v(" "),a("li",[a("p",[e._v("Click HPE CSI Driver.")])]),e._v(" "),a("li",[a("p",[e._v("On the HPE CSI Driver Operator page, scroll right and click the HPE\nCSI Driver yaml file.")])]),e._v(" "),a("li",[a("p",[e._v("Edit the HPE CSI Driver yaml file with required values like backend\n(3PAR array IP), password and username as shown.")])])]),e._v(" "),a("p",[a("img",{attrs:{src:s(439),alt:""}})]),e._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[e._v("On the HPE CSI Driver Operator page, scroll right and click the\nHPECSI Driver tab as shown.\n"),a("img",{attrs:{src:s(440),alt:""}})])]),e._v(" "),a("h3",{attrs:{id:"verifying-creation-of-hpe-csi-driver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#verifying-creation-of-hpe-csi-driver"}},[e._v("#")]),e._v(" Verifying creation of HPE CSI Driver")]),e._v(" "),a("p",[e._v("After the HPECSI Driver is deployed, one can see the associated\ndeployment pods being created such as hpe-csi-controller,\nhpe-csi-driver, and primera3par-csp.")]),e._v(" "),a("p",[a("img",{attrs:{src:s(441),alt:""}})]),e._v(" "),a("p",[e._v("To verify the HPE CSI Node Info, perform the following steps.")]),e._v(" "),a("p",[e._v("Run the following command from the Installer VM to check HPENodeinfo\nand network status of worker nodes.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get HPENodeInfo\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get HPENodeInfo/"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("workernode fqdn "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" -o yaml\n")])])]),a("p",[a("img",{attrs:{src:s(442),alt:""}})]),e._v(" "),a("h3",{attrs:{id:"hpe-csi-driver-storage-installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hpe-csi-driver-storage-installation"}},[e._v("#")]),e._v(" HPE CSI Driver Storage installation")]),e._v(" "),a("p",[e._v("After installing HPE CSI Driver, Storage Class is created manually.")]),e._v(" "),a("ol",[a("li",[e._v("From the OpenShift console navigate to Storage -> Storage Class")]),e._v(" "),a("li",[e._v("Click Create Storage Class -> Click Edit yaml -> insert the parameters\nfor SC creation -> Click Create.")]),e._v(" "),a("li",[e._v("'hpe-standard' storage class is\ncreated as shown.")])]),e._v(" "),a("p",[a("img",{attrs:{src:s(443),alt:""}})]),e._v(" "),a("p",[e._v("Run the following command on the CLI to tag the storage class default-\nstorage class by :")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc annotate storageclass hpe-standard storageclass.kubernetes.io/is-default-class"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true\n")])])]),a("p",[e._v("The create Storage Class yaml file parameters are as follows:")]),e._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" storage.k8s.io/v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" StorageClass\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" hpe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("standard\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("provisioner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" csi.hpe.com\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("parameters")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("csi.storage.k8s.io/fstype")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ext4\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("csi.storage.k8s.io/controller-expand-secret-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" primera3par"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("secret\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("csi.storage.k8s.io/controller-expand-secret-namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" hpe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("csi\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("csi.storage.k8s.io/controller-publish-secret-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" primera3par"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("secret\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("csi.storage.k8s.io/controller-publish-secret-namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" hpe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("csi\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("csi.storage.k8s.io/node-publish-secret-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" primera3par"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("secret\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("csi.storage.k8s.io/node-publish-secret-namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" hpe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("csi\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("csi.storage.k8s.io/node-stage-secret-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" primera3par"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("secret\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("csi.storage.k8s.io/node-stage-secret-namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" hpe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("csi\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("csi.storage.k8s.io/provisioner-secret-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" primera3par"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("secret\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("csi.storage.k8s.io/provisioner-secret-namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" hpe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("csi\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("cpg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" SSD_r6 \n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("provisioning_type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" tpvv\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("accessProtocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" iscsi\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("reclaimPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Delete\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("allowVolumeExpansion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),a("p",[e._v("From the worker node, ssh to the 3PAR array to check on the cpg\nvalues for Storage Class creation as shown.")]),e._v(" "),a("p",[a("img",{attrs:{src:s(444),alt:""}})])]),e._v(" "),a("h3",{attrs:{id:"sample-application-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sample-application-deployment"}},[e._v("#")]),e._v(" Sample application deployment")]),e._v(" "),a("p",[e._v("A sample application deployed on the existing Red Hat OpenShift\nContainer Platform utilizes the volume from 3PAR array through HPE CSI\nDriver. A sample application such as mongodb or mariadb is deployed and\nscheduled on the worker nodes. Follow the steps to deploy a sample\napplication.")]),e._v(" "),a("ol",[a("li",[e._v("Run the following command to deploy a sample application."),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc new-app mongodb-persistent\n")])])])])]),e._v(" "),a("p",[a("img",{attrs:{src:s(445),alt:""}})]),e._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[e._v("Check the status of PVC and Pod.")])]),e._v(" "),a("p",[a("img",{attrs:{src:s(446),alt:""}})]),e._v(" "),a("p",[e._v("List of pods created on the cluster along with the one for sample\napplication deployed is shown.")]),e._v(" "),a("p",[a("img",{attrs:{src:s(447),alt:""}})]),e._v(" "),a("p",[e._v("PVC for the sample application deployed is created and bound. This can\nbe verified in the OpenShift Console by navigating to Storage ->\nPersistent Volume Claim section.")]),e._v(" "),a("p",[a("img",{attrs:{src:s(448),alt:""}})]),e._v(" "),a("h3",{attrs:{id:"verification-of-persistent-volume-claim-on-3par-array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#verification-of-persistent-volume-claim-on-3par-array"}},[e._v("#")]),e._v(" Verification of Persistent Volume Claim on 3PAR array")]),e._v(" "),a("p",[e._v("The PVC created for the sample application deployed (mongodb) can be\nverified on the 3PAR array by searching for the PVC id seen on the\nconsole or on the CLI.")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),a("p",[e._v("The PVC ID is not completely seen on 3PAR console as it gets\ntruncated beyond 30 characters.")])]),e._v(" "),a("p",[e._v("Steps to verify the PVC on 3PAR array:")]),e._v(" "),a("ol",[a("li",[e._v("Login to the 3PAR SSMC URL at\nhttps://10.0.20.19:8443/#/login with appropriate credentials.")]),e._v(" "),a("li",[e._v("Navigate from the drop- down menu option on 3PAR StoreServ -> Virtual\nvolumes")]),e._v(" "),a("li",[e._v("The volume for the PVC created can be seen under the list of\nvirtual volume as shown.")])]),e._v(" "),a("p",[a("img",{attrs:{src:s(449),alt:""}})]),e._v(" "),a("h3",{attrs:{id:"openshift-persistent-volume-expansion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#openshift-persistent-volume-expansion"}},[e._v("#")]),e._v(" OpenShift Persistent Volume Expansion")]),e._v(" "),a("p",[e._v("The volume of the sample application deployed can be expanded by\nspecifying the volume size on the OpenShift console. The steps for PVC\nexpansion are as follows.")]),e._v(" "),a("ol",[a("li",[e._v("On the OpenShift web console navigate to Storage -> Persistent\nVolume Claims -> select a specific pod -> click on the dots seen\ntowards the right side -> select 'Expand PVC'")])]),e._v(" "),a("p",[a("img",{attrs:{src:s(450),alt:""}})]),e._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[e._v("Change the volume size from 1Gi to 3Gi and click Expand button as\nshown.")])]),e._v(" "),a("p",[a("img",{attrs:{src:s(451),alt:""}})]),e._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[e._v("Now, you can see PVC and PV has been resized to 3 GB.")])]),e._v(" "),a("p",[a("img",{attrs:{src:s(452),alt:""}})]),e._v(" "),a("h3",{attrs:{id:"csi-driver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csi-driver"}},[e._v("#")]),e._v(" CSI Driver")]),e._v(" "),a("p",[e._v("CSI was developed as a standard for exposing block and file storage\nsystems to containerized workloads on Container Orchestrator Systems\n(COS) like Kubernetes. Container Storage Interface (CSI) is an\ninitiative to unify the storage interface of COS combined with storage\nvendors. This means, implementing a single CSI for a storage vendor is\nguaranteed to work with all COS. With the introduction of CSI, there is\na clear benefit for the COS and storage vendors. Due to its well-defined\ninterfaces, it also helps developers and future COS to easily implement\nand test CSI. Volume plugins served the storage needs for container\nworkloads in case of Kubernetes, before CSI existed. The HPE CSI Driver\nis a multi-vendor and multi-backend driver where each implementation has\na Container Storage Provider (CSP). The HPE CSI Driver for Kubernetes\nuses CSP to perform data management operations on storage resources such\nas searching for a logical unit number (lun) and so on. Using the CSP\nspecification, the HPE CSI Driver allows any vendor or project to\ndevelop its own CSP, which makes it very easy for third- parties to\nintegrate their storage solution into Kubernetes as all the intricacies\nare taken care of by the HPE CSI Driver.")]),e._v(" "),a("p",[e._v("This document contains details on how to configure a HPE CSI Driver\nstorage for 3PAR on an existing Red Hat OpenShift Container Platform\n4.6.")]),e._v(" "),a("h3",{attrs:{id:"deploying-hpe-csi-driver-nimble-storage-on-ocp-4-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploying-hpe-csi-driver-nimble-storage-on-ocp-4-6"}},[e._v("#")]),e._v(" Deploying HPE CSI Driver Nimble Storage on OCP 4.6")]),e._v(" "),a("h3",{attrs:{id:"configuring-iscsi-interface-on-worker-nodes-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuring-iscsi-interface-on-worker-nodes-2"}},[e._v("#")]),e._v(" Configuring iSCSI interface on worker nodes")]),e._v(" "),a("p",[e._v("Additional iSCSI interface needs to be configured on all the worker\nnodes (physical and virtual) for establishing the connection between the\nOCP cluster and HPE Nimble array. iSCSI_A and iSCSI_B interfaces needs\nto be configured on the worker nodes for redundancy. Follow the steps\nas- listed to configure the additional interface. 1. Create interface\nconfiguration files (ifcfg files) on each of the worker nodes by\nspecifying the following parameters.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("HWADDR=52:4D:1F:20:01:94 (MAC address of the iSCSI connector)\nTYPE=Ethernet\nBOOTPROTO=none\nIPADDR=40.0.17.221 \nPREFIX=16\nDNS1= 20.1.1.254\nONBOOT=yes\n")])])]),a("ol",[a("li",[e._v("Reboot the worker nodes after configuring the ifcfg files. The\nNimble Discovery IP should be pingable.")])]),e._v(" "),a("p",[a("img",{attrs:{src:s(453),alt:""}})]),e._v(" "),a("p",[e._v("For virtual worker nodes, additional Network adapters are added and the\ncorresponding network port groups are selected.")]),e._v(" "),a("p",[a("img",{attrs:{src:s(454),alt:""}})]),e._v(" "),a("h3",{attrs:{id:"iscsi-interface-for-physical-worker-nodes-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iscsi-interface-for-physical-worker-nodes-2"}},[e._v("#")]),e._v(" iSCSI Interface for Physical worker nodes")]),e._v(" "),a("p",[e._v("For Physical worker nodes, the server profile is configured with iSCSI_A\nconnection for storage interface and additional iSCSI_B connection is\nadded to the server profile for redundancy.")]),e._v(" "),a("p",[a("img",{attrs:{src:s(455),alt:""}})]),e._v(" "),a("h3",{attrs:{id:"openshift-persistent-volume-expansion-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#openshift-persistent-volume-expansion-2"}},[e._v("#")]),e._v(" OpenShift Persistent Volume Expansion")]),e._v(" "),a("p",[e._v("The volume of the sample application deployed can be expanded by\nspecifying the volume size on the OpenShift console. The steps for PVC\nexpansion is listed as follows.")]),e._v(" "),a("ol",[a("li",[e._v("On the OpenShift web console navigate to Storage -> Persistent\nVolume Claims -> select a specific pod -> click on the dots seen\ntowards the right side -> select 'Expand PVC'")])]),e._v(" "),a("p",[a("img",{attrs:{src:s(456),alt:""}})]),e._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[e._v("Change the volume size from 1Gi to 3Gi and click Expand button.")])]),e._v(" "),a("p",[a("img",{attrs:{src:s(457),alt:""}})]),e._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[e._v("Now you can see PVC and PV has been resized to 3 GB.")])]),e._v(" "),a("p",[a("img",{attrs:{src:s(458),alt:""}})]),e._v(" "),a("h2",{attrs:{id:"deploying-openshift-container-storage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploying-openshift-container-storage"}},[e._v("#")]),e._v(" Deploying Openshift Container Storage")]),e._v(" "),a("p",[e._v("This section covers deploying OpenShift Container Storage 4.5 on\nexisting Red Hat OpenShift Container Platform 4.6 worker nodes.")]),e._v(" "),a("p",[e._v("The OpenShift Container Storage operator installation will be using\nLocal Storage operator which will use file system storage of 10GB for\nmonitoring purpose and block storage of 500GB/2TB for OSD (Object\nStorage Daemon) volumes. These OSD are useful for configuring any\napplication on top of OCP cluster using OCS configuration.")]),e._v(" "),a("p",[e._v("The below operators are required to create OCS cluster and deployed\nthrough automation fashion.")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Local Storage Operator")])]),e._v(" "),a("li",[a("p",[e._v("OpenShift Container Storage Operator")])])]),e._v(" "),a("h3",{attrs:{id:"flow-diagram"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flow-diagram"}},[e._v("#")]),e._v(" Flow Diagram")]),e._v(" "),a("p",[a("img",{attrs:{src:s(459),alt:""}})]),e._v(" "),a("p",[a("strong",[e._v("Figure 67.")]),e._v(" Openshift Container Storage Solution Flow Diagram")]),e._v(" "),a("h3",{attrs:{id:"configuration-requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-requirements"}},[e._v("#")]),e._v(" Configuration requirements")]),e._v(" "),a("p",[e._v("The below table shows about all required worker node configuration.")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[e._v("Server Role")])]),e._v(" "),a("th",[a("strong",[e._v("CPU")])]),e._v(" "),a("th",[a("strong",[e._v("RAM")])]),e._v(" "),a("th",[a("strong",[e._v("HardDisk1")])]),e._v(" "),a("th",[a("strong",[e._v("HardDiak2")])]),e._v(" "),a("th",[a("strong",[e._v("HardDisk3")])])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("Worker")]),e._v(" "),a("td",[e._v("16")]),e._v(" "),a("td",[e._v("64")]),e._v(" "),a("td",[e._v("120 GB")]),e._v(" "),a("td",[e._v("10 GB")]),e._v(" "),a("td",[e._v("500 GB/2 TB")])])])]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("PREREQUISITES")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Red Hat OpenShift Container Platform 4.6 cluster console is required\nwith the login credentials.")])]),e._v(" "),a("li",[a("p",[e._v("Availability of any local storage from any storage (i.e Nimble,3PAR,\nLocal Storage) in OpenShift Container Platform.")])]),e._v(" "),a("li",[a("p",[e._v('OCS installation on OCP 4.6 cluster requires a minimum of 3 worker\nnodes but OCS should have exact 3 worker nodes which use two more\nhard disks with 10GB for mon POD (3 in total using always a PVC) +\n500GB (or more than 500GB) volume (a PVC using the default\n"'),a("strong",[e._v("thin")]),e._v('" storage class) for the OSD volumes. It also requires 16\nCPUs and 64GB RAM for each node and worker node hard disk\nconfiguration as shown in above figure.')])])])]),e._v(" "),a("h3",{attrs:{id:"scripts-for-deploying-ocs-cluster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scripts-for-deploying-ocs-cluster"}},[e._v("#")]),e._v(" Scripts for deploying OCS cluster")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),a("p",[e._v("BASE_DIR - is a base directory path for all automated scripts\ndirectories are in place and path is\n/opt/hpe/solutions/ocp/hpe-solutions-openshift/synergy/scalable")])]),e._v(" "),a("p",[e._v("This section provides details on the scripts developed to automate the\ninstallation of OCS operator on the OCP cluster. The scripts used to\ndeploy OCS can be found in the installer VM at\n"),a("em",[e._v("$BASE_DIR/ocs_installation")]),e._v(".")]),e._v(" "),a("ol",[a("li",[a("p",[a("strong",[e._v("install_ocs_operator.py")]),e._v(" - main python script which installs\nLocal Storage operator, OpenShift Container Storage operators,\ncreates file system & block storage and also creates SCs, PVs, PVCs.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("config.py")]),e._v(" - This python script is used to convert user input\nvalues into program variables for usage by the\ninstall_ocs_operator.py script.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("userinput.json")]),e._v(" - The userinput.json file needs to be modified as\nper user configuration and requirements for installing and scaling\nOCS cluster.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("config_secrets.json")]),e._v(" -- This encrypted file has OCP cluster login\ncredentials and user needs to provide credentials to this file using\n'ansible-vault' command.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("create_local_storage_operator.yaml")]),e._v(" -- Creates Local Storage\noperator's Namespace, installs Local Storage operator.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("local_storage_fs.yaml")]),e._v(" -- Creates file system storage for\nmonitoring OCS cluster.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("local_storage_block.yaml")]),e._v(" -- Creates block storage for claiming\nOSD persistent volumes.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("ocs_operator.yaml")]),e._v(" -- This playbook creates OpenShift Container\nStorage Namespace, block storage for bounding PVC to Storage Class.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("storage_ocs.yaml")]),e._v(" -- This playbook creates storage classes, PVCs,\npods to bring up the OCS cluster.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("scaling_ocs_operator.py -")]),e._v(" This python script is used to scale\nOCS cluster by expanding OCS storage with 3 more worker nodes.")])])]),e._v(" "),a("h3",{attrs:{id:"installing-openshift-container-storage-on-openshift-container-platform"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installing-openshift-container-storage-on-openshift-container-platform"}},[e._v("#")]),e._v(" Installing OpenShift Container Storage on OpenShift Container Platform")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Login to the installer machine as non-root user and browse to python\nvirtual environment as per DG.")])]),e._v(" "),a("li",[a("p",[e._v("Update the "),a("em",[e._v("config_secrets.json")]),e._v(" file found at\n"),a("em",[e._v("$BASE_DIR/ocs_installation")]),e._v(" using 'ansible-vault' command as\nshown below:")]),e._v(" "),a("p",[e._v("The below command is used to open encrypted file config_secrets.json")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" ansible-vault edit config_secrets.json\n")])])]),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[e._v("# OPENSHIFT_USERNAME"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" <OpenShift Container Platform cluster\nusername>\n# OPENSHIFT_PASSWORD"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" <OpenShift Container Platform cluster\npassword>\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Update the "),a("em",[e._v("userinput.json")]),e._v(" file is found at\n"),a("em",[e._v("$BASE_DIR/ocs_installation")]),e._v(" with the following setup configuration\ndetails:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[e._v("# "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"OPENSHIFT_DOMAIN"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(' "<OpenShift Server sub domain fqdn\n(api.domain.base_domain)>"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\n# "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"OPENSHIFT_PORT"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(' "<OpenShift Server port number (OpenShift\nContainer Platform runs on port '),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("6443")]),e._v(' by default)>"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\n# "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"LOCAL_STORAGE_NAMESPACE"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(' "<Local Storage Operator Namespace\n(local-storage)>"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\n# "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"OPENSHIFT_CONTAINER_STORAGE_NAMESPACE"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(' "<OpenShift Container\nStorage Operator Namespace (openshift-storage)>"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\n# "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"OPENSHIFT_CONTAINER_STORAGE_LOCAL_STORAGE_VERSION"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"<OCP_cluster_version>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\n# "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"OPENSHIFT_CONTAINER_STORAGE_FILESYSTEM_STORAGE"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" \"<Provide 10GiB\nworker node's drive for file system storage (Ex"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(' /dev/sdb)>" '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\n# "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"OPENSHIFT_CONTAINER_STORAGE_BLOCK_STORAGE"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" \"<Provide 500Gi worker\nnode's drive for block storage (Ex"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(' /dev/sdc)>"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\n# "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"OPENSHIFT_CLIENT_PATH"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(' "<Provide oc absolute path ending with /\nOR leave empty in case oc is available under /usr/local/bin>"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\n# "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"OPENSHIFT_CONTAINER_PLATFORM_WORKER_NODES"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" <Provide OCP worker\nnodes fqdn list "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"sworker1.fqdn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"sworker2.fqdn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"worker3.fqdn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(">"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\n# "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"OPENSHIFT_CONTAINER_STORAGE_SCALING_WORKER_NODES"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" <Provide OCS\nworker nodes fqdn list "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"sworker4.fqdn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"sworker5.fqdn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"sworker6.fqdn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(">"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\n# "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"OPENSHIFT_CONTAINER_STORAGE_BLOCK_VOLUME"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(' "<Provide\nbase/scale OCS worker node block storage'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(' should be in Gi/Ti (example\n- 500Gi or 2Ti)>"\n')])])])]),e._v(" "),a("li",[a("p",[e._v("Execute the following command to deploy OCS cluster.")])])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$BASE_DIR")]),e._v("/ocs_installation\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" python -W ignore install_ocs_operator.py\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("The output of the above command as shown below:\n$ python -W ignore install_ocs_operator.py\nEnter key for encrypted variables:\nLogging into your OpenShift Cluster\nSuccessfully logged into the OpenShift Cluster\nWaiting for 1 minutes to 'Local Storage' operator to be available on\nOCP web console..!!\n'Local Storage' operator is created..!!\nWaiting for 2 minutes to OCS operator to be available on OCP web\nconsole..!!\n'OpenShift Container Storage' operator is created..!!\nINFO:\n1) Run the below command to list all PODs and PVCs of OCS cluster.\n'oc get pod,pvc -n openshift-storage'\n2) Wait for 'pod/ocs-operator-xxxx' pod to be up and running.\n3) Log into OCP web GUI and check Persistant Stoarge in dashboard.\n$\n")])])]),a("h3",{attrs:{id:"validation-of-the-openshift-container-storage-cluster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validation-of-the-openshift-container-storage-cluster"}},[e._v("#")]),e._v(" Validation of the OpenShift Container Storage cluster")]),e._v(" "),a("p",[e._v("The required operators will be created after the execution of the script\nand they will be reflected in the OpenShift console. This section\noutlines the steps to verify the operators created through script and\nare reflected in the GUI:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Login to the "),a("strong",[e._v("OpenShift Container Platform")]),e._v(" web console as the\nuser with administrative privileges.")])]),e._v(" "),a("li",[a("p",[e._v("Navigate to "),a("strong",[e._v("Operators -> Project (local-storage)")]),e._v(" ->\n"),a("strong",[e._v("Installed")]),e._v(" "),a("strong",[e._v("Operators")]),e._v(" select your project name.")])]),e._v(" "),a("li",[a("p",[e._v("The Local Storage operator will be available in the OpenShift web\nconsole as shown in below Figure.")])])]),e._v(" "),a("p",[a("img",{attrs:{src:s(460),alt:""}})]),e._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("p",[e._v("Navigate to "),a("strong",[e._v("Operators")]),e._v(" -> "),a("strong",[e._v("Installed")]),e._v(" "),a("strong",[e._v("Operators")]),e._v(" select\nyour project name openshift-storage for OpenShift Container Storage\noperator.")])]),e._v(" "),a("li",[a("p",[e._v("The OpenShift Container Storage operator will be available on the\nOpenShift Container Platformm web console as shown in below Figure.")])])]),e._v(" "),a("p",[a("img",{attrs:{src:s(461),alt:""}})]),e._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[e._v("SCs of OpenShift Container Storage operator on CLI as shown in\nbelow.")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get sc\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" NAME PROVISIONER RECLAIMPOLICY VOLUMEBINDINGMODE ALLOWVOLUMEEXPANSION\n AGE\n\n local-sc kubernetes.io/no-provisioner Delete WaitForFirstConsumer\n false 45h\n\n localblock-sc kubernetes.io/no-provisioner Delete WaitForFirstConsumer\n false 45h\n\n ocs-storagecluster-ceph-rbd openshift-storage.rbd.csi.ceph.com Delete\n Immediate false 45h\n\n ocs-storagecluster-cephfs openshift-storage.cephfs.csi.ceph.com Delete\n Immediate false 45h\n\n openshift-storage.noobaa.io openshift-storage.noobaa.io/obc Delete\n Immediate false 45h\n")])])]),a("ol",{attrs:{start:"5"}},[a("li",[e._v("PVs of OpenShift Container Storage operator on CLI as shown in\nbelow.")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("pv")]),e._v("\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS\n REASON AGE\n\n local-pv-2febb788 500Gi RWO Delete Bound\n openshift-storage/ocs-deviceset-1-0-lhtvh localblock-sc 45h\n\n local-pv-5f19c0e5 10Gi RWO Delete Bound\n openshift-storage/rook-ceph-mon-b local-sc 45h\n\n local-pv-b73b1cd5 500Gi RWO Delete Bound\n openshift-storage/ocs-deviceset-2-0-jmmck localblock-sc 45h\n\n local-pv-b8ba8c38 10Gi RWO Delete Bound\n openshift-storage/rook-ceph-mon-a local-sc 45h\n\n local-pv-c3a372f6 10Gi RWO Delete Bound\n openshift-storage/rook-ceph-mon-c local-sc 45h\n\n local-pv-e5e3d596 500Gi RWO Delete Bound\n openshift-storage/ocs-deviceset-0-0-5jxg7 localblock-sc 45h\n\n pvc-8f3e3d8b-6be7-4ba8-8968-69cbc866c89f 50Gi RWO Delete Bound\n openshift-storage/db-noobaa-db-0 ocs-storagecluster-ceph-rbd 45h\n\n")])])]),a("ol",{attrs:{start:"6"}},[a("li",[e._v("PVCs of OpenShift Container Storage operator on CLI as shown in\nbelow.")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get pvc -n openshift-storage\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE\n\n db-noobaa-db-0 Bound pvc-8f3e3d8b-6be7-4ba8-8968-69cbc866c89f 50Gi RWO\n ocs-storagecluster-ceph-rbd 45h\n\n ocs-deviceset-0-0-5jxg7 Bound local-pv-e5e3d596 500Gi RWO\n localblock-sc 45h\n\n ocs-deviceset-1-0-lhtvh Bound local-pv-2febb788 500Gi RWO\n localblock-sc 45h\n\n ocs-deviceset-2-0-jmmck Bound local-pv-b73b1cd5 500Gi RWO\n localblock-sc 45h\n\n rook-ceph-mon-a Bound local-pv-b8ba8c38 10Gi RWO local-sc 45h\n\n rook-ceph-mon-b Bound local-pv-5f19c0e5 10Gi RWO local-sc 45h\n\n rook-ceph-mon-c Bound local-pv-c3a372f6 10Gi RWO local-sc 45h\n\n")])])]),a("ol",{attrs:{start:"7"}},[a("li",[e._v("PODs of OpenShift Container Storage operator on CLI as shown in\nbelow.")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get pod -n openshift-storage\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" NAME READY STATUS RESTARTS AGE\n\n csi-cephfsplugin-6xpsk 3/3 Running 0 45h\n\n csi-cephfsplugin-7khm6 3/3 Running 0 17m\n\n csi-cephfsplugin-bb48n 3/3 Running 0 45h\n\n csi-cephfsplugin-cfzx6 3/3 Running 0 15m\n\n csi-cephfsplugin-provisioner-79587c64f9-2dpm6 5/5 Running 0 45h\n\n csi-cephfsplugin-provisioner-79587c64f9-hf46x 5/5 Running 0 45h\n\n csi-cephfsplugin-w6p6v 3/3 Running 0 45h\n\n csi-rbdplugin-2z686 3/3 Running 0 45h\n\n csi-rbdplugin-6tv5m 3/3 Running 0 45h\n\n csi-rbdplugin-jgf5z 3/3 Running 0 17m\n\n csi-rbdplugin-provisioner-5f495c4566-76rqm 5/5 Running 0 45h\n\n csi-rbdplugin-provisioner-5f495c4566-pzvww 5/5 Running 0 45h\n\n csi-rbdplugin-v7lfx 3/3 Running 0 45h\n\n csi-rbdplugin-ztdjs 3/3 Running 0 15m\n\n noobaa-core-0 1/1 Running 0 45h\n\n noobaa-db-0 1/1 Running 0 45h\n\n noobaa-endpoint-6458fc874f-vpznd 1/1 Running 0 45h\n\n noobaa-operator-7f4495fc6-lmk9k 1/1 Running 0 45h\n\n ocs-operator-5d664769f-59v8j 1/1 Running 0 45h\n\n rook-ceph-crashcollector-sworker1.socp.twentynet.local-84dddddb 1/1\n Running 0 45h\n\n rook-ceph-crashcollector-sworker2.socp.twentynet.local-8b5qzzsz 1/1\n Running 0 45h\n\n rook-ceph-crashcollector-sworker3.socp.twentynet.local-699n9kzp 1/1\n Running 0 45h\n\n rook-ceph-drain-canary-sworker1.socp.twentynet.local-85bffzm66m 1/1\n Running 0 45h\n\n rook-ceph-drain-canary-sworker2.socp.twentynet.local-66bcfjjfkr 1/1\n Running 0 45h\n\n rook-ceph-drain-canary-sworker3.socp.twentynet.local-5f6b57c9nt 1/1\n Running 0 45h\n\n rook-ceph-mds-ocs-storagecluster-cephfilesystem-a-67fbb67dkb4kz 1/1\n Running 0 45h\n\n rook-ceph-mds-ocs-storagecluster-cephfilesystem-b-db66df7dtqkmx 1/1\n Running 0 45h\n\n rook-ceph-mgr-a-6f5f7b58dc-fjvjc 1/1 Running 0 45h\n\n rook-ceph-mon-a-76cc49c944-5pcgf 1/1 Running 0 45h\n\n rook-ceph-mon-b-b9449cdd7-s6mct 1/1 Running 0 45h\n\n rook-ceph-mon-c-59d854cd8-gn6sd 1/1 Running 0 45h\n\n rook-ceph-operator-775cd6cd66-sdfph 1/1 Running 0 45h\n\n rook-ceph-osd-0-7644557bfb-9l7ns 1/1 Running 0 45h\n\n rook-ceph-osd-1-7694c74948-lc9sf 1/1 Running 0 45h\n\n rook-ceph-osd-2-794547558-wjcpz 1/1 Running 0 45h\n\n rook-ceph-osd-prepare-ocs-deviceset-0-0-5jxg7-t89zh 0/1 Completed 0\n 45h\n\n rook-ceph-osd-prepare-ocs-deviceset-1-0-lhtvh-f2znl 0/1 Completed 0\n 45h\n\n rook-ceph-osd-prepare-ocs-deviceset-2-0-jmmck-wsrb2 0/1 Completed 0\n 45h\n\n rook-ceph-rgw-ocs-storagecluster-cephobjectstore-a-67b7865qx276 1/1\n Running 0 45h\n\n")])])]),a("ol",{attrs:{start:"8"}},[a("li",[e._v("Storage capacity of OCS cluster with 3 worker nodes (3x500Gi) on OCP\nweb cluster as shown below figure.")])]),e._v(" "),a("p",[a("img",{attrs:{src:s(462),alt:""}})]),e._v(" "),a("h2",{attrs:{id:"validating-ocs-with-deploying-wordpress-application"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validating-ocs-with-deploying-wordpress-application"}},[e._v("#")]),e._v(" Validating OCS with deploying WordPress application")]),e._v(" "),a("p",[e._v("This section covers the steps to validate the OpenShift Container\nStorage deployment (OCS) by deploying 2-tier application along with\nMySQL database.")]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("PREREQUISITES")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("OCP 4.6 cluster must be installed.")])]),e._v(" "),a("li",[a("p",[e._v("OCS to claim persistent volume (PV).")])])])]),e._v(" "),a("h3",{attrs:{id:"deploying-wordpress-application"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploying-wordpress-application"}},[e._v("#")]),e._v(" Deploying WordPress application")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),a("p",[e._v("BASE_DIR - is a base directory path for all automated scripts\ndirectories are in place and path is\n/opt/hpe/solutions/ocp/hpe-solutions-openshift/synergy/scalable")])]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Login to the installer machine as a non-root user.")])]),e._v(" "),a("li",[a("p",[e._v("From within the repository, navigate to the WordPress script folder")])])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$BASE_DIR")]),e._v("/ocs_installation/wordpress\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[e._v("Run below script to deploy Wordpress application along with MySQL")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" ./deploy_wordpress.sh\n")])])]),a("p",[e._v("The deploy_wordpress.sh scripts does the following activities.")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Creates project")])]),e._v(" "),a("li",[a("p",[e._v("Sets default storage class")])]),e._v(" "),a("li",[a("p",[e._v("Deploys Wordpress and MySQL app")])]),e._v(" "),a("li",[a("p",[e._v("Create routes")])])]),e._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[e._v("Below is the output of the scripts")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" ./deploy_wordpress.sh\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(' Already on project "wordpress" on server\n "https://api.socp.twentynet.local:6443".\n\n You can add applications to this project with the \'new-app\' command.\n For example, try:\n\n oc new-app ruby~https://github.com/sclorg/ruby-ex.git\n\n to build a new example application in Ruby. Or use kubectl to deploy a\n simple Kubernetes application:\n\n kubectl create deployment hello-node\n --image=gcr.io/hello-minikube-zero-install/hello-node\n\n Already on project "wordpress" on server\n "https://api.socp.twentynet.local:6443".\n\n clusterrole.rbac.authorization.k8s.io/system:openshift:scc:anyuid\n added: "default"error: --overwrite is false but found the following\n declared annotation(s):\n \'storageclass.kubernetes.io/is-default-class\' already has a value\n (true)\n\n service/wordpress-http created\n\n service/wordpress-mysql created\n\n persistentvolumeclaim/mysql-pv-claim created\n\n persistentvolumeclaim/wp-pv-claim created\n\n secret/mysql-pass created\n\n deployment.apps/wordpress-mysql created\n\n deployment.apps/wordpress created\n\n route.route.openshift.io/wordpress-http created\n\n URL to access application\n\n wordpress-http-wordpress.apps.socp.twentynet.local\n\n')])])]),a("h3",{attrs:{id:"verifying-the-wordpress-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#verifying-the-wordpress-deployment"}},[e._v("#")]),e._v(" Verifying the WordPress deployment")]),e._v(" "),a("ol",[a("li",[e._v("Execute the following command to verify the persistent volume\nassociated with WordPress application and MySQL database.")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" oc get pods,pvc,route -n wordpress\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" NAME READY STATUS RESTARTS AGE\n\n pod/wordpress-6f69797b8f-hqpss 1/1 Running 0 5m52s\n\n pod/wordpress-mysql-8f4b599b5-cd2s2 1/1 Running 0 5m52s\n\n NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE\n\n persistentvolumeclaim/mysql-pv-claim Bound\n pvc-ccf2a578-9ba3-4577-8115-7c80ac200a9c 5Gi RWO\n ocs-storagecluster-ceph-rbd 5m50s\n\n persistentvolumeclaim/wp-pv-claim Bound\n pvc-3acec0a0-943d-4138-bda9-5b57f8c35c5d 5Gi RWO\n ocs-storagecluster-ceph-rbd 5m50s\n\n NAME HOST/PORT PATH SERVICES PORT TERMINATION WILDCARD\n\n route.route.openshift.io/wordpress-http\n wordpress-http-wordpress.apps.socp.twentynet.local wordpress-http\n 80-tcp None\n\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[e._v("Access the route url in browser to access the WordPress application\nas shown below.")])]),e._v(" "),a("p",[a("img",{attrs:{src:s(463),alt:""}})]),e._v(" "),a("h2",{attrs:{id:"deploying-openshift-container-storage-with-vmware-vsphere"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploying-openshift-container-storage-with-vmware-vsphere"}},[e._v("#")]),e._v(" Deploying OpenShift Container Storage with VMware vSphere")]),e._v(" "),a("p",[e._v("OpenShift 4.6 provides software-defined storage that is optimized for\ncontainer environment. OpenShift Container Storage (OCS) can either be\ndeployed on vSphere or AWS Azure.")]),e._v(" "),a("p",[e._v("For more information on planning your infrastructure requirements for\nOCS, see\n"),a("a",{attrs:{href:"https://access.redhat.com/documentation/en-us/red_hat_openshift_container_storage/4.5/pdf/planning_your_deployment/Red_Hat_OpenShift_Container_Storage-4.5-Planning_your_deployment-en-US.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://access.redhat.com/documentation/en-us/red_hat_openshift_container_storage/4.5/pdf/planning_your_deployment/Red_Hat_OpenShift_Container_Storage-4.5-Planning_your_deployment-en-US.pdf"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("Use the Red HatÂ®OpenShiftÂ®Container Platform operator hub to install\nOCS on vSphere Platform. For more information on how to install OCS on\nvSphere using Red Hat OpenShift Container Platform, see\n"),a("a",{attrs:{href:"https://access.redhat.com/documentation/en-us/red_hat_openshift_container_storage/4.5/html/deploying_openshift_container_storage/index",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://access.redhat.com/documentation/en-us/red_hat_openshift_container_storage/4.5/html/deploying_openshift_container_storage/index"),a("OutboundLink")],1)]),e._v(" "),a("h3",{attrs:{id:"csi-driver-prior-to-container-storage-integration-csi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csi-driver-prior-to-container-storage-integration-csi"}},[e._v("#")]),e._v(" CSI Driver Prior to Container Storage Integration (CSI)")]),e._v(" "),a("p",[e._v("Kubernetes provided in-tree plugins to support volume. This posed a problem as\nstorage vendors had to align to the Kubernetes release process to fix a\nbug or to release new features. This also means every storage vendor had\ntheir own process to present volume to Kubernetes.")])])}),[],!1,null,null,null);t.default=n.exports}}]);