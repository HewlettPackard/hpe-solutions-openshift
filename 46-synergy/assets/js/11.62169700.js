(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{389:function(t,s,a){t.exports=a.p+"assets/img/Figure81.95309061.png"},390:function(t,s,a){t.exports=a.p+"assets/img/Figure82.ef0c6655.png"},391:function(t,s,a){t.exports=a.p+"assets/img/Figure83.cd60438a.png"},392:function(t,s,a){t.exports=a.p+"assets/img/Figure84.aafe9e5e.png"},393:function(t,s,a){t.exports=a.p+"assets/img/Figure85.56a54f30.png"},394:function(t,s,a){t.exports=a.p+"assets/img/Figure86.db01bca0.png"},395:function(t,s,a){t.exports=a.p+"assets/img/Figure87.53142edf.png"},396:function(t,s,a){t.exports=a.p+"assets/img/Figure88.db07fb04.png"},525:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"red-hat-openshift-container-platform-installation-in-the-restricted-network-environment"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#red-hat-openshift-container-platform-installation-in-the-restricted-network-environment"}},[t._v("#")]),t._v(" Red Hat OpenShift Container Platform installation in the restricted network environment")]),t._v(" "),e("h2",{attrs:{id:"solution-components-overview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#solution-components-overview"}},[t._v("#")]),t._v(" Solution components overview")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Download server")])]),t._v(" "),e("li",[e("p",[t._v("Centos Yum repository server")])]),t._v(" "),e("li",[e("p",[t._v("OpenShift Mirror registry")])]),t._v(" "),e("li",[e("p",[t._v("Installer machine")])]),t._v(" "),e("li",[e("p",[t._v("iPXE server")])]),t._v(" "),e("li",[e("p",[t._v("Load balancer")])]),t._v(" "),e("li",[e("p",[t._v("OpenShift cluster nodes")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Bootstrap node")])]),t._v(" "),e("li",[e("p",[t._v("Master nodes")])]),t._v(" "),e("li",[e("p",[t._v("Worker nodes")])])])])]),t._v(" "),e("p",[e("img",{attrs:{src:a(389),alt:""}})]),t._v(" "),e("p",[e("strong",[t._v("Figure 81.")]),t._v(" Air-gap installation architecture")]),t._v(" "),e("h2",{attrs:{id:"flow-of-execution"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flow-of-execution"}},[t._v("#")]),t._v(" Flow of Execution")]),t._v(" "),e("p",[e("img",{attrs:{src:a(390),alt:""}}),t._v(" "),e("strong",[t._v("Figure 82")]),t._v(". Air-gap insallation Solution Flow Diagram")]),t._v(" "),e("h2",{attrs:{id:"download-server"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#download-server"}},[t._v("#")]),t._v(" Download server")]),t._v(" "),e("p",[t._v("Download server is the server which has conditional internet access and\nis used to built on virtual machine with the following configurations")]),t._v(" "),e("ol",[e("li",[e("p",[t._v('OS - CentOS 7 with preinstalled packages such as "Development\nTools", "Compatibility Libraries", "System Administration\nTools"')])]),t._v(" "),e("li",[e("p",[t._v("CPU - 4 vCPU")])]),t._v(" "),e("li",[e("p",[t._v("Memory - 8 GB")])]),t._v(" "),e("li",[e("p",[t._v("Disk - 300 GB free space in the / partition")])]),t._v(" "),e("li",[e("p",[t._v("Network adapter - 1 network adapter with connectivity to the\nproduction network")])])]),t._v(" "),e("h3",{attrs:{id:"for-the-yum-repository-server"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-the-yum-repository-server"}},[t._v("#")]),t._v(" For the Yum repository server")]),t._v(" "),e("ol",[e("li",[t._v("Download the necessary RPM packages for yum-utils, epel-release,\ncreaterepo and nginx and zip them to a tar file")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/rpms\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /opt/hpe/solutions/hpe-solutions-openshift/rpms\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" http://mirror.centos.org/centos/7/os/x86_64/Packages/createrepo-0.9.9-28.el7.noarch.rpm\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" http://nginx.org/packages/mainline/centos/7/x86_64/RPMS/nginx-1.9.9-1.el7.ngx.x86_64.rpm\n")])])]),e("p",[t._v("Delta RPM (optional -> if minimal installation is done)")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" http://mirror.centos.org/centos/7/os/x86_64/Packages/deltarpm-3.6-3.el7.x86_64.rpm\n")])])]),e("p",[t._v("Python Delta RPM (optional -> if minimal installation is done)")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" http://mirror.centos.org/centos/7/os/x86_64/Packages/python-deltarpm-3.6-3.el7.x86_64.rpm\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zcf centos-rpms.tar.gz *\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("Download the base, extras, centosplus and updates repo to the\ndestination download directory")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/yum_repos\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /opt/hpe/solutions/hpe-solutions-openshift/yum_repos\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" epel-release createrepo yum-utils reposync\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reposync --gpgcheck -l --repoid"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("base\n--download_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/hpe/solutions/hpe-solutions-openshift/yum_repos\n--downloadcomps --download-metadata\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reposync --gpgcheck -l --repoid"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("extras\n--download_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/hpe/solutions/hpe-solutions-openshift/yum_repos\n--downloadcomps --download-metadata\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reposync --gpgcheck -l --repoid"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("updates\n--download_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/hpe/solutions/hpe-solutions-openshift/yum_repos\n--downloadcomps --download-metadata\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reposync --gpgcheck -l --repoid"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("centosplus\n--download_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/hpe/solutions/hpe-solutions-openshift/yum_repos\n--downloadcomps --download-metadata\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zvcf centos-yum-repository.tar.gz *\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("Securely transfer the zipped files to the server to be used as a yum\nrepository server")])]),t._v(" "),e("h3",{attrs:{id:"for-the-mirror-registry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-the-mirror-registry"}},[t._v("#")]),t._v(" For the mirror registry")]),t._v(" "),e("ol",[e("li",[t._v("Create the directories needed for the mirror repository")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/registry\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("REGISTRY_BASE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/opt/hpe/solutions/hpe-solutions-openshift/registry"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("auth,certs,data,downloads"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("images,tools,secrets"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v('Set the hostname of the server and update the hostname of the\nexternal server in the "hosts" file:')])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hostnamectl set-hostname "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("registry_hostname"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/hosts\n\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("registry_hostname"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("Registry_hostname refers to common hostname/FQDN of the download\nservers and the internal mirror registry.")]),t._v(" "),e("p",[t._v("It is not necessary to create the DNS entry of the download server.")])]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("Download the necessary packages")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  yum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y jq openssl podman p7zip httpd-tools "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("screen")]),t._v("\nnmap telnet "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ftp")]),t._v(" tftp openldap-clients tcpdump wireshark xorg-x11-xauth\ntmux net-tools nfs-utils sg3_utils bind-utils rlwrap uucp\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Generating the self-signed certificate '")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/certs/\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("csr_answer.txt "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" EOF\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n default_bits "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v("\n\n prompt "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" no\n\n default_md "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sha256\n\n distinguished_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dn\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" dn "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("C")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("US\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ST")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("New York\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("L")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("New York\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("O")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("MyOrg\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("OU")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("MyOU\n\n "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("emailAddress")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("**"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("email_address"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("**\n\n CN "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" **"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("replace with registry server hostname/FQDN. This is same as\n the internal mirror registry hostname/FQDN"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("**\n\n EOF\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" openssl req -newkey rsa:4096 -nodes -sha256 -keyout domain.key -x509\n-days "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("365")]),t._v(" -out domain.crt -config "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" csr_answer.txt "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[t._v("List and verify the generated self-signed certificate - there would\nbe domain.crt and domain.key files within the\n${REGISTRY_BASE}/certs/ directory.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ll "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/certs/\n")])])]),e("ol",{attrs:{start:"6"}},[e("li",[t._v("Generate the credentials to access the registry")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" htpasswd -bBc "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/auth/htpasswd myuser mypassword\n")])])]),e("ol",{attrs:{start:"7"}},[e("li",[t._v("Open firewall port 5000 to enable accessing the registry")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FIREWALLD_DEFAULT_ZONE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("firewall-cmd --get-default-zone"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$FIREWALLD_DEFAULT_ZONE")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$FIREWALLD_DEFAULT_ZONE")]),t._v("\n--permanent\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" firewall-cmd --reload\n")])])]),e("ol",{attrs:{start:"8"}},[e("li",[t._v("Create/Run the registry container")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" podman run --name my-registry --rm -d -p "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(":5000 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/data:/var/lib/registry:z "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/auth:/auth:z -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"REGISTRY_AUTH=htpasswd"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"REGISTRY_AUTH_HTPASSWD_REALM=Registry"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"REGISTRY_HTTP_SECRET=ALongRandomSecretForRegistry"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("REGISTRY_AUTH_HTPASSWD_PATH")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/auth/htpasswd "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/certs:/certs:z "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("REGISTRY_HTTP_TLS_CERTIFICATE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/certs/domain.crt "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("REGISTRY_HTTP_TLS_KEY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/certs/domain.key "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n docker.io/library/registry:2\n")])])]),e("ol",{attrs:{start:"9"}},[e("li",[t._v("Verify connectivity to your registry with curl. Provide it the\nusername and password you created.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -u myuser:mypassword -k https://"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("registry_hostname_fqdn"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":5000/v2/_catalog\n")])])]),e("p",[t._v('This should return an "empty" repository for now')]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(' {"repositories":[]}\n')])])]),e("ol",{attrs:{start:"10"}},[e("li",[t._v("Syncing the repositories")])]),t._v(" "),e("p",[t._v("Export the OCP Release version")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("OCP_RELEASE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -s https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/release.txt"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Name:'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NF")]),t._v("}'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"export OCP_RELEASE='),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${OCP_RELEASE}")]),t._v('"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/tools/env_ocp\n")])])]),e("p",[t._v("Download openshift client tool")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux-"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${OCP_RELEASE}")]),t._v(".tar.gz -P "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/tools/\n")])])]),e("p",[t._v("Untar the openshift client tool and create a soft link")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xzf "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/tools/openshift-client-linux-"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${OCP_RELEASE}")]),t._v(".tar.gz -C "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/tools/\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" -s "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/tools/oc /usr/local/bin/oc\n")])])]),e("p",[t._v("Retrieve and create the necessary pull secrets/credentials files")]),t._v(" "),e("ul",[e("li",[t._v("Navigate to the ${REGISTRY_BASE}/downloads/secrets/")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/secrets/\n")])])]),e("ul",[e("li",[e("p",[t._v("Login to the Red Hat account and Navigate to the "),e("a",{attrs:{href:"https://cloud.redhat.com/openshift/install/pull-secret",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://cloud.redhat.com/openshift/install/pull-secret"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[t._v("Create a file for the copied pull-secret and validate the same")])])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" pull-secret.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" EOF\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Copied-pull-secret"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n EOF\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" pull-secret.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq\n")])])]),e("ul",[e("li",[t._v("Generate a base64 output from the user+password string")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -n "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myuser:mypassword'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" base64 -w0\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("REG_SECRET")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -n "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myuser:mypassword'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" base64 -w0"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n")])])]),e("ul",[e("li",[t._v("Create a bundle json file with all the registries and validate the\nsame")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" pull-secret.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'.auths +=\n{"<registry_server_fqdn>:5000": {"auth":\n"REG_SECRET","email": "**<email_address>**"}}\'')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s/REG_SECRET/'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$REG_SECRET")]),t._v('/"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" pull-secret-bundle.json\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" pull-secret-bundle.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("Update the <registry_server_fqdn> field in the above command and all\nthe subsequent occurances of similar flag with the fully qualified\ndomain name of the registry server as per the DNS entry. Update the\n<email_address> field with the email address used during the\ncertificate creation.")])]),t._v(" "),e("ul",[e("li",[t._v("Create a json file specifically for the mirror registry and validate\nthe same")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{ \"auths\": {}}'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'.auths +=\n {"<registry_server_fqdn>:5000": {"auth":\n "REG_SECRET","email": "**<email_address>**"}}\'')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s/REG_SECRET/'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$REG_SECRET")]),t._v('/"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq -c ."),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" pull-secret-registry.json\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" pull-secret-registry.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq\n")])])]),e("ul",[e("li",[t._v("Trust the self-signed certificate generated earlier")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/certs/domain.crt\n /etc/pki/ca-trust/source/anchors/\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" update-ca-trust extract\n")])])]),e("p",[t._v("Export a few more variable for the mirroring process and write them\ninto the environment variables file which can be later used to source")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("LOCAL_REGISTRY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<registry_server_fqdn>:5000'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("OCP_RELEASE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${OCP_RELEASE}")]),t._v('-x86_64"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("LOCAL_REPOSITORY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ocp/openshift4'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PRODUCT_REPO")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'openshift-release-dev'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("LOCAL_SECRET_JSON")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v('/downloads/secrets/pull-secret-bundle.json"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RELEASE_NAME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ocp-release"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GODEBUG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x509ignoreCN=0"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"export\n LOCAL_REGISTRY='<registry_server_fqdn>:5000'\"")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/tools/env_ocp\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[[ ! "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${OCP_RELEASE}")]),t._v(" =~ '")]),t._v("x86_64"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' ]] && export\n OCP_RELEASE=\""),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${OCP_RELEASE}")]),t._v("-x86_64\"'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/tools/env_ocp\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"export LOCAL_REPOSITORY='ocp/openshift4'\"")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/tools/env_ocp\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"export PRODUCT_REPO='openshift-release-dev'\"")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/tools/env_ocp\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export\n LOCAL_SECRET_JSON=\""),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/secrets/pull-secret-bundle.json\"'")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/tools/env_ocp\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export RELEASE_NAME=\"ocp-release\"'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/tools/env_ocp\n")])])]),e("p",[t._v("Start the oc release mirroring process")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oc adm -a "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LOCAL_SECRET_JSON}")]),t._v(" release mirror "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n --from"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("quay.io/"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PRODUCT_REPO}")]),t._v("/"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${RELEASE_NAME}")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${OCP_RELEASE}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n --to"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LOCAL_REGISTRY}")]),t._v("/"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LOCAL_REPOSITORY}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n --to-release-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LOCAL_REGISTRY}")]),t._v("/"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LOCAL_REPOSITORY}")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${OCP_RELEASE}")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/secrets/mirror-output.txt\n")])])]),e("ol",{attrs:{start:"11"}},[e("li",[t._v("Generating the openshift binary and validating the same")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/tools/\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oc adm -a "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LOCAL_SECRET_JSON}")]),t._v(" release extract\n --command"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("openshift-install\n "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LOCAL_REGISTRY}")]),t._v("/"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LOCAL_REPOSITORY}")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${OCP_RELEASE}")]),t._v('"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v(" -"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" this should "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),e("ol",{attrs:{start:"12"}},[e("li",[t._v("Save the Registry container")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" podman stop my-registry\n")])])]),e("p",[t._v("(optional)")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" podman "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" --force my-registry\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" podman save docker.io/library/registry:2 -o\n "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/images/registry.tar\n")])])]),e("ol",{attrs:{start:"13"}},[e("li",[t._v("Remove the unwanted certificates and generate the tar file of the\ncontents within registry directory. We will be creating a new\ncertificate for the internal mirror registry server")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -f "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/certs/domain.*\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zvcf ocp45-registry.tar.gz *\n")])])]),e("ol",{attrs:{start:"14"}},[e("li",[t._v("This can be securely transferred to the server which is meant to be\nused as a mirror-registry for installing OCP in the restricted\nenvironment.")])]),t._v(" "),e("h3",{attrs:{id:"for-the-installer-machine"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-the-installer-machine"}},[t._v("#")]),t._v(" For the installer machine")]),t._v(" "),e("ol",[e("li",[t._v("Create a new directory for storing the files related to installer\nmachine")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/installer\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("Navigate to the\n/opt/hpe/solutions/hpe-solutions-openshift/registry/downloads/tools/\nand copy the tools oc, kubectl and openshift-install into the folder\n/opt/hpe/solutions/hpe-solutions-openshift/installer.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /opt/hpe/solutions/hpe-solutions-openshift/registry/downloads/tools/\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" kubectl oc openshift-install\n/opt/hpe/solutions/hpe-solutions-openshift/installer\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("Create a install-config.yaml template file within\n/opt/hpe/solutions/hpe-solutions-openshift/installer directory")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /opt/hpe/solutions/hpe-solutions-openshift/installer/install-config.yaml "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" EOF\n")])])]),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("baseDomain")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("controlPlane")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hyperthreading")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Enabled\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("compute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" worker\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hyperthreading")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Enabled\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networking")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterNetworks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cidr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10.128.0.0/14\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPrefix")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("machineNetwork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cidr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 172.18.0.0/16\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networkType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OpenShiftSDN\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceNetwork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 172.30.0.0/16\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("platform")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("none")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fips")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pullSecret")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sshKey")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("additionalTrustBundle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("BEGIN CERTIFICATE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n\n <"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("base"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("encoded"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DER "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CA certificate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("END CERTIFICATE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n\n EOF\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Tar the files corresponding to installer machine and securely\ntransfer them to the server which is meant to be used as an\ninstaller for installing OCP in the restricted environment")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /opt/hpe/solutions/hpe-solutions-openshift/installer\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zvcf installer.tar.gz *\n")])])]),e("h3",{attrs:{id:"for-the-ipxe-server"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-the-ipxe-server"}},[t._v("#")]),t._v(" For the iPXE server")]),t._v(" "),e("ol",[e("li",[t._v("Create a directory as a destination and download the necessary RPMs\nas follows")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/coreos-images\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /opt/hpe/solutions/hpe-solutions-openshift/coreos-images\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://www.rpmfind.net/linux/centos/7.8.2003/extras/x86_64/Packages/python-httplib2-0.9.2-1.el7.noarch.rpm\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://www.rpmfind.net/linux/centos/7.8.2003/os/x86_64/Packages/python-jinja2-2.7.2-4.el7.noarch.rpm\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://www.rpmfind.net/linux/epel/7/ppc64le/Packages/p/python-keyczar-0.71c-2.el7.noarch.rpm\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://www.rpmfind.net/linux/centos/7.8.2003/extras/x86_64/Packages/sshpass-1.06-2.el7.x86_64.rpm\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://www.rpmfind.net/linux/centos/7.8.2003/extras/x86_64/Packages/python-crypto-2.6.1-1.el7.centos.x86_64.rpm\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://releases.ansible.com/ansible/rpm/release/epel-7-x86_64/ansible-2.9.9-1.el7.ans.noarch.rpm\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("Retrieve the OCP ISO version")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("OCP_ISO_VERSION")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -s https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/sha256sum.txt"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" live "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" -F"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("- "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v("}'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("head")]),t._v(" -1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${OCP_ISO_VERSION}")]),t._v("\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("Download the CoreOS images")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/rhcos-"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${OCP_ISO_VERSION}")]),t._v("-x86_64-live-initramfs.x86_64.img\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/rhcos-"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${OCP_ISO_VERSION}")]),t._v("-x86_64-live-kernel-x86_64\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/rhcos-"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${OCP_ISO_VERSION}")]),t._v("-x86_64-live-rootfs.x86_64.img\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Download git and git repositories - hpe-solutions-openshift and\nmatchbox with the following commands")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" -y\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/HewlettPackard/hpe-solutions-openshift.git\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://github.com/poseidon/matchbox/releases/download/v0.8.0/matchbox-v0.8.0-linux-amd64.tar.gz\n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[t._v("Generate the Tar file of the images")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zcf ipxe.tar.gz *\n")])])]),e("ol",{attrs:{start:"6"}},[e("li",[t._v("This can be securely transferred to the server which is meant to be\nused as the iPXE server for installing OCP in the restricted\nenvironment.")])]),t._v(" "),e("p",[t._v("Ansible and python setup -\n"),e("a",{attrs:{href:"https://medium.com/@theking99984/how-to-install-ansible-offline-on-centos-and-rhel-f3c872b2d91e",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://medium.com/@theking99984/how-to-install-ansible-offline-on-centos-and-rhel-f3c872b2d91e"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"centos-7-internal-yum-server"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#centos-7-internal-yum-server"}},[t._v("#")]),t._v(" CentOS 7 internal Yum Server")]),t._v(" "),e("ol",[e("li",[t._v("CentOS 7 Yum server is offline/disconnected server which has\nconditional internet access and is used as a remote yum server for\nthe restricted network centos servers. It built on virtual machine\nwith the following configurations")])]),t._v(" "),e("p",[t._v("a.  OS - CentOS 7 with preinstalled packages as follows")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('- "Development Tools"\n\n- "Compatibility Libraries"\n\n- "System Administration Tools"\n')])])]),e("p",[t._v("b.  CPU - 4 vCPU")]),t._v(" "),e("p",[t._v("c.  Memory - 8 GB")]),t._v(" "),e("p",[t._v("d.  Disk - 300 GB free space in the / partition")]),t._v(" "),e("p",[t._v("e.  Network adapter - 1 network adapter with connectivity to the\nproduction network")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[t._v("Refer to the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#non-root-user-access"}},[t._v("setup the non-root")]),t._v(" section of\nthe deployment guide to create a non-root user and switch to the\nthus created non-root user")],1)]),t._v(" "),e("li",[e("p",[t._v("Navigate to the folder that contains the centos-rpms.tar.gz and\ncentos-yum -repository.tar.gz shared from the download server")])])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" path/to/copied/tar/file/centos-rpms.tar.gz\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Extract the tar file centos-rpms.tar.gz consisting of the RPMs\nneeded to bring up the offline/disconnected CentOS Yum server.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xvf centos-rpms.tar.gz\n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[t._v("Install the RPMs")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" -ivh nginx-1.9.9-1.el7.ngx.x86_64.rpm\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("optional"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" -ivh deltarpm-3.6-3.el7.x86_64.rpm\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("optional"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" -ivh python-deltarpm-3.6-3.el7.x86_64.rpm\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" -ivh createrepo-0.9.9-28.el7.noarch.rpm\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("Try with --nodeps option if its failing")])]),t._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[t._v("Enable, start and verify the status of Nginx web service.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start nginx\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl status nginx\n")])])]),e("ol",{attrs:{start:"7"}},[e("li",[t._v("Move and untar the "),e("em",[t._v("centos-yum-repository.tar.gz")]),t._v(" to the root\ndirectory of the Nginx server i.e, /usr/share/nginx/html/")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xvf path/to/copied/tar/file/centos-yum-repository.tar.gz -C\n/usr/share/nginx/html/\n")])])]),e("ol",{attrs:{start:"8"}},[e("li",[t._v("Create the Yum repos for base, extras, updates and centosplus repos.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" createrepo /usr/share/nginx/html/base/\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" createrepo /usr/share/nginx/html/centosplus/\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" createrepo /usr/share/nginx/html/extras/\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" createrepo /usr/share/nginx/html/updates/\n")])])]),e("ol",{attrs:{start:"9"}},[e("li",[t._v("Update the Nginx configuration file with the following details to\nhost the Yum repository.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/nginx/conf.d/repos.conf\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" server {\n\n listen 80;\n\n server_name **<IP_address_or_FQDN_of_the_centos_yum_server>;**\n\n root /usr/share/nginx/html/;\n\n location / {\n\n index index.php index.html index.htm;\n\n autoindex on; #enable listing of directory index\n\n }\n\n }\n")])])]),e("ol",{attrs:{start:"10"}},[e("li",[e("p",[t._v("Remove/rename files with extention .html in /usr/share/nginx/html/")])]),t._v(" "),e("li",[e("p",[t._v("Restart the nginx web service")])])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl restart nginx\n")])])]),e("ol",{attrs:{start:"12"}},[e("li",[t._v("Update the firewall ports to allow http communication.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FIREWALLD_DEFAULT_ZONE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("firewall-cmd --get-default-zone"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$FIREWALLD_DEFAULT_ZONE")]),t._v("\n--permanent\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" firewall-cmd --reload\n")])])]),e("ol",{attrs:{start:"13"}},[e("li",[t._v("Validate the creation of yum server with the following command. You\nshould be able to the see the following content")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" http://"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IP_address_or_FQDN_of_the_centos_yum_server"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/\n")])])]),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[t._v(" "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Index of /"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("bgcolor")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("white"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Index of /"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("hr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("pre")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("../"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("../"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("base/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("base/"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("centosplus/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("centosplus/"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("extras/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("extras/"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("updates/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("updates/"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("50x.html.bck"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("50x.html.bck"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("index.html.bck"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("index.html.bck"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("pre")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("hr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("Reference")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.tecmint.com/setup-local-http-yum-repository-on-centos-7/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.tecmint.com/setup-local-http-yum-repository-on-centos-7/"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"mirror-registry-internal-registry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mirror-registry-internal-registry"}},[t._v("#")]),t._v(" Mirror registry (Internal registry)")]),t._v(" "),e("p",[t._v("Mirror registry is the server which serves as the container registry for\nthe Red Hat OpenShift Container Platform cluster, this server does not\nhave internet access and is built on virtual machine with the following\nconfigurations")]),t._v(" "),e("p",[t._v("a.  OS - CentOS 7 with preinstalled packages as follows")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('- "Development Tools"\n\n- "Compatibility Libraries"\n\n- "System Administration Tools"\n')])])]),e("p",[t._v("b.  CPU - 4 vCPU")]),t._v(" "),e("p",[t._v("c.  Memory - 8 GB")]),t._v(" "),e("p",[t._v("d.  Disk - 300 GB free space in the / partition")]),t._v(" "),e("p",[t._v("e.  Network adapter - 1 network adapter with connectivity to the\nproduction network")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Refer to the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#non-root-user-access"}},[t._v("setup the non-root")]),t._v("section of\nthe deployment guide to create a non-root user and switch to the\nthus created non-root user")],1)]),t._v(" "),e("li",[e("p",[t._v("Refer to the "),e("RouterLink",{attrs:{to:"/Additional-Features-and-Functionality/Air-gap-Installation.html#setup-centos-servers-to-use-internal-yum-server"}},[t._v("Setup centos servers to use internal yum\nserver")]),t._v(" section of the deployment\nguide to enable offline package/module installation for the mirror\nregistry")],1)]),t._v(" "),e("li",[e("p",[t._v("Set the hostname of the internal registry server and update the same\nin /etc/hosts file as follows:")])])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hostnamectl set-hostname registry\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/hosts\n\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("registry_hostname"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("Registry_hostname refers to common hostname/FQDN of the download servers\nand the internal mirror registry.")]),t._v(" "),e("p",[t._v("It is not necessary to create the DNS entry of the download server.")])]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Create a directory for the mirror-registry files")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /opt/hpe/solutions/hpe-solutions-openshift/registry\n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[t._v("Move and extract the ocp45-registry.tar.gz file from the\ndownload/external server to the location\n/opt/hpe/solutions/hpe-solutions-openshift/registry")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("REGISTRY_BASE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/hpe/solutions/hpe-solutions-openshift/registry\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xvf /path/to/ocp45-registry.tar.gz -C "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$REGISTRY_BASE")]),t._v("\n")])])]),e("ol",{attrs:{start:"6"}},[e("li",[t._v("Source the environment variables as saved in env_ocp file from the\ndownload/external server")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$REGISTRY_BASE")]),t._v("/downloads/tools/env_ocp\n")])])]),e("ol",{attrs:{start:"7"}},[e("li",[t._v("Create the certificate for the internal registry server")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$REGISTRY_BASE")]),t._v("/certs/\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" openssl req -newkey rsa:4096 -nodes -sha256 -keyout domain.key\n -x509 -days "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("365")]),t._v(" -out domain.crt\n")])])]),e("p",[t._v("Provide the following details when prompted")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" Country Name (2 letter code) [AU] : US\n\n State or Province Name (full name) : New York\n\n Locality Name (eg, city) [] : New York\n\n Organization Name (eg, company) : MyOrg\n\n Organizational Unit Name (eg, section) [] : MyOU\n\n Common Name (e.g. server FQDN or YOUR name) [] :\n <registry_server_fqdn -> same as external download server fqdn>\n\n Email Address [] : <email_address>\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("Provide the same email ID for the flag <email_address> as provided in\nthe external download server while downloading the openshift images.")])]),t._v(" "),e("ol",{attrs:{start:"8"}},[e("li",[t._v("Trust the self-signed certificate generated earlier")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$REGISTRY_BASE")]),t._v("/certs/domain.crt\n/etc/pki/ca-trust/source/anchors/\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" update-ca-trust extract\n")])])]),e("ol",{attrs:{start:"9"}},[e("li",[t._v("Install podman")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" podman -y\n")])])]),e("ol",{attrs:{start:"10"}},[e("li",[t._v("Load the registry container image and verify the same using the\nfollowing command")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("> sudo podman load -i $REGISTRY_BASE/downloads/images/registry.tar\n\n> sudo podman image list\n")])])]),e("ol",{attrs:{start:"11"}},[e("li",[t._v("Update the Firewall rules to open the ports 5000 using the following\ncommands")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FIREWALLD_DEFAULT_ZONE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("firewall-cmd --get-default-zone"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$FIREWALLD_DEFAULT_ZONE")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("$\n FIREWALLD_DEFAULT_ZONE --permanent\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" firewall-cmd --reload\n")])])]),e("ol",{attrs:{start:"12"}},[e("li",[t._v("Run the podman registry container and verify the same using the\nfollowing commands")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" podman run --name my-registry --rm -d -p "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(":5000 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$REGISTRY_BASE")]),t._v("/data:/var/lib/registry:z "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$REGISTRY_BASE")]),t._v("/auth:/auth:z "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"REGISTRY_AUTH=htpasswd"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"REGISTRY_AUTH_HTPASSWD_REALM=Registry"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"REGISTRY_HTTP_SECRET=ALongRandomSecretForRegistry"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("REGISTRY_AUTH_HTPASSWD_PATH")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/auth/htpasswd "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$REGISTRY_BASE")]),t._v("/certs:/certs:z "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("REGISTRY_HTTP_TLS_CERTIFICATE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/certs/domain.crt "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("REGISTRY_HTTP_TLS_KEY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/certs/domain.key\n docker.io/library/registry:2\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" podman "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -u myuser:mypassword -k https://"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("registry_hostname_fqdn"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":5000/v2/_catalog\n")])])]),e("p",[t._v("Replace the "),e("strong",[t._v("<registry_hostname_fqdn>")]),t._v(" to the fully qualified domain\nname of the internal mirror registry server. Output of the above command\nshould be as follows:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('{"repositories":[ocp/openshift4]}\n')])])]),e("h2",{attrs:{id:"dns-entries"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dns-entries"}},[t._v("#")]),t._v(" DNS entries")]),t._v(" "),e("p",[t._v("Consult the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/User-provisioned-DNS-requirements.html#user-provisioned-dns-requirements"}},[t._v("User Provisioned DNS requirements")]),t._v(" section for details on\ncreating the DNS entries required for the Red Hat OpenShift Container\nPlatform installation.")],1),t._v(" "),e("h2",{attrs:{id:"load-balance-server-with-haproxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#load-balance-server-with-haproxy"}},[t._v("#")]),t._v(" Load balance server with HAProxy")]),t._v(" "),e("p",[t._v("This server is used as a load balancer for the Red Hat OpenShift\nContainer Platform cluster, this server does not have internet access\nand is built on virtual machine with the following configurations")]),t._v(" "),e("p",[t._v("a.  OS - CentOS 7 with preinstalled packages as follows")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('- "Development Tools"\n\n- "Compatibility Libraries"\n\n- "System Administration Tools"\n')])])]),e("p",[t._v("b.  CPU - 4 vCPU")]),t._v(" "),e("p",[t._v("c.  Memory - 8 GB")]),t._v(" "),e("p",[t._v("d.  Disk - 150 GB")]),t._v(" "),e("p",[t._v("e.  Network adapter - 1 network adapter with connectivity to the\nproduction network")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Refer to the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#non-root-user-access"}},[t._v("setup the non-root")]),t._v(" section of\nthe deployment guide to create a non-root user and switch to the\nthus created non-root user")],1)]),t._v(" "),e("li",[e("p",[t._v("Refer to the "),e("RouterLink",{attrs:{to:"/Additional-Features-and-Functionality/Air-gap-Installation.html#setup-centos-servers-to-use-internal-yum-server"}},[t._v("Setup centos servers to use internal yum\nserver")]),t._v("  section of the deployment\nguide to enable offline package/module installation for the mirror\nregistry")],1)]),t._v(" "),e("li",[e("p",[t._v("Disable SELinux")])])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" -i "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/enforcing/disabled/g'")]),t._v(" /etc/selinux/config\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Set the hostname of the loadbalancer server as follows:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hostnamectl set-hostname "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("loadbalancer_fqdn"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("A reboot may be required at this point to reflect the changes done so\nfar.")])]),t._v(" "),e("p",[t._v("To check selinux status, use the following command.")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" getenforce\n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[t._v("Install HAProxy using the following command")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" haproxy\n")])])]),e("ol",{attrs:{start:"6"}},[e("li",[t._v("Update the HAProxy configuration file present at\n/etc/haproxy/haproxy.cfg as follows")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/haproxy/haproxy.cfg\n")])])]),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#---------------------------------------------------------------------")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example configuration for a possible web application. See the")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# full configuration options online.")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <http://haproxy.1wt.eu/download/1.4/doc/configuration.txt>")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#---------------------------------------------------------------------")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#---------------------------------------------------------------------")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Global settings")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#---------------------------------------------------------------------")]),t._v("\n\n global\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# to have these messages end up in /var/log/haproxy.log you will")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# need to:")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1) configure syslog to accept network log events. This is done")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# by adding the '-r' option to the SYSLOGD_OPTIONS in")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /etc/sysconfig/syslog")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2) configure local2 events to go to the /var/log/haproxy.log")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# file. A line like the following can be added to")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /etc/sysconfig/syslog")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# local2.* /var/log/haproxy.log")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n log 127.0.0.1 local2\n\n chroot /var/lib/haproxy\n\n pidfile /var/run/haproxy.pid\n\n maxconn 4000\n\n user haproxy\n\n group haproxy\n\n daemon\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# turn on stats unix socket")]),t._v("\n\n stats socket /var/lib/haproxy/stats\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#---------------------------------------------------------------------")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# common defaults that all the 'listen' and 'backend' sections")]),t._v("\n will\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use if not designated in their block")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#---------------------------------------------------------------------")]),t._v("\n\n defaults\n\n mode http\n\n log global\n\n option httplog\n\n option dontlognull\n\n option http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("close\n\n option forwardfor except 127.0.0.0/8\n\n option redispatch\n\n retries 3\n\n timeout http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("request 10s\n\n timeout queue 1m\n\n timeout connect 10s\n\n timeout client 1m\n\n timeout server 1m\n\n timeout http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("keep"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alive 10s\n\n timeout check 10s\n\n maxconn 3000\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#---------------------------------------------------------------------")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# main frontend which proxys to the backends")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#---------------------------------------------------------------------")]),t._v("\n\n frontend main "),e("span",{pre:!0,attrs:{class:"token important"}},[t._v("*:")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("\n\n acl url_static path_beg "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("i /static /images /javascript /stylesheets\n\n acl url_static path_end "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("i .jpg .gif .png .css .js\n\n use_backend static if url_static\n\n default_backend app\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#---------------------------------------------------------------------")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# static backend for serving up images, stylesheets and such")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#---------------------------------------------------------------------")]),t._v("\n\n backend static\n\n balance roundrobin\n\n server static 127.0.0.1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("4331 check\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#---------------------------------------------------------------------")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# round robin balancing between the various backends")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#---------------------------------------------------------------------")]),t._v("\n\n backend app\n\n balance roundrobin\n\n server app1 127.0.0.1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5001 check\n\n server app2 127.0.0.1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5002 check\n\n server app3 127.0.0.1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5003 check\n\n server app4 127.0.0.1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5004 check\n\n frontend openshift"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("api"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server\n\n bind "),e("span",{pre:!0,attrs:{class:"token important"}},[t._v("*:")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6443")]),t._v("\n\n default_backend openshift"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("api"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server\n\n mode tcp\n\n option tcplog\n\n backend openshift"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("api"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server\n\n balance source\n\n mode tcp\n\n server ocpboot ocpboot.ocp.twentynet.local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("6443 check\n\n server ocpmaster1 ocpmaster1.ocp.twentynet.local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("6443 check\n\n server ocpmaster2 ocpmaster2.ocp.twentynet.local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("6443 check\n\n server ocpmaster3 ocpmaster3.ocp.twentynet.local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("6443 check\n\n frontend machine"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server68\n\n bind "),e("span",{pre:!0,attrs:{class:"token important"}},[t._v("*:")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("22623")]),t._v("\n\n default_backend machine"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server\n\n mode tcp\n\n option tcplog\n\n backend machine"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server\n\n balance source\n\n mode tcp\n\n server ocpboot ocpboot.ocp.twentynet.local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("22623 check\n\n server ocpmaster1 ocpmaster1.ocp.twentynet.local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("22623 check\n\n server ocpmaster2 ocpmaster2.ocp.twentynet.local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("22623 check\n\n server ocpmaster3 ocpmaster3.ocp.twentynet.local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("22623 check\n\n frontend ingress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("http\n\n bind "),e("span",{pre:!0,attrs:{class:"token important"}},[t._v("*:")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n\n default_backend ingress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("http\n\n mode tcp\n\n option tcplog\n\n backend ingress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("http\n\n balance source\n\n mode tcp\n\n server ocpworker1 ocpworker1.ocp.twentynet.local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("80 check\n\n server ocpworker2 ocpworker2.ocp.twentynet.local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("80 check\n\n server ocpworker3 ocpworker3.ocp.twentynet.local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("80 check\n\n frontend ingress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("https\n\n bind "),e("span",{pre:!0,attrs:{class:"token important"}},[t._v("*:")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v("\n\n default_backend ingress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("https\n\n mode tcp\n\n option tcplog\n\n backend ingress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("https\n\n balance source\n\n mode tcp\n\n server ocpworker1 ocpworker1.ocp.twentynet.local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("443 check\n\n server ocpworker2 ocpworker2.ocp.twentynet.local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("443 check\n\n server ocpworker3 ocpworker3.ocp.twentynet.local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("443 check\n")])])]),e("ol",{attrs:{start:"7"}},[e("li",[t._v("Start the haproxy service")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start haproxy\n")])])]),e("ol",{attrs:{start:"8"}},[e("li",[t._v("Update the Firewall rules to open the ports 80, 443, 6443, 22623\nusing the following commands")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FIREWALLD_DEFAULT_ZONE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("firewall-cmd --get-default-zone"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$FIREWALLD_DEFAULT_ZONE")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("/tcp\n--zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$FIREWALLD_DEFAULT_ZONE")]),t._v(" --permanent\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v("/tcp\n--zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$FIREWALLD_DEFAULT_ZONE")]),t._v(" --permanent\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6443")]),t._v("/tcp\n--zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$FIREWALLD_DEFAULT_ZONE")]),t._v(" --permanent\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("22623")]),t._v("/tcp\n--zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$FIREWALLD_DEFAULT_ZONE")]),t._v(" --permanent\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" firewall-cmd --reload\n")])])]),e("p",[t._v("The load balance node is now ready to be used.")]),t._v(" "),e("h2",{attrs:{id:"installer-machine"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installer-machine"}},[t._v("#")]),t._v(" Installer machine")]),t._v(" "),e("p",[t._v("This machine acts as the installer machine for deploying CoreOS for the\nRed Hat OpenShift Container Platform cluster nodes, this server does not\nhave internet access and is built on virtual machine with the following\nconfigurations")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("OS - CentOS 7 with preinstalled packages as follows")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('  - "Development Tools"\n\n  - "Compatibility Libraries"\n\n  - "System Administration Tools"\n')])])])]),t._v(" "),e("li",[e("p",[t._v("CPU - 4 vCPU")])]),t._v(" "),e("li",[e("p",[t._v("Memory - 8 GB")])]),t._v(" "),e("li",[e("p",[t._v("Disk - 150 GB free space in the / partition")])]),t._v(" "),e("li",[e("p",[t._v("Network adapter - 1 network adapter with connectivity to the\nproduction network")])])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Refer to the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#non-root-user-access"}},[t._v("setup the non-root")]),t._v(" section of\nthe deployment guide to create a non-root user and switch to the\nthus created non-root user.")],1)]),t._v(" "),e("li",[e("p",[t._v("Refer to the "),e("RouterLink",{attrs:{to:"/Additional-Features-and-Functionality/Air-gap-Installation.html#setup-centos-servers-to-use-internal-yum-server"}},[t._v("Setup centos servers to use internal yum\nserver")]),t._v("  section of the deployment\nguide to enable offline package/module installation for the mirror\nregistry.")],1)]),t._v(" "),e("li",[e("p",[t._v("Navigate to the path to the installer.tar.gz file from the download\nserver and untar it.")])])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /path/to/installer.tar.gz\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xvf installer.tar.gz\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Create a softlink for the openshift-install and oc tools")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" -s /absolute/path/to/oc /usr/local/bin/oc\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" -s /absolute/path/to/openshift-install\n/usr/local/bin/openshift-install\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" -s /abslute/path/to/kubectl /usr/local/bin/kubectl\n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[t._v("Update the install-config.yaml file with the following details.")])]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("baseDomain")]),t._v(": Base domain of the DNS which hosts Red Hat\nOpenShift Container Platform.")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("name")]),t._v(": Name of the OpenShift cluster. This is same as the new\ndomain created in DNS.")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("replicas")]),t._v(": Update this field to reflect the corresponding\nnumber of master or worker instances required for the OpenShift\ncluster as per the installation environment requirements. It is\nrecommended to have a minimum of 3 master nodes and 2 worker\nnodes per OpenShift cluster.")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("pullSecret")]),t._v(': This should now be the contents of the\npull_secret_registry.json present in the "mirror registry\nserver"(internal) at\n/opt/hpe/solutions/hpe-solutions-openshift/registry/downloads/secrets/\npull_secret_registry.json. It consists of the credentials to\naccess the internal/mirror registry only created for the\nrestricted network installation of the Red Hat OpenShift\nContainer Platform cluster.')])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("sshKey")]),t._v(": Update this field with the ssh-key generated for the\nnon-root user of the installer machine. Sshkey can be generated\nwith the following command.")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ssh-keygen\n")])])]),e("p",[t._v("The resultant value can be retrieved from the /home/non-root-user/.ssh/id_rsa.pub")]),t._v(" "),e("div",{staticClass:"language-tip NOTE extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Replace 'non-root-user' in the above path with the username given for the non-root-user\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("additionalTrustBundle")]),t._v(": Update this field with the CA\ncertificated (domain.crt) generated in the internal/mirror registry.\nIt can be found at\n/opt/hpe/solutions/hpe-solutions-openshift/registry/certs/domain.crt\nwithin the internal mirror registry server. Make sure the value to\nthis field is right indented (5 spaces from the left).")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("imageContentSources")]),t._v(': This content is taken from the\nmirror-output.txt generated in the "Download server > For the\nmirror registry" section of this document. It consists of the end\npoints to connect to, to download the required files while created\nthe Red Hat OpenShift Container Platform cluster in a restricted\nnetwork environment.')])])]),t._v(" "),e("p",[t._v("The final version should look as follows:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("baseDomain")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <your base domain. Similar to example.com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("controlPlane")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hyperthreading")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Enabled\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("compute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" worker\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hyperthreading")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Enabled\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" '<your subdomain or cluster name. similar to test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networking")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterNetworks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cidr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10.128.0.0/14\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPrefix")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("machineNetwork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cidr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 172.18.0.0/16\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networkType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OpenShiftSDN\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceNetwork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 172.30.0.0/16\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("platform")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("none")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fips")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pullSecret**")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" '<contents of the pull_secret_registry.json file\n similar to "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('"auths"'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('"<registry_hostname_fqdn'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v('5000"'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('"auth"'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bXl1c2VyOm15cGFzc3dvcmQ="')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v('"email"'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<email_address>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("'\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sshKey**")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'< Your installer machine Public SSH Key>'")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("additionalTrustBundle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("\n\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("BEGIN CERTIFICATE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n      <Your CA certificate generated by the non"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("root user in the internal mirror registry"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("END CERTIFICATE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imageContentSources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mirrors")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" < registry_hostname_fqdn "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5000/ocp/openshift4\n\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" quay.io/openshift"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("release"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dev/ocp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("release\n\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mirrors")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" < registry_hostname_fqdn "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5000/ocp/openshift4\n\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" quay.io/openshift"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("release"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dev/ocp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("v4.0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("art"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dev\n")])])]),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("It is recommended to take a backup of the\ninstall-config.yaml file before creating the manifests/ignition file\nsince the file will be consumed while they are created.")])]),t._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[t._v("Navigate to the path where install-config.yaml is present, create a\nnew directory for the ignition files and copy the\ninstall-config.yaml into it. Navigate into the newly created folder")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/path/to/directory/with/openshift-install/tools"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/ignitions\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" install-config.yaml ignitions/\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /path/to/ignitions/directory\n")])])]),e("ol",{attrs:{start:"7"}},[e("li",[t._v("Create the manifests using the following command")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" openshift-install create manifests --dir"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./\n")])])]),e("ol",{attrs:{start:"8"}},[e("li",[t._v("Create the ignition files")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" openshift-install create ignition-configs --dir"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./\n")])])]),e("p",[t._v("The ignition files thus generated could be used while the CoreOS\noperating system is booted on the bootstrap, master and worker nodes\nvia the iPXE server.")]),t._v(" "),e("ol",{attrs:{start:"9"}},[e("li",[t._v("Export the kubeconfig file with the following command")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("KUBECONFIG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/path/to/kubeconfig/file\n")])])]),e("h2",{attrs:{id:"openshift-cluster-nodes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#openshift-cluster-nodes"}},[t._v("#")]),t._v(" Openshift cluster nodes")]),t._v(" "),e("p",[t._v("Red Hat OpenShift Container Platform sizing varies depending on the\nrequirements of the organization and type of deployment. This section\nhighlights the host sizing details recommended by Red Hat.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Resource")]),t._v(" "),e("th",[t._v("Bootstrap node")]),t._v(" "),e("th",[t._v("Master node")]),t._v(" "),e("th",[t._v("Worker node")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("CPU")]),t._v(" "),e("td",[t._v("4")]),t._v(" "),e("td",[t._v("4")]),t._v(" "),e("td",[t._v("4")])]),t._v(" "),e("tr",[e("td",[t._v("Memory")]),t._v(" "),e("td",[t._v("16GB")]),t._v(" "),e("td",[t._v("16GB")]),t._v(" "),e("td",[t._v("16GB")])]),t._v(" "),e("tr",[e("td",[t._v("Disk storage")]),t._v(" "),e("td",[t._v("120GB")]),t._v(" "),e("td",[t._v("120GB")]),t._v(" "),e("td",[t._v("120GB")])])])]),t._v(" "),e("p",[t._v("Disk partitions on each of the nodes are as follows.")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("/var -- 40GB")])]),t._v(" "),e("li",[e("p",[t._v("/usr/local/bin -- 1GB")])]),t._v(" "),e("li",[e("p",[t._v("Temporary directory -- 1GB")])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("Sizing for worker nodes is ultimately dependent on the container\nworkloads and their CPU, memory, and disk requirements.")])]),t._v(" "),e("p",[t._v("For more information about Red Hat OpenShift Container Platform sizing,\nrefer to the Red Hat OpenShift Container Platform 4 product\ndocumentation at\n"),e("a",{attrs:{href:"https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/scalability_and_performance/index",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/scalability_and_performance/index"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"ipxe-server"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ipxe-server"}},[t._v("#")]),t._v(" iPXE server")]),t._v(" "),e("p",[t._v("This server is used as OS deployment server for deploying CoreOS for the\nRed Hat OpenShift Container Platform cluster nodes, this server does not\nhave internet access and is built on virtual machine with the following\nconfigurations")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("OS - CentOS 7 with preinstalled packages as follows")]),t._v(" "),e("ul",[e("li",[e("p",[t._v('"Development Tools"')])]),t._v(" "),e("li",[e("p",[t._v('"Compatibility Libraries"')])]),t._v(" "),e("li",[e("p",[t._v('"System Administration Tools"')])])])]),t._v(" "),e("li",[e("p",[t._v("CPU - 4 vCPU")])]),t._v(" "),e("li",[e("p",[t._v("Memory - 8 GB")])]),t._v(" "),e("li",[e("p",[t._v("Disk - 300 GB free space in the / partition")])]),t._v(" "),e("li",[e("p",[t._v("Network adapter - 1 network adapter with connectivity to the\nproduction network")])])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Refer to the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/Preparing-execution-environment.html#non-root-user-access"}},[t._v("setup the non-root")]),t._v(" section of\nthe deployment guide to create a non-root user and switch to the\nthus created non-root user")],1)]),t._v(" "),e("li",[e("p",[t._v("Refer to the "),e("RouterLink",{attrs:{to:"/Additional-Features-and-Functionality/Air-gap-Installation.html#setup-centos-servers-to-use-internal-yum-server"}},[t._v("Setup centos servers to use internal yum\nserver")]),t._v("  section of the deployment\nguide to enable offline package/module installation for the mirror\nregistry")],1)]),t._v(" "),e("li",[e("p",[t._v("Navigate to the path to the ipxe.tar.gz file from the download\nserver and untar it.")])])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" path/to/ipxe.tar.gz\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xvf ipxe.tar.gz\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Install all the necessary RPMs and ansible as follows.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum localinstall -y *.rpm\n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[t._v('Navigate to the directory "deploy-coreos" path of the github\nrepository hpe-solutions-openshift.')])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /path/to/hpe-solutions-openshift/\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" synergy/scalable/os-deployment/deploy-rhcos\n")])])]),e("p",[t._v("It is recommended to store the github repository at /opt/hpe/solutions/.")]),t._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[t._v("Update the input files such hosts with the following command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" hosts\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("add the parameters (ansible_ssh_pass, ansible_ssh_user) in the\nhost file for the non-root user")]),t._v(" "),e("p",[t._v("Eg. 10.4.1.141 ansible_ssh_pass=xxx ansible_ssh_user=user")])]),t._v(" "),e("ol",{attrs:{start:"7"}},[e("li",[t._v("Update the encrypted input file secret.yml with the following\ncommand")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ansible-vault edit secret.yml\n")])])]),e("p",[t._v('The default password for the encrypted file is "changeme"')]),t._v(" "),e("ol",{attrs:{start:"8"}},[e("li",[t._v("Generate the SSH key for the openshift_admin user and copy the SSH\nkey to the known hosts file using the following command.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ssh-keygen\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("Ensure there are no previous self-entries in the known host file.")])]),t._v(" "),e("ol",{attrs:{start:"9"}},[e("li",[t._v("Copy the thus generated SSH key to the known hosts file using the\nfollowing command")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ssh-copy-id openshift_admin@"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ipxe_fqdn"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("ol",{attrs:{start:"10"}},[e("li",[t._v("Move the downloaded matchbox tar file "),e("a",{attrs:{href:"https://github.com/poseidon/matchbox/releases/download/v0.8.0/matchbox-v0.8.0-linux-amd64.tar.gz",target:"_blank",rel:"noopener noreferrer"}},[t._v("matchbox-v0.8.0-linux-amd64.tar.gz"),e("OutboundLink")],1),t._v(" to /tmp/ directory and provide the read permission using the following command")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" /path/to/matchbox-v0.8.0-linux-amd64.tar.gz"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" /tmp/\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v(" /tmp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("matchbox-v0.8.0-linux-amd64.tar.gz\n")])])]),e("ol",{attrs:{start:"11"}},[e("li",[t._v("Execute the following to setup iPXE")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ansible-playbook -i hosts master.yml --ask-vault-pass\n")])])]),e("ol",{attrs:{start:"12"}},[e("li",[t._v("Copy the ignitions files from the installer machine to\n/var/lib/matchbox/igniton/ folders and provide all permissions to\nthe ignition files")])]),t._v(" "),e("p",[t._v("Only this command to be executed on the installer machine")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" /path/to/ignitions/files\nopenshift_admin@"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("installer_server_fqdn_or_ip_address"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":/home/openshift_admin\n")])])]),e("p",[t._v("On the iPXE server")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" /home/openshift_admin/*.ign /var/lib/matchbox/ignition\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("777")]),t._v(" /var/lib/matchbox/ignition/*.ign\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("Ensure the services xinetd, matchbox, tftp, dnsmasq are in\nactive/running state in the iPXE server before initiating the\ninstallation of the CoreOS.")])]),t._v(" "),e("ol",{attrs:{start:"13"}},[e("li",[t._v("Boot the cluster nodes to complete the installation of Red Hat\nCoreOS.")])]),t._v(" "),e("p",[t._v("For further details on setting up the iPXE server, refer to the "),e("RouterLink",{attrs:{to:"/Solution-Deployment/Operating-system-deployment.html#operating-system-deployment"}},[t._v("OS\ndeployment")])],1),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("REGISTRY TESTING")]),t._v(" "),e("p",[t._v("This is a very important point, make sure you are able to access your\nregistry from the bootstrap server.")]),t._v(" "),e("p",[t._v("$ curl -u myuser:mypassword -k https://<registry_fqdn_or_ip_address>:5000/v2/_catalog")])]),t._v(" "),e("h2",{attrs:{id:"red-hat-openshift-container-platform-cluster-installation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#red-hat-openshift-container-platform-cluster-installation"}},[t._v("#")]),t._v(" Red Hat OpenShift Container Platform Cluster Installation")]),t._v(" "),e("ol",[e("li",[t._v("Login to the installer machine and start the bootstrap installation\nwith the following command")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /path/to/ignition/files\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" openshift-install --dir"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./ wait-for bootstrap-complete --log-level\ndebug\n")])])]),e("p",[t._v("Output is similar to as follows:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" INFO Waiting up to 30m0s for the Kubernetes API at\n <https://api.ocp4.example.com:6443>...\n\n INFO API v1.13.4+b626c2fe1 up\n\n INFO Waiting up to 30m0s for the bootstrap-complete event...\n")])])]),e("p",[t._v("You can monitor the progress of the installation in the bootstrap\nserver. This also helps in tracking the errors, they are self\nexplainatory and helps understand what is happening.")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" core@bootstrap "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"journalctl -xe"')]),t._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("After bootstrap process is complete, you can safely remove the bootstrap\nmachine from the load balancer.")])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("Logging into the cluster")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("KUBECONFIG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/path/to/kubeconfig/file\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oc "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("whoami")]),t._v("\n\nsystem:admin\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("Confirm that the cluster recognizes the machines:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oc get nodes\n")])])]),e("p",[e("img",{attrs:{src:a(391),alt:""}})]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Approve the pending CSRs for your machines")])]),t._v(" "),e("p",[t._v("When you add machines to a cluster, two pending certificate signing\nrequest (CSRs) are generated for each machine that added. Verify them\nif the following command")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oc get csr\n")])])]),e("p",[t._v("Output looks similar to as follows")]),t._v(" "),e("p",[e("img",{attrs:{src:a(392),alt:""}})]),t._v(" "),e("p",[t._v("If they are not approved, approve them manually using the following\ncommand.")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oc adm certificate approve "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("csr_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[t._v("Initial Operator configuration")])]),t._v(" "),e("p",[t._v("In this phase you have to wait up to 15 min to all operators to go to\nAvailable True state. Verify the same using the following command.")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),t._v(" -n5 oc get clusteroperators\n")])])]),e("p",[e("img",{attrs:{src:a(393),alt:""}})]),t._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[t._v("Completing installation on user-provisioned infrastructure")])]),t._v(" "),e("p",[t._v("Once Operator configuration is complete, finish installing the cluster\non infrastructure using the following command and confirm that all\ncluster components are online")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" openshift-install --dir"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./ wait-for install-complete "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v("\ninstall-complete\n")])])]),e("p",[t._v("This will give you an output of you console login with the admin user\nand credentials to login similar to as follows")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("INFO Waiting up to 30m0s for the cluster at\n<https://api.eoffline.twentynet.local:6443> to initialize...\n\nINFO Waiting up to 10m0s for the openshift-console route to be\ncreated...\n\nINFO Install complete!\n\nINFO To access the cluster as the system:admin user when using 'oc',\nrun 'export\nKUBECONFIG=/home/openshift_admin/ignitions/auth/kubeconfig'\n\nINFO Access the OpenShift web-console here:\n<https://console-openshift-console.apps.eoffline.twentynet.local>\n\nINFO Login to the console with user: \"kubeadmin\", and password:\n\"xxxxxxxxxxxxxxxx\"\n\nINFO Time elapsed: 0s\n")])])]),e("ol",{attrs:{start:"7"}},[e("li",[t._v("Ensure the cluster nodes are in the ready state using the following\ncommand.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oc get nodes\n")])])]),e("p",[e("img",{attrs:{src:a(394),alt:""}})]),t._v(" "),e("ol",{attrs:{start:"8"}},[e("li",[t._v("At this point, Red Hat OpenShift Container Platform cluster is\nsuccessfully installed in the restricted network environment and is\navailable for usage.")])]),t._v(" "),e("h2",{attrs:{id:"snapshots"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#snapshots"}},[t._v("#")]),t._v(" Snapshots")]),t._v(" "),e("p",[t._v("Once the cluster is installed, operators are not yet available since\nthere is no connectivity to the internet and the operator related images\nare not yet downloaded to the registry server")]),t._v(" "),e("p",[e("img",{attrs:{src:a(395),alt:""}})]),t._v(" "),e("p",[e("strong",[t._v("Figure 87.")]),t._v(" Red Hat OpenShift Container Platform")]),t._v(" "),e("h2",{attrs:{id:"setup-centos-servers-to-use-internal-yum-server"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setup-centos-servers-to-use-internal-yum-server"}},[t._v("#")]),t._v(" Setup centos servers to use internal yum server")]),t._v(" "),e("ol",[e("li",[e("p",[t._v('Login to the host as a user with "remove" permission and remove all\nthe repo files present within the directory /etc/yum.repos.d/.')])]),t._v(" "),e("li",[e("p",[t._v("Login to the server as a non-root user.")])]),t._v(" "),e("li",[e("p",[t._v("Create a new file named local-repo.repo with the following contents.\nUpdate the "),e("em",[e("strong",[t._v("yum_server_ip_address_or_fqdn")])]),t._v(" field with the IP\naddress/FQDN of the yum server in your environment")])])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/yum.repos.d/local-repo.repo\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" [local-base]\n\n name=CentOS Base\n\n baseurl=http://**<yum_server_ip_address_or_fqdn>**/base/\n\n gpgcheck=0\n\n enabled=1\n\n [local-centosplus]\n\n name=CentOS CentOSPlus\n\n baseurl=http://**<yum_server_ip_address_or_fqdn>**/centosplus/\n\n gpgcheck=0\n\n enabled=1\n\n [local-extras]\n\n name=CentOS Extras\n\n baseurl=http://**<yum_server_ip_address_or_fqdn>**/extras/\n\n gpgcheck=0\n\n enabled=1\n\n [local-updates]\n\n name=CentOS Updates\n\n baseurl=http://**<yum_server_ip_address_or_fqdn>**/updates/\n\n gpgcheck=0\n\n enabled=1\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Now the server is ready to use the internal yum server for any\noffline package/module installations.")])]),t._v(" "),e("h2",{attrs:{id:"using-operator-lifecycle-manager-on-restricted-networks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-operator-lifecycle-manager-on-restricted-networks"}},[t._v("#")]),t._v(" Using Operator Lifecycle Manager on Restricted Networks")]),t._v(" "),e("p",[t._v("For OpenShift Container Platform clusters that are installed on\nrestricted networks, also known as disconnected clusters, Operator\nLifecycle Manager (OLM) by default cannot access the Red Hat-provided\nOperatorHub sources hosted remotely on Quay.io because those remote\nsources require full Internet connectivity.")]),t._v(" "),e("p",[t._v("However, as a cluster administrator you can still enable your cluster to\nuse OLM in a restricted network if you have a workstation/download\nserver that has full Internet access. This workstation is used to\nprepare local mirrors of the remote OperatorHub sources by pulling the\nrequired remote content. (Similar to the download server as mentioned in\nthe above steps)")]),t._v(" "),e("p",[t._v("An Operator catalog is a repository of metadata that Operator Lifecycle\nManager (OLM) can query to discover and install Operators and their\ndependencies on a cluster. OLM always installs Operators from the latest\nversion of a catalog. As of OpenShift Container Platform 4.6, Red\nHat-provided catalogs are distributed using index images. An index\nimage, based on the Operator Bundle Format, is a containerized snapshot\nof a catalog.")]),t._v(" "),e("p",[t._v("There are four Red Hat-provided Operator catalogs:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[t._v("Catalog")])]),t._v(" "),e("th",[e("strong",[t._v("Index image")])]),t._v(" "),e("th",[e("strong",[t._v("Description")])])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("redhat-operators")]),t._v(" "),e("td",[t._v("registry.redhat.io/redhat/redhat-operator-index:v4.6")]),t._v(" "),e("td",[t._v("Red Hat products packaged and shipped by Red Hat. Supported by Red Hat.")])]),t._v(" "),e("tr",[e("td",[t._v("certified-operators")]),t._v(" "),e("td",[t._v("registry.redhat.io/redhat/certified-operator-index:v4.6")]),t._v(" "),e("td",[t._v("Products from leading independent software vendors (ISVs). Red Hat partners with ISVs to package and ship. Supported by the ISV.")])]),t._v(" "),e("tr",[e("td",[t._v("redhat-marketplace")]),t._v(" "),e("td",[t._v("registry.redhat.io/redhat/redhat-marketplace-index:v4.6")]),t._v(" "),e("td",[t._v("Certified software that can be purchased from Red Hat Marketplace.")])]),t._v(" "),e("tr",[e("td",[t._v("community-operators")]),t._v(" "),e("td",[t._v("registry.redhat.io/redhat/community-operator-index:latest")]),t._v(" "),e("td",[t._v("Software maintained by relevant representatives in the operator-framework/community-operators GitHub repository. No official support.")])])])]),t._v(" "),e("p",[t._v("The high-level flow of the procedure is shown below:\n"),e("img",{attrs:{src:a(396),alt:""}}),t._v(" "),e("strong",[t._v("Figure 88.")]),t._v(" Solution Flow of Operator Lifecycle Manager on a\nRestricted Network")]),t._v(" "),e("p",[t._v("The following is the process that is required to enable OLM in\nrestricted networks:")]),t._v(" "),e("p",[t._v("On the "),e("strong",[t._v("Download Server")]),t._v(" (workstation with Internet Access)")]),t._v(" "),e("ol",[e("li",[t._v("Login to registry.redhat.io to pull the required catalog image")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" podman login registry.redhat.io\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("Create directory required for the operators")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/operators\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("Copy the pull secret from the RedHat site into a file in the newly\ncreated directory and validate the same")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/operators\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" pull-secret.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" EOF\n\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Copied-pull-secret"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n EOF\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" pull-secret.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Pull the required catalog image")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" podman pull registry.redhat.io/redhat/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("-index:v4.6\n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[t._v("Save the catalog image into a tar file for use in the mirror\nregistry")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" podman save "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("image-ID"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -o "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/operators/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("-catalog.tar\n")])])]),e("ol",{attrs:{start:"6"}},[e("li",[t._v("The "),e("em",[t._v("oc adm catalog mirror")]),t._v(" command extracts the contents of an\nindex image to generate the manifests required for mirroring. The\nfollowing command creates a folder in your current directory.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oc adm catalog registry.redhat.io/redhat/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("-index:v4.6\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mirror_registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --manifests-only\n--registry-config"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/operators/pull-secret.json\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("The "),e("em",[t._v("--manifests-only")]),t._v(" flag is to only generate the manifests\nrequired for mirroring, but not actually mirror the image content to the\nregistry yet. This can be useful for reviewing what will be mirrored,\nand it allows you to make any changes to the mapping list if you only\nrequire a subset of packages.")])]),t._v(" "),e("ol",{attrs:{start:"7"}},[e("li",[t._v("Navigate to the newly created folder to view the mapping.txt file\nand the imageContentSourcePolicy.yaml files")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("-index-manifests\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -lrth\n")])])]),e("ol",{attrs:{start:"8"}},[e("li",[t._v("Identify the required entries for your operator from the mapping.txt\nfile. Remove the unwanted entries.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" mapping.txt\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("The entries in the mapping.txt file are in the following format.")]),t._v(" "),e("p",[t._v("source_registry/image_url@sha256:digest=mirror_registry/image_url:tag")])]),t._v(" "),e("ol",{attrs:{start:"9"}},[e("li",[t._v("Install the skopeo tool to perform the copy of the images")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" skopeo -y\n")])])]),e("ol",{attrs:{start:"10"}},[e("li",[t._v("For each entry in the mapping.txt file copy the images to the local\ndirectory into a custom folder name .")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/operators\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" skopeo copy --authfile\n "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/operators/pull-secret.json --all\n docker://"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("source_registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("image_url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("@"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("sha256:digest"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n dir:./"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" skopeo copy --authfile\n "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/operators/pull-secret.json --all\n docker://"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("source_registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("image_url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("@"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("sha256:digest"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n dir:./"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v("\n\n")])])]),e("p",[t._v("Do this for all the entries in the mapping.txt file")]),t._v(" "),e("ol",{attrs:{start:"11"}},[e("li",[t._v("Tar the contents of the operator folder (\ncatalog-image-catalog.tar, custom_folder_name_1,\ncustom_folder_name_2...) to move to the mirror registry")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zvcf mirror-operator.tar.gz "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("-catalog.tar "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),e("ol",{attrs:{start:"12"}},[e("li",[t._v("Tar the contents of the catalog-image-index-manifests folder to\nmove to the installer machine.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("-index-manifests\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zvcf installer-operator.tar.gz *\n")])])]),e("p",[t._v("On the "),e("strong",[t._v("Mirror Server")]),t._v(" (Restricted Network)")]),t._v(" "),e("ol",{attrs:{start:"13"}},[e("li",[t._v("Untar the mirror-operator.tar.gz file")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/operators\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xvf /path/to/mirror-operator.tar.gz -C\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/operators/\n")])])]),e("ol",{attrs:{start:"14"}},[e("li",[t._v("Login to your mirror registry to push new images")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" podman login "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mirror_registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("ol",{attrs:{start:"15"}},[e("li",[t._v("Load the required catalog image and validate the same")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/operators\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" podman load -i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("catalog-image"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("-catalog.tar\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" podman images\n")])])]),e("ol",{attrs:{start:"16"}},[e("li",[t._v("Push the catalog image to the mirror registry")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" podman push "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("catalog_image_tag"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mirror_registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("catalog_image"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("-index:v4.6\n")])])]),e("ol",{attrs:{start:"17"}},[e("li",[t._v("Install the skopeo tool to perform a copy of the images")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" skopeo -y\n")])])]),e("ol",{attrs:{start:"18"}},[e("li",[t._v("Transfer the images from your director into the mirror registry")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" skopeo copy --authfile\n "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/secrets/pull-secret-registry.json --all\n dir:./ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v(" docker://"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mirror registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("image\n url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tag"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" skopeo copy --authfile\n "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/downloads/secrets/pull-secret-registry.json --all\n dir:./ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("custom_folder_name_"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v(" docker://"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mirror registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("image\n url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tag"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),e("p",[t._v("Do this for all the directory folders you have by referring the\nmapping.txt for the corresponding tags.")]),t._v(" "),e("p",[t._v("For the "),e("strong",[t._v("Installer Server")]),t._v(" (Restricted Network)")]),t._v(" "),e("ol",{attrs:{start:"19"}},[e("li",[t._v("Disable the sources for the default catalogs by adding\ndisableAllDefaultSources: true to the OperatorHub spec:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oc patch OperatorHub cluster --type json "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-p "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'[{"op": "add", "path": "/spec/disableAllDefaultSources",\n"value": true}]\'')]),t._v("\n")])])]),e("ol",{attrs:{start:"20"}},[e("li",[t._v("Untar the installer-operator.tar.gz file")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/operators\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xvf /path/to/mirror-operator.tar.gz -C\n "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/operators/\n")])])]),e("ol",{attrs:{start:"21"}},[e("li",[t._v("Create the CatalogSource.yaml file")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${REGISTRY_BASE}")]),t._v("/operators\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" CatalogSource.yaml\n")])])]),e("p",[t._v("Paste the following content: (Refer to instruction 16 for the catalog\nimage)")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" operators.coreos.com/v1alpha1\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CatalogSource\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("operator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("catalog\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" openshift"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("marketplace\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sourceType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grpc\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <registry_mirror"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("<port"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("/<namespace"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("/<catalog_image"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("v4.6\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("displayName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" My Operator Catalog\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("publisher")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <custom_publisher_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n")])])]),e("ol",{attrs:{start:"22"}},[e("li",[t._v("Verify the following resources are created successfully")])]),t._v(" "),e("p",[e("strong",[t._v("Check the pods:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oc get pods -n openshift-marketplace\n")])])]),e("p",[t._v("Example Output:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" NAME READY STATUS RESTARTS AGE\n\n my-operator-catalog-6njx6 1/1 Running 0 28s\n\n marketplace-operator-d9f549946-96sgr 1/1 Running 0 26h\n")])])]),e("p",[e("strong",[t._v("Check the CatalogSource")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oc get catalogsource -n openshift-marketplace\n")])])]),e("p",[t._v("Example Output:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" NAME DISPLAY TYPE PUBLISHER AGE\n\n my-operator-catalog My Operator Catalog grpc 5s\n")])])]),e("p",[e("strong",[t._v("Check the PackageManifest:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oc get packagemanifest -n openshift-marketplace\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" Example Output:\n\n NAME CATALOG AGE\n\n jaeger-product My Operator Catalog 93s\n")])])]),e("ol",{attrs:{start:"23"}},[e("li",[t._v("Apply the imageContentSourcePolicy.yaml file ( any further new\nentries for new operators can be appended to the existing yaml file)")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oc create -f imageContentSourcePolicy.yaml\n")])])]),e("ol",{attrs:{start:"24"}},[e("li",[t._v("Wait for the Image Content Source Policy to apply to all the nodes\nin the cluster")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),t._v(" oc get nodes\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("The nodes will go from Ready to NotReady and Scheduling Disabled\nstates.")]),t._v(" "),e("p",[t._v("Wait for all the nodes to get back to Ready state")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),t._v(" oc get mcp\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("Wait for the UPDATED states of both the master and worker to turn to\nTrue")])]),t._v(" "),e("ol",{attrs:{start:"25"}},[e("li",[e("p",[t._v("Login to OpenShift Console")])]),t._v(" "),e("li",[e("p",[t._v("Install the newly pushed Operator in required namespace")])]),t._v(" "),e("li",[e("p",[t._v("Deploy instance as required")])]),t._v(" "),e("li",[e("p",[t._v("Repeat above steps for other required operators.")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);