(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{419:function(t,e,a){t.exports=a.p+"assets/img/Figure89.3776743f.png"},420:function(t,e,a){t.exports=a.p+"assets/img/Figure90.f58b7254.png"},421:function(t,e,a){t.exports=a.p+"assets/img/Figure91.19cbe047.png"},422:function(t,e,a){t.exports=a.p+"assets/img/Figure92.4650b746.png"},423:function(t,e,a){t.exports=a.p+"assets/img/Figure93.5f39ae8f.png"},528:function(t,e,a){"use strict";a.r(e);var s=a(42),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"openshift-operators"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#openshift-operators"}},[t._v("#")]),t._v(" OpenShift operators")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Prerequisites")]),t._v(" "),s("ul",[s("li",[t._v("Red Hat OpenShift Container Platform 4.6 console")]),t._v(" "),s("li",[t._v("Availability of any Storage Class (Nimble, 3PAR, Local Storage, and\nOCS) in OpenShift Container Platform.")]),t._v(" "),s("li",[t._v("Python 3.6.x should be available on installer VM.")]),t._v(" "),s("li",[t._v("'Ansible' and 'Requests' python modules.")])])]),t._v(" "),s("h2",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),s("p",[t._v("Operators are pieces of software that ease the operational complexity of\nrunning other pieces of software. They act like an extension of the\nsoftware vendor's engineering team, watching over a Kubernetes\nenvironment (such as OpenShift Container Platform) and using the current\nstate to make decisions in real-time. Any container implementation\nrequires certain operators that need to be enabled for use by the end\nuser. This requirement is satisfied by using a combination of Python and\nShell scripts and their execution for automating the installation of\nthese operators.")]),t._v(" "),s("p",[t._v("Hewlett Packard Enterprise has deployed the following operators in an\nautomated fashion:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Kiali Operator")])]),t._v(" "),s("li",[s("p",[t._v("Jaeger Operator")])]),t._v(" "),s("li",[s("p",[t._v("Red Hat OpenShift Service Mesh")])]),t._v(" "),s("li",[s("p",[t._v("Prometheus Operator")])]),t._v(" "),s("li",[s("p",[t._v("Grafana Operator")])]),t._v(" "),s("li",[s("p",[t._v("Elasticsearch Operator")])]),t._v(" "),s("li",[s("p",[t._v("Fluentd Operator (Cluster Logging)")])]),t._v(" "),s("li",[s("p",[t._v("Kibana Operator (Cluster Logging)")])])]),t._v(" "),s("h3",{attrs:{id:"scripts-for-configuring-the-operators"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scripts-for-configuring-the-operators"}},[t._v("#")]),t._v(" Scripts for configuring the operators")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("BASE_DIR is the directory path for all automated scripts and the path is /opt/hpe/solutions/ocp/hpe-solutions-openshift/synergy/scalable")])]),t._v(" "),s("p",[t._v("This section provides details on the scripts developed to automate the\ninstallation of operators on the OpenShift Container Platform cluster.\nThe scripts to install operators can be found in the installer VM at\n"),s("em",[t._v("BASE_DIR/platform/operator_install")]),t._v(".")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("deploy_validate_operators.py")]),t._v(" - Main python script which installs\nand validates the required operators.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Install_ocs_operator.py")]),t._v(" -- Main python script which installs\nLocal Storage operator, OpenShift Container Storage operators,\ncreates file system & block storage and also creates SCs, PVs, PVCs.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("config.py")]),t._v(" - Python script to convert user input values into\nprogram variables for usage by the deploy_validate_operators.py\nscript.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("userinput.json")]),t._v(" - Input json file filled by the installation\nuser.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("config_secrets.json")]),t._v(" -- Encrypted input json file filled by the\ninstaller user.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("create_local_storage_operator.yaml")]),t._v(" - Creates Local Storage\noperator's Namespace, installs Local Storage operator.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("local_storage_fs.yaml")]),t._v(" - Creates file system storage for\nmonitoring OCS cluster.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("local_storage_block.yaml")]),t._v(" - Creates block storage for claiming\nOSD persistent volumes.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("ocs_operator.yaml")]),t._v(" - This playbook creates OpenShift Container\nStorage Namespace, block storage for bounding PVC to Storage Class.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("storage_ocs.yaml")]),t._v(" - This playbook creates storage classes, PVCs\n(Persistent Volume Claim), pods to bring up the OCS cluster.")])])]),t._v(" "),s("h3",{attrs:{id:"installing-the-operators-on-the-openshift-container-platform-cluster"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installing-the-operators-on-the-openshift-container-platform-cluster"}},[t._v("#")]),t._v(" Installing the operators on the OpenShift Container Platform cluster")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Login to the Ansible Installer virtual machine as a non-root user\nand browse to Python virtual environment.")])]),t._v(" "),s("li",[s("p",[t._v("Update the "),s("em",[t._v("config_secrets.json")]),t._v(" file found at\n"),s("em",[t._v("$BASE_DIR/platform/operator_install")]),t._v(" with the following setup\nconfiguration details:")])])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("OPENSHIFT_USERNAME"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <OpenShift Container Platform cluster username>\nOPENSHIFT_PASSWORD"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <OpenShift Container Platform cluster password>\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("Update the "),s("em",[t._v("userinput.json")]),t._v(" file found at\n"),s("em",[t._v("$BASE_DIR/platform/operator_install")]),t._v(" with the following setup\nconfiguration details:")])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("OPENSHIFT_DOMAIN"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <OpenShift Server sub domain fqdn (api.domain.base_domain)> \nOPENSHIFT_PORT"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <OpenShift Server port number (OpenShift Container Platform runs on port "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6443")]),t._v(" by default)>\nOPENSHIFT_OPERATOR_LIST"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jaeger-product"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kiali-ossm"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"servicemeshoperator"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"grafana-operator"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prometheus"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("elasticsearch-operator"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v('cluster-logging"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nOPERATOR_CHANNEL_LIST"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stable"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stable"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alpha"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"beta"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4.6"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4.6"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nOPERATOR_SOURCE_LIST"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redhat-operators"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redhat-operators"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redhat-operators"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"community-operators"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"community-operators"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redhat-operators"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redhat-operators"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nOPERATOR_INSTALL_PLAN"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automatic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automatic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automatic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automatic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automatic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automatic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automatic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nOPENSHIFT_PROJECT_NAME"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <OpenShift Project Name>\nOPENSHIFT_CLIENT_PATH"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" < OpenShift OC client tool path (leave it empty if a path has been set)>\nOPENSHIFT_STORAGE_CLASS_NAME"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" < provide the storage class name to be used by the cluster logging operator >\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("The operator list, channel details, operator source, and install plans\ncan be used if the user wants to install additional operators. For the\ndefault installation of the required operators, the user should not\nmodify these fields.")])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("Execute the following command to install the operators discussed in\nthe "),s("a",{attrs:{href:"#introduction"}},[t._v("Introduction")]),t._v(" section of this document.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$BASE_DIR")]),t._v("/platform/operator_install\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" python –W ignore deploy_validate_operators.py\n")])])]),s("p",[t._v("The output of the above command is as follows:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("Enter key for encrypted variables:\nLogging into your OpenShift Cluster\nSuccessfully logged into the OpenShift Cluster\nToken is generated\nCreating Operators...\nCreating Operator jaeger-product\nCreating Operator kiali-ossm\nCreating Operator servicemeshoperator\nCreating Operator grafana-operator\nCreating Operator prometheus\nCreating Operator elasticsearch-operator\nCreating Operator cluster-logging\nValidating Operators...\nThe Required Operators have been Created\n\nDeploying Service Mesh Control Plane..\nCreated Service Mesh Control Plane\nValidating Control Plane Creation...\nControl Plane is present and validated!\n\nDeploying Service Mesh Member Roll...\nCreated Service Mesh Member Roll\nValidating Member Roll Creation...\nMember roll is present and validated!\n\nDeploying Logging Cluster...\nCreated Logging instance\nValidating Cluster Logging Instance Creation...\nCluster Logging Instance is present and validated!\n\nAUTOMATION IS COMPLETE...\n")])])]),s("h2",{attrs:{id:"validation-of-the-operator-installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#validation-of-the-operator-installation"}},[t._v("#")]),t._v(" Validation of the operator installation")]),t._v(" "),s("p",[t._v("The required operators will be created after the execution of the script\nand they will be reflected in the OpenShift console. This section\noutlines the steps to verify the operators created through script and\nare reflected in the GUI:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Login to the "),s("strong",[t._v("OpenShift Console")]),t._v(" as the user with administrative\nprivileges.")])]),t._v(" "),s("li",[s("p",[t._v("Navigate to "),s("strong",[t._v("Operators")]),t._v(" -> "),s("strong",[t._v("Installed")]),t._v(" "),s("strong",[t._v("Operators")]),t._v(" -> select\nyour project name.")])]),t._v(" "),s("li",[s("p",[t._v("The operators will be displayed in the OpenShift web console as\nshown in below figure.")])])]),t._v(" "),s("p",[s("img",{attrs:{src:a(419),alt:""}})]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v('To view the cluster-logging operator and its instance, navigate to\n"openshift-logging" project name. Below figure shows the\ncluster-logging operator in the OpenShift web console.')])]),t._v(" "),s("p",[s("img",{attrs:{src:a(420),alt:""}})]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[s("p",[t._v("Steps to verify the installation of cluster-logging and EFK pods:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Switch to the "),s("strong",[t._v("Workloads → Pods")]),t._v(" page ( inside the\n"),s("strong",[t._v("openshift-logging")]),t._v(" project).")])]),t._v(" "),s("li",[s("p",[t._v("You should see several pods for cluster logging: Elasticsearch,\nFluentd, and Kibana as shown in below figure.")])])])])]),t._v(" "),s("p",[s("img",{attrs:{src:a(421),alt:""}})]),t._v(" "),s("h3",{attrs:{id:"launch-kibana-dashboard-from-openshift-cluster"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#launch-kibana-dashboard-from-openshift-cluster"}},[t._v("#")]),t._v(" Launch Kibana dashboard from OpenShift cluster")]),t._v(" "),s("ol",[s("li",[t._v("Switch to "),s("strong",[t._v("Networking")]),t._v(". Select Routes option , navigate to\nLocation. Click Kibana URL to open a new tab in the browser as shown in\nbelow figure.")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(422),alt:""}})]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("Kibana dashboard appears as shown in below figure.")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(423),alt:""}})])])}),[],!1,null,null,null);e.default=n.exports}}]);