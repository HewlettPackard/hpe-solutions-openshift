(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{390:function(t,s,a){t.exports=a.p+"assets/img/Figure72.3dfe7afa.png"},391:function(t,s,a){t.exports=a.p+"assets/img/Figure73.bcd75d8b.png"},392:function(t,s,a){t.exports=a.p+"assets/img/Figure74.0735bf47.png"},393:function(t,s,a){t.exports=a.p+"assets/img/Figure75.eac4c844.png"},394:function(t,s,a){t.exports=a.p+"assets/img/Figure76.05f0b817.png"},395:function(t,s,a){t.exports=a.p+"assets/img/Figure77.f522ab9b.png"},396:function(t,s,a){t.exports=a.p+"assets/img/Figure78.aa6a45bb.png"},397:function(t,s,a){t.exports=a.p+"assets/img/Figure79.5be756bc.png"},398:function(t,s,a){t.exports=a.p+"assets/img/Figure80.6c165558.png"},526:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"ipi-deployment-of-ocp-on-bare-metal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ipi-deployment-of-ocp-on-bare-metal"}},[t._v("#")]),t._v(" IPI deployment of OCP on Bare Metal")]),t._v(" "),e("h2",{attrs:{id:"introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),e("p",[t._v("Installer-provisioned Infrastructure (IPI) provides a full-stack\ninstallation and setup of the Openshift container platform (OCP). It\ncreates Bootstrapping node which will take care deploying the cluster.")]),t._v(" "),e("p",[t._v("Installer-provisioned Infrastructure on bare metal creates a bootstrap\nVM on Provisioner node. The role of the bootstrap VM is to assist in the\nprocess of deploying an OpenShift Container Platform cluster. The\nbootstrap VM connects to the baremetal network via the network bridges.")]),t._v(" "),e("p",[t._v("When the installation of OpenShift Container Platform control plane\nnodes is complete and fully operational, the installer destroys the\nbootstrap VM automatically and moves the virtual IP addresses (VIPs) to\nthe appropriate nodes accordingly. The API VIP moves to the control\nplane nodes and the Ingress VIP moves to the worker nodes.")]),t._v(" "),e("h2",{attrs:{id:"high-level-architecture"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#high-level-architecture"}},[t._v("#")]),t._v(" High Level Architecture")]),t._v(" "),e("p",[e("img",{attrs:{src:a(390),alt:""}})]),t._v(" "),e("p",[e("strong",[t._v("Figure 72.")]),t._v(" Installer-provisioned Infrastructure Installation High\nLevel Architecture")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("PREREQUISITES")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("One provisioner node with RHEL 8.1 installed.")])]),t._v(" "),e("li",[e("p",[t._v("Three Control Plane nodes.")])]),t._v(" "),e("li",[e("p",[t._v("At least two worker nodes.")])]),t._v(" "),e("li",[e("p",[t._v("Baseboard Management Controller (BMC) access to each node.")])]),t._v(" "),e("li",[e("p",[t._v("At least one network")])]),t._v(" "),e("li",[e("p",[t._v("DNS and DHCP Setup")])])])]),t._v(" "),e("h2",{attrs:{id:"flow-diagram"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flow-diagram"}},[t._v("#")]),t._v(" Flow Diagram")]),t._v(" "),e("p",[e("img",{attrs:{src:a(391),alt:""}}),t._v(" "),e("strong",[t._v("Figure 73.")]),t._v(" Installer-provisioned Infrastructure Installation\nSolution Flow Diagram")]),t._v(" "),e("h2",{attrs:{id:"deployment-process"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deployment-process"}},[t._v("#")]),t._v(" Deployment Process")]),t._v(" "),e("h3",{attrs:{id:"add-dns-records"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add-dns-records"}},[t._v("#")]),t._v(" Add DNS records")]),t._v(" "),e("p",[t._v("Create DNS records for api, ingressvip, master and worker nodes as shown\nbelow.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(392),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"add-dhcp-records"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add-dhcp-records"}},[t._v("#")]),t._v(" Add DHCP records")]),t._v(" "),e("p",[t._v("Create DHCP records for provisioner, master and worker nodes with their\nMAC address")]),t._v(" "),e("p",[e("img",{attrs:{src:a(393),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"preparing-the-provisioner-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#preparing-the-provisioner-node"}},[t._v("#")]),t._v(" Preparing the provisioner node")]),t._v(" "),e("p",[t._v("Once the provisioner node is booted with RHEL 8.1, upgrade to latest.\nPerform below steps to make the node ready for OCP deployment")]),t._v(" "),e("h4",{attrs:{id:"create-baremetal-bridge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-baremetal-bridge"}},[t._v("#")]),t._v(" Create baremetal bridge")]),t._v(" "),e("p",[t._v("IPI process of installation create bootstrap vm in provisoner node and\nhence we need a bridge network.")]),t._v(" "),e("p",[t._v("We will create bridge (baremetal) from existing ethernet (ens3f0) using\ncockpit")]),t._v(" "),e("p",[t._v("a.  Enable cockpit on RHEL8")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("systemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" --now cockpit.socket\n")])])]),e("p",[t._v("b.  Now access the cockpit from browser")]),t._v(" "),e("p",[e("img",{attrs:{src:a(394),alt:""}})]),t._v(" "),e("p",[t._v("c.  On Networking menu and click on Add Bridge")]),t._v(" "),e("p",[t._v('d.  On pop window choose name "baremetal" and select relevant Ports on\nyour OS')]),t._v(" "),e("p",[e("img",{attrs:{src:a(395),alt:""}})]),t._v(" "),e("p",[t._v("e.  Click Apply and you will notice baremetal interface created")]),t._v(" "),e("p",[e("img",{attrs:{src:a(396),alt:""}})]),t._v(" "),e("h4",{attrs:{id:"create-a-non-root-user-kni-with-sudo-privileges-and-generate-ssh-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-a-non-root-user-kni-with-sudo-privileges-and-generate-ssh-key"}},[t._v("#")]),t._v(" Create a non-root user (kni) with sudo privileges and generate ssh key")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("useradd")]),t._v(" kni\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("passwd")]),t._v(" kni\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kni ALL=(root) NOPASSWD:ALL"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" -a /etc/sudoers.d/kni\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" 0440 /etc/sudoers.d/kni\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("su")]),t._v(" - kni -c "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"ssh-keygen -t rsa -f /home/kni/.ssh/id_rsa -N ''\"")]),t._v("\n")])])]),e("ul",[e("li",[t._v("Login as kni and perform the following steps")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("su")]),t._v(" - kni\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" subscription-manager register --username"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("username"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n--password"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("password"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(". --auto-attach\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" subscription-manager repos\n--enable"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("rhel-8-for-x86_64-appstream-rpms\n--enable"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("rhel-8-for-x86_64-baseos-rpms\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" dnf "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y libvirt qemu-kvm "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkisofs")]),t._v(" python3-devel jq ipmitool\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("usermod")]),t._v(" --append --groups libvirt kni\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start firewalld\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" firewall-cmd --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("public --add-service"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http --permanent\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" firewall-cmd --reload\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start libvirtd\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" libvirtd --now\n")])])]),e("h4",{attrs:{id:"create-the-default-storage-pool-and-start-it"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-the-default-storage-pool-and-start-it"}},[t._v("#")]),t._v(" Create the default storage pool and start it.")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("virsh")]),t._v(" pool-define-as --name default --type "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("dir")]),t._v(" --target\n/var/lib/libvirt/images\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("virsh")]),t._v(" pool-start default\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("virsh")]),t._v(" pool-autostart default\n")])])]),e("h4",{attrs:{id:"create-a-pull-secret-txt-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-a-pull-secret-txt-file"}},[t._v("#")]),t._v(" Create a pull-secret.txt file")]),t._v(" "),e("p",[t._v("Copy pull secret from redhat website and paste the contents into the\npull-secret.txt under kni user's home directory")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" pull-secret.txt\n")])])]),e("h3",{attrs:{id:"retrieving-the-openshift-container-platform-installer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#retrieving-the-openshift-container-platform-installer"}},[t._v("#")]),t._v(" Retrieving the OpenShift Container Platform installer")]),t._v(" "),e("h4",{attrs:{id:"set-the-environment-variables"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-the-environment-variables"}},[t._v("#")]),t._v(" Set the environment variables:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("VERSION")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("latest-4.6\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RELEASE_IMAGE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -s\nhttps://mirror.openshift.com/pub/openshift-v4/clients/ocp/$VERSION/release.txt\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Pull From: quay.io'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" -F "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$3")]),t._v("}'")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RELEASE_IMAGE")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("cmd")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("openshift-baremetal-install\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("pullsecret_file")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("~/pull-secret.txt\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("extract_dir")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$cmd")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$pullsecret_file")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$extract_dir")]),t._v("\n")])])]),e("h4",{attrs:{id:"get-the-oc-binary"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get-the-oc-binary"}},[t._v("#")]),t._v(" Get the oc binary:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -s https://mirror.openshift.com/pub/openshift-v4/clients/ocp/"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$VERSION")]),t._v("/openshift-client-linux.tar.gz "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" zxvf - oc\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" oc /usr/local/bin\n")])])]),e("h4",{attrs:{id:"extract-the-installer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#extract-the-installer"}},[t._v("#")]),t._v(" Extract the installer")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oc adm release extract --registry-config "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${pullsecret_file}")]),t._v('"')]),t._v("\n--command"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$cmd")]),t._v(" --to "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${extract_dir}")]),t._v('"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${RELEASE_IMAGE}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" openshift-baremetal-install /usr/local/bin/\n")])])]),e("h4",{attrs:{id:"creating-an-rhcos-images-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-an-rhcos-images-cache"}},[t._v("#")]),t._v(" Creating an RHCOS images cache")]),t._v(" "),e("h4",{attrs:{id:"installing-podman-and-configuring-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installing-podman-and-configuring-cache"}},[t._v("#")]),t._v(" Installing podman and configuring cache")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" dnf "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y podman\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" firewall-cmd --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("/tcp --zone"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("public --permanent\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /home/kni/rhcos_image_cache\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" semanage fcontext -a -t httpd_sys_content_t\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/kni/rhcos_image_cache(/.*)?"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" restorecon -Rv rhcos_image_cache/\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("COMMIT_ID")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("/usr/local/bin/openshift-baremetal-install version\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\^built from commit'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$4")]),t._v("}'")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RHCOS_OPENSTACK_URI")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -s -S\nhttps://raw.githubusercontent.com/openshift/installer/$COMMIT_ID/data/data/rhcos.json\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq .images.openstack.path "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/\"//g'")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$COMMIT_ID")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RHCOS_OPENSTACK_URI")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RHCOS_QEMU_URI")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -s -S\nhttps://raw.githubusercontent.com/openshift/installer/$COMMIT_ID/data/data/rhcos.json\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq .images.qemu.path "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/\"//g'")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RHCOS_PATH")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -s -S\nhttps://raw.githubusercontent.com/openshift/installer/$COMMIT_ID/data/data/rhcos.json\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq .baseURI "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/\"//g'")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RHCOS_QEMU_SHA_UNCOMPRESSED")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -s -S\nhttps://raw.githubusercontent.com/openshift/installer/$COMMIT_ID/data/data/rhcos.json\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq -r "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.images.qemu[\"uncompressed-sha256\"]'")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RHCOS_OPENSTACK_SHA_COMPRESSED")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -s -S\nhttps://raw.githubusercontent.com/openshift/installer/$COMMIT_ID/data/data/rhcos.json\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq -r "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.images.openstack.sha256'")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n")])])]),e("h4",{attrs:{id:"download-the-images-and-place-them-in-the-home-kni-rhcos-image-cache-directory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#download-the-images-and-place-them-in-the-home-kni-rhcos-image-cache-directory"}},[t._v("#")]),t._v(" Download the images and place them in the /home/kni/rhcos_image_cache directory.")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /home/kni/rhcos_image_cache\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${RHCOS_PATH}")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${RHCOS_QEMU_URI}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${RHCOS_PATH}")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${RHCOS_OPENSTACK_URI}")]),t._v("\n")])])]),e("h4",{attrs:{id:"confirm-selinux-type-is-of-httpd-sys-content-t-for-the-newly-created-files"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#confirm-selinux-type-is-of-httpd-sys-content-t-for-the-newly-created-files"}},[t._v("#")]),t._v(" Confirm SELinux type is of httpd_sys_content_t for the newly created files.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("> cd\n\n> ls -Z /home/kni/rhcos_image_cache\n\n#### Create the pod for registries.\n\n> podman run -d --name rhcos_image_cache \\\n\n-v /home/kni/rhcos_image_cache:/var/www/html \\\n\n-p 8080:8080/tcp \\\n\nregistry.centos.org/centos/httpd-24-centos7:latest\n")])])]),e("h3",{attrs:{id:"create-install-config-yaml-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-install-config-yaml-file"}},[t._v("#")]),t._v(" Create install-config.yaml file")]),t._v(" "),e("p",[t._v("Update install-config.yaml file as per below")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" install-config.yaml\n")])])]),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("baseDomain")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tennet.local\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ipi\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networking")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("machineCIDR")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10.0.0.0/16\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networkType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OVNKubernetes\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("compute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" worker\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("controlPlane")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("platform")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("baremetal")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("platform")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("baremetal")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVIP")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10.0.26.61\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ingressVIP")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10.0.26.62\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("provisioningNetwork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Disabled"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("provisioningHostIP")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10.0.26.69\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bootstrapProvisioningIP")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10.0.26.68\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ipimaster1\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("role")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bmc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redfish"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("virtualmedia"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//10.0.5.28/redfish/v1/Systems/1\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ajuser\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test123456\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("disableCertificateVerification")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("True")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bootMACAddress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" AA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5F"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("88"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("80"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("00"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("F4\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rootDeviceHints")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deviceName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/sdb"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ipimaster2\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("role")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bmc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redfish"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("virtualmedia"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//10.0.5.32/redfish/v1/Systems/1\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ajuser\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test123456\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("disableCertificateVerification")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("True")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bootMACAddress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" AA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5F"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("88"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("80"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("00"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("E7\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rootDeviceHints")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deviceName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/sdb"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ipimaster3\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("role")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bmc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redfish"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("virtualmedia"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//10.0.5.35/redfish/v1/Systems/1\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ajuser\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test123456\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("disableCertificateVerification")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("True")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bootMACAddress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" AA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5F"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("88"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("80"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("00"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("E8\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rootDeviceHints")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deviceName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/sdb"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ipiworker1\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("role")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" worker\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bmc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redfish"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("virtualmedia"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//10.0.5.26/redfish/v1/Systems/1\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ajuser\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test123456\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("disableCertificateVerification")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("True")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bootMACAddress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" AA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5F"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("88"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("80"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("00"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("EA\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rootDeviceHints")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deviceName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/sdb"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ipiworker2\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("role")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" worker\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bmc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redfish"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("virtualmedia"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//10.0.5.29/redfish/v1/Systems/1\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ajuser\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test123456\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("disableCertificateVerification")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("True")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bootMACAddress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" AA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5F"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("88"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("80"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("00"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("E9\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rootDeviceHints")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deviceName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/sdb"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pullSecret")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sshKey")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n")])])]),e("p",[t._v("Following sections needs to be modified as required in\ninstall-config.yaml file")]),t._v(" "),e("p",[e("strong",[t._v("baseDomain")]),t._v(" : The domain name for the cluster. For example,\nexample.com")]),t._v(" "),e("p",[e("strong",[t._v("metadata:")])]),t._v(" "),e("p",[e("strong",[t._v("name")]),t._v(": The name to be given to the OpenShift Container Platform\ncluster. For example, openshift")]),t._v(" "),e("p",[e("strong",[t._v("networking:")])]),t._v(" "),e("p",[e("strong",[t._v("machineCIDR")]),t._v(": The public CIDR of the external network. For example,\n10.0.0.0/16.")]),t._v(" "),e("p",[e("strong",[t._v("apiVIP")]),t._v(": The VIP to use for internal API communication. IP address of\napi. .<clustername.clusterdomain>")]),t._v(" "),e("p",[e("strong",[t._v("ingressVIP:")]),t._v(" The VIP to use for ingress traffic. Ex: IP address of\ntest.apps.<clustername.clusterdomain>")]),t._v(" "),e("p",[e("strong",[t._v("bootstrapProvisioningIP:")]),t._v(" Set this value to an IP address that is\navailable on the baremetal network")]),t._v(" "),e("p",[e("strong",[t._v("provisioningHostIP")]),t._v(": Set this parameter to an available IP address on\nthe baremetal network")]),t._v(" "),e("p",[e("strong",[t._v("bmc:")]),t._v(" Update with correct username, password and bootMACAddress of\nrespective nodes")]),t._v(" "),e("p",[t._v("Following sections needs to be modified as required in\ninstall-config.yaml file")]),t._v(" "),e("p",[e("strong",[t._v("baseDomain")]),t._v(" : The domain name for the cluster. For example,\nexample.com")]),t._v(" "),e("p",[e("strong",[t._v("metadata:")])]),t._v(" "),e("p",[e("strong",[t._v("name")]),t._v(": The name to be given to the OpenShift Container Platform\ncluster. For example, openshift")]),t._v(" "),e("p",[e("strong",[t._v("networking:")])]),t._v(" "),e("p",[e("strong",[t._v("machineCIDR")]),t._v(": The public CIDR of the external network. For example,\n10.0.0.0/16.")]),t._v(" "),e("p",[e("strong",[t._v("apiVIP")]),t._v(": The VIP to use for internal API communication. IP address of\napi. .<clustername.clusterdomain>")]),t._v(" "),e("p",[e("strong",[t._v("ingressVIP:")]),t._v(" The VIP to use for ingress traffic. Ex: IP address of\ntest.apps.<clustername.clusterdomain>")]),t._v(" "),e("p",[e("strong",[t._v("bootstrapProvisioningIP:")]),t._v(" Set this value to an IP address that is\navailable on the baremetal network")]),t._v(" "),e("p",[e("strong",[t._v("provisioningHostIP")]),t._v(": Set this parameter to an available IP address on\nthe baremetal network")]),t._v(" "),e("p",[e("strong",[t._v("bmc:")]),t._v(" Update with correct username, password and bootMACAddress of\nrespective nodes")]),t._v(" "),e("h4",{attrs:{id:"create-a-directory-to-store-cluster-configs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-a-directory-to-store-cluster-configs"}},[t._v("#")]),t._v(" Create a directory to store cluster configs")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" ~/clusterconfigs\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" install-config.yaml ~/clusterconfigs\n")])])]),e("h3",{attrs:{id:"create-the-ocp-manifests"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-the-ocp-manifests"}},[t._v("#")]),t._v(" Create the OCP manifests")]),t._v(" "),e("p",[t._v("Run below command to generate manifests files")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ./openshift-baremetal-install --dir ~/clusterconfigs create\nmanifests\n")])])]),e("h3",{attrs:{id:"deploying-the-ocp-cluster"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deploying-the-ocp-cluster"}},[t._v("#")]),t._v(" Deploying the OCP cluster")]),t._v(" "),e("p",[t._v("Run below command to deploy the ocp cluster")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ./openshift-baremetal-install --dir ~/clusterconfigs --log-level\ndebug create cluster\n")])])]),e("p",[e("strong",[t._v("Output")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("DEBUG Still waiting for the cluster to initialize: Working towards\n4.6.3: 100% complete\n\nDEBUG Still waiting for the cluster to initialize: Cluster operator\nauthentication is reporting a failure: WellKnownReadyControllerDegraded:\nkube-apiserver oauth endpoint\n<https://10.0.26.60:6443/.well-known/oauth-authorization-server> is not\nyet served and authentication operator keeps waiting (check\nkube-apiserver operator, and check that instances roll out successfully,\nwhich can take several minutes per instance)\n\nDEBUG Cluster is initialized\n\nINFO Waiting up to 10m0s for the openshift-console route to be\ncreated...\n\nDEBUG Route found in openshift-console namespace: console\n\nDEBUG Route found in openshift-console namespace: downloads\n\nDEBUG OpenShift console route is created\n\nINFO Install complete!\n\nINFO To access the cluster as the system:admin user when using 'oc',\nrun 'export KUBECONFIG=/home/kni/clusterconfigs/auth/kubeconfig'\n\nINFO Access the OpenShift web-console here:\n<https://console-openshift-console.apps.ipi.tennet.local>\n\nINFO Login to the console with user: \"kubeadmin\", and password:\n\"K3zqG-mw9oF-PtZGR-zbhIS\"\n\nDEBUG Time elapsed per stage:\n\nDEBUG Infrastructure: 20m4s\n\nDEBUG Bootstrap Complete: 24m53s\n\nDEBUG Bootstrap Destroy: 11s\n\nDEBUG Cluster Operators: 43m44s\n\nINFO Time elapsed: 1h33m18s\n\nINFO Install complete!\n")])])]),e("h3",{attrs:{id:"validation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#validation"}},[t._v("#")]),t._v(" Validation")]),t._v(" "),e("p",[t._v("Verify all nodes are available")]),t._v(" "),e("p",[e("img",{attrs:{src:a(397),alt:""}})]),t._v(" "),e("p",[t._v("Verify all cluster operator are available")]),t._v(" "),e("p",[e("img",{attrs:{src:a(398),alt:""}})])])}),[],!1,null,null,null);s.default=n.exports}}]);