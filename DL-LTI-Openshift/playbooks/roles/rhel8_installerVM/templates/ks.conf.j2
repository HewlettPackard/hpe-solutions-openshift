###
## Copyright (2021) Hewlett Packard Enterprise Development LP
##
## Licensed under the Apache License, Version 2.0 (the "License");
## You may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
## http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
####

#version=RHEL8
# Use graphical install
graphical

repo --name="AppStream" --baseurl=file:///run/install/sources/mount-0000-cdrom/AppStream

%packages
#@^graphical-server-environment
@^minimal-environment
@core
bind-utils
kexec-tools
kexec-tools

%end

# Keyboard layouts
keyboard --xlayouts='us'
# System language
lang en_US.UTF-8

# Network information
network --bootproto=static --device=enp1s0 --ip={{ rhel8_installer_IP }} --nameserver={{ master_binddns }},{{ slave1_binddns }},{{ slave2_binddns }} --netmask={{ servers[0].Host_Netmask }} --gateway={{ servers[0].Host_Gateway }}  --activate
network  --hostname={{ rhel8_installer_hostname }}

# Use CDROM installation media
cdrom

# Run the Setup Agent on first boot
firstboot --enable

ignoredisk --only-use=vda
# Partition clearing information
clearpart --none --initlabel
# Disk partitioning information
part /boot --fstype="xfs" --ondisk=vda --size=1024
part pv.489 --fstype="lvmpv" --ondisk=vda --size=254975
volgroup rhel --pesize=4096 pv.489
logvol swap --fstype="swap" --size=1024 --name=swap --vgname=rhel
logvol / --fstype="xfs" --size=253947 --name=root --vgname=rhel


# System timezone
timezone America/New_York --isUtc


# Root password
rootpw  {{ rhel8_installer_password }}


%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%post
{% if squid_proxy_IP != None %}
echo "FTP_PROXY=http://{{ squid_proxy_IP }}:{{ squid_port }}" >> /etc/environment
echo "https_proxy=http://{{ squid_proxy_IP }}:{{ squid_port }}" >> /etc/environment
echo "http_proxy=http://{{ squid_proxy_IP }}:{{ squid_port }}" >> /etc/environment
echo "no_proxy={% for item in ocp_bootstrap %}{{ item.ip }},{{ item.name }},{{ item.fqdn }}{% endfor %},{{ squid_proxy_IP }},{{ VIP }},{{ haproxy_fqdn }},{% for item in ocp_masters %}{{ item.ip }},{{ item.name }},{{ item.fqdn }},{% endfor %}{% for item in ocp_workers %}{{ item.ip }},{{ item.name }},{{ item.fqdn }},{% endfor %}*.apps,{{ common.customerforwarderdns_fqdn }},{{ common.base_domain }},localaddress,.localdomain.com,.hpecorp.net,.cluster.local,.svc,172.30.0.0/16,172.17.0.0/16,10.1.0.0/16,10.0.0.1,10.0.0.2,10.0.0.3,{{ common.solution_subnet_ip }},localhost,127.0.0.1,https://k8s.gcr.io/v2/,https://registry-1.docker.io,https://k8s.gcr.io/v2,quay.io,{{ master_binddns }},{{ slave1_binddns }},{{ slave2_binddns }},{% for item in dns_forwarder %}{{ item.ip }},{% endfor %}api.{{ common.app_domain }},api-int.{{ common.app_domain }},api,api-int,.apps.{{ common.app_domain }}" >> /etc/environment
echo "HTTPS_PROXY=http://{{ squid_proxy_IP }}:{{ squid_port }}" >> /etc/environment
echo "ftp_proxy=http://{{ squid_proxy_IP }}:{{ squid_port }}" >> /etc/environment
{% endif %}
%end 

%post
sed -i 's/SELINUX=enforcing/SELINUX=permissive/g' /etc/selinux/config
%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end

reboot
