---
    - name: Checking if the host is already registered?
      shell: subscription-manager status | grep -e "Current"|awk '{print $3}'
      register: issubscribed
      ignore_errors: yes

    - name: Registering hosts to Red Hat Subscription Manager
      redhat_subscription:
          state: present
          username: "{{ rhsub_username }}"
          password: "{{ rhsub_password }}"
            #          pool_ids: "{{ pool_id }}"
          force_register: yes
          auto_attach: yes
      when:
          - issubscribed.stdout.find('Current') == -1
      ignore_errors: yes

    - name: Get OCP major version from input variable
      set_fact:
        ocp_image_version : "{{ ocp_version.split('.')[0:2] | join('.') }}"

    - name: Enable the repositories required by OpenShift Container Platform 
      shell: subscription-manager repos --enable="rhel-9-for-x86_64-baseos-rpms" --enable="rhel-9-for-x86_64-appstream-rpms" --enable="fast-datapath-for-rhel-9-x86_64-rpms" --enable="rhocp-{{ ocp_image_version }}-for-rhel-9-x86_64-rpms"

    - name: Install the required packages, including openshift-ansible
      shell: yum -y install openshift-ansible openshift-clients jq
    
    - name: Copying ansible scripts to installer
      copy:
        src: "{{ base_path }}/"
        dest: "{{ base_path }}/"
        owner: root
        group: root
        mode: 775
        decrypt: no

    - name: Copy the openshift-ansible folder to the current directory
      copy:
        remote_src: yes
        src: /usr/share/ansible/openshift-ansible
        dest: "{{ base_path }}/RHEL_BareMetalworker_nodes/"
        owner: root
        group: root

    - name: create nginx.repo file
      file:
        path: "/etc/yum.repos.d/nginx.repo"
        state: touch

    - name: create nginx repo
      copy:
        dest: "/etc/yum.repos.d/nginx.repo"
        content: |
          [nginx]
          name=nginx repo
          baseurl=http://nginx.org/packages/mainline/rhel/9/$basearch/
          gpgcheck=0
          enabled=1

    - name: Install nginx
      shell: yum -y install nginx

    - name: Enable nginx
      shell: systemctl enable nginx

    - name: Start nginx
      shell: systemctl start nginx
    
    - name: Setup Chrony
      block:
        - name: Install Chrony
          ansible.builtin.package:
            name: chrony
            state: present

        - name: Configure chrony
          ansible.builtin.template:
            src: chrony.conf.j2
            dest: /etc/chrony.conf
            owner: root
            group: root
            mode: 0644

        - name: Start chrony
          ansible.builtin.service:
            name: chronyd
            state: started
            enabled: true

        - name: Allow incoming ntp traffic
          ansible.posix.firewalld:
            zone: public
            service: ntp
            permanent: yes
            state: enabled
            immediate: yes
      become: true

    - name: generate SSH key 
      openssh_keypair:
        path: "~/.ssh/id_rsa"
        type: rsa
        size: 4096
        state: present
        force: no
