#version=RHEL8
# Use graphical install
graphical

repo --name="AppStream" --baseurl=file:///run/install/sources/mount-0000-cdrom/AppStream

%packages
@^graphical-server-environment
kexec-tools

%end

# Keyboard layouts
keyboard --xlayouts='us'
# System language
lang en_US.UTF-8

# Network information
#network  --bootproto=static --device=ens5 --onboot=off  --ipv6=auto --activate
#network  --bootproto=static --device=ens6 --onboot=off --ipv6=auto --activate
network  --hostname={server[Hostname]}

# Use CDROM installation media
cdrom

# Run the Setup Agent on first boot
firstboot --enable

ignoredisk --only-use={server[Host_OS_disk]}
# Partition clearing information
clearpart --none --initlabel
# Disk partitioning information
part /boot --fstype="xfs" --ondisk={server[Host_OS_disk]} --size=1024
part /boot/efi --fstype="efi" --ondisk={server[Host_OS_disk]} --size=600 --fsoptions="umask=0077,shortname=winnt"
part pv.1087 --fstype="lvmpv" --ondisk={server[Host_OS_disk]} --size=823304
volgroup rhel --pesize=4096 pv.1087
logvol / --fstype="xfs" --size=716800 --name=root --vgname=rhel
logvol /home --fstype="xfs" --size=102400 --name=home --vgname=rhel
logvol swap --fstype="swap" --size=4096 --name=swap --vgname=rhel

# System timezone
timezone Asia/Kolkata --isUtc --nontp

# Root password
rootpw {server[Host_Password]}

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end

%post --log=/root/kickstart-post.log
set -x
var1={server[SquidProxy_IP]}
var2={server[Host_VlanID]}
if [[ $var1==None && $var2==None ]]; then
  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-{server[Bonding_Interface1]}
    TYPE=Ethernet
    NAME={server[Bonding_Interface1]}
    DEVICE={server[Bonding_Interface1]}
    ONBOOT=yes
    MASTER=bond0
    SLAVE=yes
  EOF

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-{server[Bonding_Interface2]}
    TYPE=Ethernet
    NAME={server[Bonding_Interface2]}
    DEVICE={server[Bonding_Interface2]}
    ONBOOT=yes
    MASTER=bond0
    SLAVE=yes
  EOF

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-bond0
    BONDING_OPTS="mode=active-backup downdelay=0 miimon=100 updelay=0"
    TYPE=Bond
    BONDING_MASTER=yes
    NAME=bond0
    DEVICE=bond0
    ONBOOT=yes
    AUTOCONNECT_SLAVES=yes
    BRIDGE=bridge0
  EOF

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-bridge0
    STP=no
    TYPE=Bridge
    PROXY_METHOD=none
    BROWSER_ONLY=no
    BOOTPROTO=none
    DEFROUTE=yes
    IPV4_FAILURE_FATAL=no
    IPV6INIT=yes
    IPV6_AUTOCONF=yes
    IPV6_DEFROUTE=yes
    IPV6_FAILURE_FATAL=no
    IPV6_ADDR_GEN_MODE=stable-privacy
    NAME=bridge0
    DEVICE=bridge0
    ONBOOT=yes
    AUTOCONNECT_SLAVES=yes
    IPADDR={server[Host_IP]}
    DNS1={server[Host_DNS1]}
    DNS2={server[Host_DNS2]}
    DNS3={server[Host_DNS3]}
    PREFIX={server[Host_Prefix]}
    GATEWAY={server[Host_Gateway]}
    DOMAIN={server[Host_Domain]}
  EOF
fi

if [[ $var1!= None && $var2==None ]]; then
  echo "FTP_PROXY=http://{server[SquidProxy_IP]}:{server[SquidProxy_Port]}" >> /etc/environment
  echo "https_proxy=http://{server[SquidProxy_IP]}:{server[SquidProxy_Port]}" >> /etc/environment
  echo "http_proxy=http://{server[SquidProxy_IP]}:{server[SquidProxy_Port]}" >> /etc/environment
  echo "no_proxy=localhost,127.0.0.1" >> /etc/environment
  echo "HTTPS_PROXY=http://{server[SquidProxy_IP]}:{server[SquidProxy_Port]}" >> /etc/environment
  echo "ftp_proxy=http://{server[SquidProxy_IP]}:{server[SquidProxy_Port]}" >> /etc/environment

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-{server[Bonding_Interface1]}
    TYPE=Ethernet
    NAME={server[Bonding_Interface1]}
    DEVICE={server[Bonding_Interface1]}
    ONBOOT=yes
    MASTER=bond0
    SLAVE=yes
  EOF

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-{server[Bonding_Interface2]}
    TYPE=Ethernet
    NAME={server[Bonding_Interface2]}
    DEVICE={server[Bonding_Interface2]}
    ONBOOT=yes
    MASTER=bond0
    SLAVE=yes
  EOF

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-bond0
    BONDING_OPTS="mode=active-backup downdelay=0 miimon=100 updelay=0"
    TYPE=Bond
    BONDING_MASTER=yes
    NAME=bond0
    DEVICE=bond0
    ONBOOT=yes
    AUTOCONNECT_SLAVES=yes
    BRIDGE=bridge0
  EOF

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-bridge0
    STP=no
    TYPE=Bridge
    PROXY_METHOD=none
    BROWSER_ONLY=no
    BOOTPROTO=none
    DEFROUTE=yes
    IPV4_FAILURE_FATAL=no
    IPV6INIT=yes
    IPV6_AUTOCONF=yes
    IPV6_DEFROUTE=yes
    IPV4_FAILURE_FATAL=no
    IPV6INIT=yes
    IPV6_AUTOCONF=yes
    IPV6_DEFROUTE=yes
    IPV6_FAILURE_FATAL=no
    IPV6_ADDR_GEN_MODE=stable-privacy
    NAME=bridge0
    DEVICE=bridge0
    ONBOOT=yes
    AUTOCONNECT_SLAVES=yes
    IPADDR={server[Host_IP]}
    DNS1={server[Host_DNS1]}
    DNS2={server[Host_DNS2]}
    DNS3={server[Host_DNS3]}
    PREFIX={server[Host_Prefix]}
    GATEWAY={server[Host_Gateway]}
    DOMAIN={server[Host_Domain]}
  EOF
fi

if [[ $var1==None && $var2!=None ]]; then
  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-{server[Bonding_Interface1]}
    TYPE=Ethernet
    NAME={server[Bonding_Interface1]}
    DEVICE={server[Bonding_Interface1]}
    ONBOOT=yes
    MASTER=bond0
    SLAVE=yes
  EOF

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-{server[Bonding_Interface2]}
    TYPE=Ethernet
    NAME={server[Bonding_Interface2]}
    DEVICE={server[Bonding_Interface2]}
    ONBOOT=yes
    MASTER=bond0
    SLAVE=yes
  EOF

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-bond0
    BONDING_OPTS="mode=active-backup downdelay=0 miimon=100 updelay=0"
    TYPE=Bond
    BONDING_MASTER=yes
    NAME=bond0
    DEVICE=bond0
    ONBOOT=yes
    AUTOCONNECT_SLAVES=yes
    BRIDGE=bridge0
  EOF

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-bond0.{server[Host_VlanID]}
    VLAN=yes
    TYPE=Vlan
    PHYSDEV=bond0
    VLAN_ID={server[Host_VlanID]}
    REORDER_HDR=yes
    GVRP=no
    MVRP=no
    HWADDR=
    NAME=bond0.{server[Host_VlanID]}
    DEVICE=bond0.{server[Host_VlanID]}
    ONBOOT=yes
    BRIDGE=bridge0.{server[Host_VlanID]}
  EOF

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-bridge0
    STP=no
    TYPE=Bridge
    PROXY_METHOD=none
    BROWSER_ONLY=no
    BOOTPROTO=none
    DEFROUTE=yes
    IPV4_FAILURE_FATAL=no
    IPV6INIT=yes
    IPV6_AUTOCONF=yes
    IPV6_DEFROUTE=yes
    IPV6_FAILURE_FATAL=no
    IPV6_ADDR_GEN_MODE=stable-privacy
    NAME=bridge0
    DEVICE=bridge0
    ONBOOT=yes
    AUTOCONNECT_SLAVES=yes
    IPADDR=0.0.0.0
    PREFIX=0
  EOF

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-bridge0.{server[Host_VlanID]}
    STP=no
    TYPE=Bridge
    PROXY_METHOD=none
    BROWSER_ONLY=no
    BOOTPROTO=none
    DEFROUTE=yes
    IPV4_FAILURE_FATAL=no
    IPV6INIT=yes
    IPV6_AUTOCONF=yes
    IPV6_DEFROUTE=yes
    IPV6_FAILURE_FATAL=no
    IPV6_ADDR_GEN_MODE=stable-privacy
    NAME=bridge0.{server[Host_VlanID]}
    DEVICE=bridge0.{server[Host_VlanID]}
    ONBOOT=yes
    AUTOCONNECT_SLAVES=yes
    IPADDR={server[Host_IP]}
    DNS1={server[Host_DNS1]}
    DNS2={server[Host_DNS2]}
    DNS3={server[Host_DNS3]}
    PREFIX={server[Host_Prefix]}
    GATEWAY={server[Host_Gateway]}
    DOMAIN={server[Host_Domain]}
  EOF
fi

if [[ $var1!= None && $var2!=None ]]; then
  echo "FTP_PROXY=http://{server[SquidProxy_IP]}:{server[SquidProxy_Port]}" >> /etc/environment
  echo "https_proxy=http://{server[SquidProxy_IP]}:{server[SquidProxy_Port]}" >> /etc/environment
  echo "http_proxy=http://{server[SquidProxy_IP]}:{server[SquidProxy_Port]}" >> /etc/environment
  echo "no_proxy=localhost,127.0.0.1" >> /etc/environment
  echo "HTTPS_PROXY=http://{server[SquidProxy_IP]}:{server[SquidProxy_Port]}" >> /etc/environment
  echo "ftp_proxy=http://{server[SquidProxy_IP]}:{server[SquidProxy_Port]}" >> /etc/environment

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-{server[Bonding_Interface1]}
    TYPE=Ethernet
    NAME={server[Bonding_Interface1]}
    DEVICE={server[Bonding_Interface1]}
    ONBOOT=yes
    MASTER=bond0
    SLAVE=yes
  EOF

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-{server[Bonding_Interface2]}
    TYPE=Ethernet
    NAME={server[Bonding_Interface2]}
    DEVICE={server[Bonding_Interface2]}
    ONBOOT=yes
    MASTER=bond0
    SLAVE=yes
  EOF

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-bond0
    BONDING_OPTS="mode=active-backup downdelay=0 miimon=100 updelay=0"
    TYPE=Bond
    BONDING_MASTER=yes
    NAME=bond0
    DEVICE=bond0
    ONBOOT=yes
    AUTOCONNECT_SLAVES=yes
    BRIDGE=bridge0
  EOF

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-bond0.{server[Host_VlanID]}
    VLAN=yes
    TYPE=Vlan
    PHYSDEV=bond0
    VLAN_ID={server[Host_VlanID]}
    REORDER_HDR=yes
    GVRP=no
    MVRP=no
    HWADDR=
    NAME=bond0.{server[Host_VlanID]}
    DEVICE=bond0.{server[Host_VlanID]}
    ONBOOT=yes
    BRIDGE=bridge0.{server[Host_VlanID]}
  EOF

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-bridge0
    STP=no
    TYPE=Bridge
    PROXY_METHOD=none
    BROWSER_ONLY=no
    BOOTPROTO=none
    DEFROUTE=yes
    IPV4_FAILURE_FATAL=no
    IPV6INIT=yes
    IPV6_AUTOCONF=yes
    IPV6_DEFROUTE=yes
    IPV6_FAILURE_FATAL=no
    IPV6_ADDR_GEN_MODE=stable-privacy
    NAME=bridge0
    DEVICE=bridge0
    ONBOOT=yes
    AUTOCONNECT_SLAVES=yes
    IPADDR=0.0.0.0
    PREFIX=0
  EOF

  cat <<-EOF >>/etc/sysconfig/network-scripts/ifcfg-bridge0.{server[Host_VlanID]}
    STP=no
    TYPE=Bridge
    PROXY_METHOD=none
    BROWSER_ONLY=no
    BOOTPROTO=none
    DEFROUTE=yes
    IPV4_FAILURE_FATAL=no
    IPV6INIT=yes
    IPV6_AUTOCONF=yes
    IPV6_DEFROUTE=yes
    IPV6_FAILURE_FATAL=no
    IPV6_ADDR_GEN_MODE=stable-privacy
    NAME=bridge0.{server[Host_VlanID]}
    DEVICE=bridge0.{server[Host_VlanID]}
    ONBOOT=yes
    AUTOCONNECT_SLAVES=yes
    IPADDR={server[Host_IP]}
    DNS1={server[Host_DNS1]}
    DNS2={server[Host_DNS2]}
    DNS3={server[Host_DNS3]}
    PREFIX={server[Host_Prefix]}
    GATEWAY={server[Host_Gateway]}
    DOMAIN={server[Host_Domain]}
  EOF
fi
%end

%post
sed -i 's/SELINUX=enforcing/SELINUX=permissive/g' /etc/selinux/config
%end

reboot
